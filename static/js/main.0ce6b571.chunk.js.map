{"version":3,"sources":["ultis/functions.js","pages/Login/index.jsx","pages/Dashboard/constant.js","pages/Dashboard/redux/actions.js","pages/Dashboard/component/addBusOperator.js","pages/Dashboard/component/searchInput.js","pages/Dashboard/component/busOperatorTable.js","pages/Dashboard/component/customerList.js","pages/Dashboard/component/homePage.js","pages/Dashboard/component/editOrderPage.js","pages/Dashboard/component/orderListTable.js","pages/Dashboard/component/addPromotion.js","pages/Dashboard/component/promotionDetail.js","pages/Dashboard/component/promotionList.js","pages/Dashboard/component/tripDateDetail.js","pages/Dashboard/component/addTrip.js","pages/Dashboard/component/tripTable.js","pages/Dashboard/index.jsx","pages/Loading/index.jsx","App.js","serviceWorker.js","firebaseConfig.js","ultis/api.js","pages/Dashboard/redux/epics.js","core/epic.js","pages/Dashboard/redux/reducer.js","core/reducer.js","core/store.js","index.js"],"names":["COLOR","formatCurrency","n","separate","s","toString","regex","ret","replace","Login","history","useHistory","useState","loading","setLoading","validationSchema","yup","shape","email","label","required","password","matches","message","handleLogin","values","firebase","auth","signInWithEmailAndPassword","then","push","catch","error","code","Modal","title","content","handleKeyPress","isValid","event","key","id","className","initialValues","isInitialValid","onSubmit","handleChange","handleBlur","handleSubmit","errors","setFieldTouched","touched","value","onChange","onTouchStart","onBlur","placeholder","onKeyPress","type","disabled","style","backgroundColor","onClick","size","CUSTOMER_STATUS","PAGE","PAYMENT_TYPE","text","PAYMENT_TITLE","DIRECT","BANK_TRANSFER","ATM_PAY","MASTER_VISA","MOMO_PAY","GetBusOperator","defineAction","GetBusOperatorSuccess","GetBusOperatorFailed","GetTripList","GetTripListSuccess","GetTripListFailed","GetOrderList","GetOrderListSuccess","GetOrderListFailed","SetTypeAccount","GetCustomerList","GetCustomerListSuccess","GetCustomerListFailed","GetBusOperatorDetail","GetBusOperatorDetailSuccess","GetBusOperatorDetailFailed","GetAccountType","GetOrderDetail","GetOrderDetailSuccess","GetOrderDetailFailed","EditOrderDetail","EditOrderDetailSuccess","EditOrderDetailFailed","GetMapSeat","GetMapSeatSuccess","GetMapSeatFailed","SetCurrentPage","ResetDashboard","GetStatistic","GetStatisticSuccess","GetStatisticFailed","GetStatisticAmount","GetStatisticAmountSuccess","GetStatisticAmountFailed","GetCityData","GetCityDataSuccess","GetCityDataFailed","GetDistrictData","GetDistrictSuccess","GetDistrictFailed","GetWardData","GetWardDataSuccess","GetWardDataFailed","GetPromotion","GetPromotionSuccess","GetPromotionFailed","CreateNewPromotion","CreateNewPromotionSuccess","CreateNewPromotionFailed","DeletePromotion","DeletePromotionSuccess","DeletePromotionFailed","ActivatePromotion","ActivatePromotionSuccess","ActivatePromotionFailed","GetDetailPromotion","GetDetailPromotionSuccess","GetDetailPromotionFailed","AddBusOperator","AddBusOperatorSuccess","AddBusOperatorFailed","DeleteBusOperator","DeleteBusOperatorSuccess","DeleteBusOperatorFailed","DeleteTrip","DeleteTripSuccess","DeleteTripFailed","GetCitiesTrip","GetCitiesTripSuccess","GetCitiesTripFailed","GetBusType","GetBusTypeSuccess","GetBusTypeFailed","Option","Select","beforeUpload","file","isJpgOrPng","firstError","address","operatorName","phoneNumber","contact","loadingIcon","LoadingOutlined","fontSize","color","spin","AddBusOperatorPage","props","isLoading","useSelector","state","Dashboard","cityData","districtData","wardData","dispatch","useDispatch","cityCode","setCityCode","districtCode","setDistrictCode","wardCode","setWardCode","isLoadingImage","setLoadingImage","trim","ward","onChangeCity","get","onChangeDistrict","indicator","handleChangeAvatar","info","status","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","uploadButton","PlusOutlined","fontFamily","avatar","initialErrors","axios","request","url","timeout","params","countrySet","lat","lon","language","method","res","results","data","name","length","position","long","onOk","handleAdd","alignItems","display","width","listType","showUploadList","action","src","alt","flexDirection","nameWithType","undefined","allowClear","bordered","map","item","index","pathWithType","onChangeWard","borderColor","currentPage","getColumnSearchProps","dataIndex","searchPlaceholder","searchText","setSearchText","searchedColumn","setSearchColumn","refInput","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","e","target","onPressEnter","handleSearch","marginBottom","icon","SearchOutlined","handleReset","filterIcon","filtered","onFilter","record","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","current","select","render","highlightStyle","searchWords","autoEscape","textToHighlight","BusOperator","busOperator","detailPage","useRef","useEffect","busOperatorColumns","sorter","a","b","localeCompare","PlusCircleOutlined","columns","dataSource","CustomerList","customerList","filteredInfo","setFilterInfo","customerColumns","identityId","filters","filteredValue","paymentStatus","pagination","RangePicker","DatePicker","Home","accountType","accountDetail","stastic","statisticData","busOperatorId","totalTicket","totalPaid","totalNotPaid","totalAmount","locale","viVN","dateStr","from","to","handleChangeRange","format","moment","height","margin","top","right","bottom","left","dataKey","stroke","strokeDasharray","xtype","offset","angle","tickFormatter","number","formatter","EditOrderPage","orderDetail","routes","breadcrumbName","ticketId","itemRender","route","paths","textDecorationColor","separator","customerName","customerEmail","dateBooked","totalTicketAmount","seatId","join","totalPrice","paymentCode","defaultValue","tripId","timeStart","departureDay","ticket","OrderList","orderList","getOrderList","orderColumns","compare","EditOutlined","search","handleEdit","TextArea","Input","promotionCode","promotionName","quantity","promotionPercent","AddPromotionPage","min","max","Date","add","description","active","Number","setFieldValue","toUpperCase","disabledDate","d","isBefore","marginLeft","marginRight","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","checked","act","rows","PromotionDetailPage","promotionDetail","minWidth","textAlign","PromotionList","promotions","promotionColumns","diff","EyeOutlined","DeleteOutlined","okText","cancelText","centered","okButtonProps","destroyAll","handleDelete","TripDateDetail","tripDetail","seats","trip","date","renderOneSeat","seat","goToOrderDetail","renderSeat","floor","flex","marginTop","busTypeTitle","busType","handleChangeDate","floor1","floor2","AddTripPage","citiesTrip","price","onChangeCityFrom","onChangeCityTo","onChangeBusType","thumbnail","dropOff","pickUp","timeEnd","cityTitle","TripList","tripList","getTripList","tripsColumns","isLoadingDashboard","onAuthStateChanged","user","database","child","currentUser","uid","once","snapshot","val","defaultSelectedKeys","mode","onSelect","keyPath","domEvent","Item","LineChartOutlined","ContactsOutlined","signOut","renderRightDashboard","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loading","justifyContent","options","App","exact","path","Boolean","window","location","hostname","match","param","parameters","headers","accept","pipe","tap","JSON","stringify","log","dashboardEpics","combineEpics","action$","ofType","exhaustMap","payload","store","catchError","getState","rootEpic","initialState","rootReducer","combineReducers","epicMiddleware","createEpicMiddleware","applyMiddlewarePro","applyMiddleware","logger","createStore","run","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","StrictMode","Provider","verticalAlign","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.0ce6b571.chunk.js","sourcesContent":["export const DOMAIN = 'https://us-central1-dimo-3e6f7.cloudfunctions.net/dimoApi/api'\r\nexport const __DEV__ = false;\r\nexport const MAP_API_KEY = 'TEAlw14hsaluWM6HF4xhqoSEGD7KWIyA'\r\nexport const COLOR = {\r\n  primary: '#2E4170',\r\n  orange: '#FF7000',\r\n  lightBlue: '#3CA0F7',\r\n  gray: '#C4C4C4'\r\n}\r\n\r\nexport function log(...arg) {\r\n  if (__DEV__) {\r\n    console.info(\r\n      arg\r\n        .map((i) =>\r\n          ['string', 'number'].indexOf(typeof i) === -1 ? JSON.stringify(i, null, ' ') : i,\r\n        )\r\n        .join(' '),\r\n    );\r\n  }\r\n}\r\n\r\nexport function formatCurrency(n, separate = '.') {\r\n  var s = n.toString();\r\n  var regex = /\\B(?=(\\d{3})+(?!\\d))/g;\r\n  var ret = s.replace(regex, separate);\r\n  return ret;\r\n}\r\n","import { Input, Modal, Button } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport * as yup from \"yup\";\r\nimport \"./login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { COLOR } from \"ultis/functions\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .label(\"Email\")\r\n      .email(\"Email hiện tại không hợp lệ\")\r\n      .required(\"* Vui lòng nhập email\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"* Vui lòng nhập mật khẩu\")\r\n      .matches(/(?=.{8,})/, {\r\n        message: \"Mật khẩu phải gồm 8 kí tự\",\r\n      }),\r\n  });\r\n\r\n  const handleLogin = (values) => {\r\n    setLoading(true);\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(values.email, values.password)\r\n      .then(() => {\r\n        setLoading(false);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.code === \"auth/user-not-found\") {\r\n          Modal.error({\r\n            title: \"Không tìm thấy\",\r\n            content: \"Không tìm thấy người dùng này.\",\r\n          });\r\n        } else if (error.code === \"auth/wrong-password\") {\r\n          Modal.error({\r\n            title: \"Sai mật khẩu\",\r\n            content: \"Bạn đã nhập sai mật khẩu.\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === \"Enter\") {\r\n      handleLogin(values);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"loginBg\">\r\n      <span className=\"dimoName\">dimo</span>\r\n      <div id=\"loginBox\">\r\n        <span id=\"loginStyle\">Đăng nhập</span>\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          isInitialValid={false}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => handleLogin(values)}\r\n        >\r\n          {({\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            values,\r\n            isValid,\r\n            errors,\r\n            touched,\r\n            setFieldTouched,\r\n          }) => {\r\n            return (\r\n              <Form>\r\n                <Input\r\n                  id=\"inputBox\"\r\n                  value={values.email}\r\n                  onChange={handleChange(\"email\")}\r\n                  onTouchStart={() => setFieldTouched(\"email\")}\r\n                  onBlur={handleBlur(\"email\")}\r\n                  placeholder=\"Email\"\r\n                  onKeyPress={(event) => handleKeyPress(isValid, event, values)}\r\n                />\r\n                {errors.email && <span id=\"errorStyle\">{errors.email}</span>}\r\n                <Input\r\n                  id=\"inputBox\"\r\n                  type=\"password\"\r\n                  onChange={handleChange(\"password\")}\r\n                  onTouchStart={() => setFieldTouched(\"password\")}\r\n                  value={values.password}\r\n                  onBlur={handleBlur(\"password\")}\r\n                  placeholder=\"Mật khẩu\"\r\n                  onKeyPress={(event) => handleKeyPress(isValid, event, values)}\r\n                />\r\n                {errors.password && (\r\n                  <span id=\"errorStyle\">{errors.password}</span>\r\n                )}\r\n                <Button\r\n                  id=\"loginBtn\"\r\n                  disabled={!isValid}\r\n                  style={{ backgroundColor: isValid ? COLOR.primary : \"gray\" }}\r\n                  onClick={handleSubmit}\r\n                  size={\"large\"}\r\n                  loading={loading}\r\n                >\r\n                  Đăng nhập\r\n                </Button>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","export const CUSTOMER_STATUS = {\r\n  NOT_PAID: \"NOT_PAID\",\r\n  PAID: \"PAID\",\r\n  NO_ACTIVITY: \"NO_ACTIVITY\",\r\n};\r\n\r\nexport const PAGE = {\r\n  HOME: \"HOME\",\r\n  BUS_OPERATOR: 'BUS_OPERATOR',\r\n  PROMOTIONS: \"PROMOTIONS\",\r\n  TRIP_LIST: 'TRIP_LIST',\r\n  ORDER_LIST: 'ORDER_LIST',\r\n  CUSTOMER_LIST: 'CUSTOMER_LIST',\r\n  ORDER_DETAIL: \"ORDER_DETAIL\",\r\n  TRIP_DETAIL: \"TRIP_DETAIL\",\r\n  ADD_OPERATOR: \"ADD_OPERATOR\",\r\n  ADD_PROMOTION: 'ADD_PROMOTION',\r\n  DETAIL_PROMOTION: 'DETAIL_PROMOTION',\r\n  ADD_TRIP: 'ADD_TRIP'\r\n};\r\n\r\nexport const PAYMENT_TYPE = [\r\n  {\r\n    value: \"DIRECT\",\r\n    text: \"Trực tiếp\",\r\n  },\r\n  {\r\n    value: \"BANK_TRANSFER\",\r\n    text: \"Chuyển khoản\",\r\n  },\r\n  {\r\n    value: \"ATM_PAY\",\r\n    text: \"Thẻ nội địa\",\r\n  },\r\n  {\r\n    value: \"MASTER_VISA\",\r\n    text: \"Thẻ Visa/Mastercard\",\r\n  },\r\n  {\r\n    value: \"MOMO_PAY\",\r\n    text: \"Ví điện tử MOMO\",\r\n  },\r\n];\r\n\r\nexport const PAYMENT_TITLE = {\r\n  DIRECT: \"Trực tiếp\",\r\n  BANK_TRANSFER: \"Chuyển khoản\",\r\n  ATM_PAY: \"Thẻ nội địa\",\r\n  MASTER_VISA: \"Thẻ Visa/Mastercard\",\r\n  MOMO_PAY: \"Ví điện tử MOMO\",\r\n};\r\n","import { defineAction } from 'redux-typed-actions'\r\n\r\nexport const GetBusOperator = defineAction('GET_BUS_OPERATOR_REQUEST')\r\nexport const GetBusOperatorSuccess = defineAction('GET_BUS_OPERATOR_SUCCESS')\r\nexport const GetBusOperatorFailed = defineAction('GET_BUS_OPERATOR_FAILED')\r\n\r\nexport const GetTripList = defineAction('GET_TRIP_LIST_REQUEST')\r\nexport const GetTripListSuccess = defineAction('GET_TRIP_LIST_SUCCESS')\r\nexport const GetTripListFailed = defineAction('GET_TRIP_LIST_FAILED')\r\n\r\nexport const GetOrderList = defineAction('GET_ORDER_LIST_REQUEST')\r\nexport const GetOrderListSuccess = defineAction('GET_ORDER_LIST_SUCCESS')\r\nexport const GetOrderListFailed = defineAction('GET_ORDER_LIST_FAILED')\r\n\r\nexport const SetTypeAccount = defineAction('SET_TYPE_ACCOUNT')\r\n\r\nexport const GetCustomerList = defineAction('GET_CUSTOMER_LIST_REQUEST')\r\nexport const GetCustomerListSuccess = defineAction('GET_CUSTOMER_LIST_SUCCESS')\r\nexport const GetCustomerListFailed = defineAction('GET_CUSTOMER_LIST_FAILED')\r\n\r\nexport const GetBusOperatorDetail = defineAction('GET_BUS_OPERATOR_DETAIL_REQUEST')\r\nexport const GetBusOperatorDetailSuccess = defineAction('GET_BUS_OPERATOR_DETAIL_SUCCESS')\r\nexport const GetBusOperatorDetailFailed = defineAction('GET_BUS_OPERATOR_DETAIL_FAILED')\r\n\r\nexport const GetAccountType = defineAction('GET_TYPE_ACCOUNT')\r\n\r\nexport const GetOrderDetail = defineAction('GET_ORDER_DETAIL_REQUEST')\r\nexport const GetOrderDetailSuccess = defineAction('GET_ORDER_DETAIL_SUCCESS')\r\nexport const GetOrderDetailFailed = defineAction('GET_ORDER_DETAIL_FAILED')\r\n\r\nexport const GetTripDetail = defineAction('GET_TRIP_DETAIL_REQUEST')\r\nexport const GetTripDetailSuccess = defineAction('GET_TRIP_DETAIL_SUCCESS')\r\nexport const GetTripDetailFailed = defineAction('GET_TRIP_DETAIL_FAILED')\r\n\r\nexport const EditOrderDetail = defineAction('EDIT_ORDER_DETAIL_REQUEST')\r\nexport const EditOrderDetailSuccess = defineAction('EDIT_ORDER_DETAIL_SUCCESS')\r\nexport const EditOrderDetailFailed = defineAction('EDIT_ORDER_DETAIL_FAILED')\r\n\r\nexport const GetMapSeat = defineAction('GET_MAP_SEAT_REQUEST')\r\nexport const GetMapSeatSuccess = defineAction('GET_MAP_SEAT_SUCCESS')\r\nexport const GetMapSeatFailed = defineAction('GET_MAP_SEAT_FAILED')\r\n\r\nexport const SetCurrentPage = defineAction('SET_CURRENT_PAGE')\r\nexport const ResetDashboard = defineAction('RESET_DASHBOARD')\r\n\r\nexport const GetStatistic = defineAction('GET_STATISTIC_REQUEST')\r\nexport const GetStatisticSuccess = defineAction('GET_STATISTIC_SUCCESS')\r\nexport const GetStatisticFailed = defineAction('GET_STATISTIC_FAILED')\r\n\r\nexport const GetStatisticAmount = defineAction('GET_STATISTIC_AMOUNT_REQUEST')\r\nexport const GetStatisticAmountSuccess = defineAction('GET_STATISTIC_AMOUNT_SUCCESS')\r\nexport const GetStatisticAmountFailed = defineAction('GET_STATISTIC_AMOUNT_FAILED')\r\n\r\nexport const GetCityData = defineAction('GET_CITY_DATA_REQUEST')\r\nexport const GetCityDataSuccess = defineAction('GET_CITY_DATA_SUCCESS')\r\nexport const GetCityDataFailed = defineAction('GET_CITY_DATA_FAILED')\r\n\r\nexport const GetDistrictData = defineAction('GET_DISTRICT_DATA_REQUEST')\r\nexport const GetDistrictSuccess = defineAction('GET_DISTRICT_DATA_SUCCESS')\r\nexport const GetDistrictFailed = defineAction('GET_DISTRICT_DATA_FAILED')\r\n\r\nexport const GetWardData = defineAction('GET_WARD_DATA_REQUEST')\r\nexport const GetWardDataSuccess = defineAction('GET_WARD_DATA_SUCCESS')\r\nexport const GetWardDataFailed = defineAction('GET_WARD_DATA_FAILED')\r\n\r\nexport const GetPromotion = defineAction('GET_PROMOTION_REQUEST')\r\nexport const GetPromotionSuccess = defineAction('GET_PROMOTION_SUCCESS')\r\nexport const GetPromotionFailed = defineAction('GET_PROMOTION_FAILED')\r\n\r\nexport const CreateNewPromotion = defineAction('CREATE_NEW_PROMOTION_REQUEST')\r\nexport const CreateNewPromotionSuccess = defineAction('CREATE_NEW_PROMOTION_SUCCESS')\r\nexport const CreateNewPromotionFailed = defineAction('CREATE_NEW_PROMOTION_FAILED')\r\n\r\nexport const DeletePromotion = defineAction('DELETE_PROMOTION_REQUEST')\r\nexport const DeletePromotionSuccess = defineAction('DELETE_PROMOTION_SUCCESS')\r\nexport const DeletePromotionFailed = defineAction('DELETE_PROMOTION_FAILED')\r\n\r\nexport const ActivatePromotion = defineAction('ACTIVATE_PROMOTION_REQUEST')\r\nexport const ActivatePromotionSuccess = defineAction('ACTIVATE_PROMOTION_SUCCESS')\r\nexport const ActivatePromotionFailed = defineAction('ACTIVATE_PROMOTION_FAILED')\r\n\r\nexport const GetDetailPromotion = defineAction('GET_DETAIL_PROMOTION_REQUEST')\r\nexport const GetDetailPromotionSuccess = defineAction('GET_DETAIL_PROMOTION_SUCCESS')\r\nexport const GetDetailPromotionFailed = defineAction('GET_DETAIL_PROMOTION_FAILED')\r\n\r\nexport const AddBusOperator = defineAction('ADD_BUS_OPERATOR_REQUEST')\r\nexport const AddBusOperatorSuccess = defineAction('ADD_BUS_OPERATOR_SUCCESS')\r\nexport const AddBusOperatorFailed = defineAction('ADD_BUS_OPERATOR_FAILED')\r\n\r\nexport const DeleteBusOperator = defineAction('DELETE_BUS_OPERATOR_REQUEST')\r\nexport const DeleteBusOperatorSuccess = defineAction('DELETE_BUS_OPERATOR_SUCCESS')\r\nexport const DeleteBusOperatorFailed = defineAction('DELETE_BUS_OPERATOR_FAILED')\r\n\r\nexport const DeleteTrip = defineAction('DELETE_TRIP_REQUEST')\r\nexport const DeleteTripSuccess = defineAction('DELETE_TRIP_SUCCESS')\r\nexport const DeleteTripFailed = defineAction('DELETE_TRIP_FAILED')\r\n\r\nexport const GetCitiesTrip = defineAction('GET_CITIES_REQUEST')\r\nexport const GetCitiesTripSuccess = defineAction('GET_CITIES_SUCCESS')\r\nexport const GetCitiesTripFailed = defineAction('GET_CITIES_FAILED')\r\n\r\nexport const GetBusType = defineAction('GET_BUS_TYPE_REQUEST')\r\nexport const GetBusTypeSuccess = defineAction('GET_BUS_TYPE_SUCCESS')\r\nexport const GetBusTypeFailed = defineAction('GET_BUS_TYPE_FAILED')","import { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, message, Select, Spin, Upload, Modal } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR, MAP_API_KEY } from \"ultis/functions\";\r\nimport * as yup from \"yup\";\r\nimport { PAGE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetDistrictData, GetWardData, SetCurrentPage, AddBusOperator } from \"../redux/actions\";\r\nimport axios from 'axios';\r\n\r\nconst { Option } = Select;\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('Chỉ được phép sử dụng JPG hoặc PNG!');\r\n  }\r\n  return isJpgOrPng;\r\n}\r\n\r\nconst firstError = {\r\n  address: '* Vui lòng nhập địa chỉ', operatorName: \"* Vui lòng nhập tên nhà xe\", phoneNumber: \"* Vui lòng nhập số điện thoại\", email: \"* Vui lòng nhập email\", contact: \"* Vui lòng nhập người liên hệ\"\r\n}\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction AddBusOperatorPage(props) {\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const cityData = useSelector((state) => state.Dashboard.cityData);\r\n  const districtData = useSelector((state) => state.Dashboard.districtData);\r\n  const wardData = useSelector((state) => state.Dashboard.wardData);\r\n  const dispatch = useDispatch();\r\n  const [cityCode, setCityCode] = useState(null)\r\n  const [districtCode, setDistrictCode] = useState(null)\r\n  const [wardCode, setWardCode] = useState(null)\r\n  const [isLoadingImage, setLoadingImage] = useState(false)\r\n\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .label(\"Email\")\r\n      .email(\"Email hiện tại không hợp lệ\")\r\n      .required(\"* Vui lòng nhập email\"),\r\n    phoneNumber: yup\r\n      .string()\r\n      .required('* Vui lòng nhập số điện thoại')\r\n      .matches(/((09|03|07|08|05)+([0-9]{8})\\b)/, {\r\n        message: 'Số điện thoại không hợp lệ',\r\n      }),\r\n    operatorName: yup\r\n      .string()\r\n      .trim()\r\n      .required('* Vui lòng nhập tên nhà xe')\r\n      .matches(\r\n        /[^a-z0-9A-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]/u,\r\n        {\r\n          message: 'Tên nhà xe không hợp lệ',\r\n        },\r\n      ),\r\n    contact: yup\r\n      .string()\r\n      .trim()\r\n      .required('* Vui lòng nhập người liên hệ')\r\n      .matches(\r\n        /[^a-z0-9A-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]/u,\r\n        {\r\n          message: 'Tên người liên hệ không hợp lệ',\r\n        },\r\n      ),\r\n    address: yup\r\n      .string()\r\n      .required('* Vui lòng nhập địa chỉ'),\r\n    ward: yup.string().required('* Vui lòng nhập địa chỉ')\r\n  });\r\n\r\n  const onChangeCity = (value) => {\r\n    setCityCode(cityData[value])\r\n    setDistrictCode(null)\r\n    setWardCode(null)\r\n    dispatch(GetDistrictData.get({ cityCode: cityData[value].code }))\r\n  }\r\n\r\n  const onChangeDistrict = (value) => {\r\n    setDistrictCode(districtData[value])\r\n    setWardCode(null)\r\n    dispatch(GetWardData.get({ cityCode: cityCode.code, districtCode: districtData[value].code }))\r\n  }\r\n\r\n  const onChangeWard = (value, handleChange) => {\r\n    setWardCode(wardData[value])\r\n    handleChange('ward')(wardData[value].pathWithType)\r\n  }\r\n\r\n  const handleAdd = (values) => {\r\n    axios.request({\r\n      url: `https://api.tomtom.com/search/2/geocode/${values.address}, ${values.ward}.json`,\r\n      timeout: 10000,\r\n      params: {\r\n        countrySet: 'VN',\r\n        lat: 10,\r\n        lon: 106,\r\n        language: 'vi-VN',\r\n        key: MAP_API_KEY\r\n      },\r\n      method: 'GET',\r\n    }).then(res => {\r\n      const { results } = res.data\r\n      let data = {\r\n        avatar: values.avatar,\r\n        email: values.email,\r\n        contact: values.contact,\r\n        address: `${values.address}, ${values.ward}`,\r\n        name: values.operatorName,\r\n        phoneNumber: values.phoneNumber\r\n      }\r\n      if (results && results.length > 0) {\r\n        data = {\r\n          ...data,\r\n          lat: results[0].position.lat,\r\n          long: results[0].position.lon\r\n        }\r\n      }\r\n      dispatch(AddBusOperator.get(data))\r\n    }).catch(error => Modal.info({\r\n      title: 'Lỗi',\r\n      content: 'Đã có lỗi xảy ra. Vui lòng thử lại sau.',\r\n      onOk() { },\r\n    }))\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleChangeAvatar = (info, handleChange) => {\r\n    if (info.file.status === 'uploading') {\r\n      setLoadingImage(true)\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      getBase64(info.file.originFileObj, imageUrl => {\r\n        handleChange('avatar')(imageUrl)\r\n        setLoadingImage(false)\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {isLoadingImage ? <LoadingOutlined style={{ color: COLOR.primary }} /> : <PlusOutlined />}\r\n      <div className=\"ant-upload-text\" style={{ fontFamily: 'Source Sans Pro' }}>{isLoadingImage ? 'Đang tải lên' : 'Tải lên'}</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Thêm nhà xe</span>\r\n      <Formik\r\n        initialValues={{ avatar: null, operatorName: \"\", address: \"\", ward: '', phoneNumber: \"\", email: \"\", contact: \"\" }}\r\n        initialErrors={firstError}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => handleAdd(values)}\r\n      >\r\n        {({\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          values,\r\n          isValid,\r\n          errors,\r\n          touched,\r\n          setFieldTouched,\r\n        }) => {\r\n          return (\r\n            <Form>\r\n              <div className='rowAdd' style={{ alignItems: 'flex-start' }}>\r\n                <span className='addTitle'>Ảnh đại diện:</span>\r\n                <div style={{ display: 'flex', width: 100 }}>\r\n                  <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                    beforeUpload={beforeUpload}\r\n                    onChange={info => handleChangeAvatar(info, handleChange)}\r\n                  >\r\n                    {values.avatar ? <img src={values.avatar} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                  </Upload>\r\n                </div>\r\n              </div>\r\n              {errors.avatar && <span className=\"errorAdd\">{errors.avatar}</span>}\r\n\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Tên nhà xe:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.operatorName}\r\n                  onChange={handleChange(\"operatorName\")}\r\n                  onTouchStart={() => setFieldTouched(\"operatorName\")}\r\n                  onBlur={handleBlur(\"operatorName\")}\r\n                  placeholder=\"Nhập tên nhà xe\"\r\n                />\r\n\r\n              </div>\r\n              {errors.operatorName && <span className=\"errorAdd\">{errors.operatorName}</span>}\r\n              <div className='rowAdd' style={{ alignItems: 'flex-start' }}>\r\n                <span className='addTitle'>Địa chỉ:</span>\r\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                  <Select\r\n                    placeholder='Chọn tỉnh/thành phố'\r\n                    value={cityCode ? cityCode.nameWithType : undefined}\r\n                    className='dropdownCity'\r\n                    allowClear={false}\r\n                    bordered\r\n                    onChange={onChangeCity}\r\n                  >\r\n                    {cityData && cityData.map((item, index) => <Option value={index}>{item.nameWithType}</Option>)}\r\n                  </Select>\r\n                  <div id='rowDis'>\r\n                    <Select\r\n                      placeholder='Chọn quận/huyện'\r\n                      value={districtCode ? districtCode.nameWithType : undefined}\r\n                      className='dropdownNormal'\r\n                      allowClear={false}\r\n                      disabled={!(districtData && districtData.length > 0)}\r\n                      onChange={onChangeDistrict}\r\n                    >\r\n                      {districtData && districtData.map((item, index) => <Option value={index}>{item.nameWithType}</Option>)}\r\n                    </Select>\r\n                    <Select\r\n                      placeholder='Chọn phường/xã'\r\n                      value={wardCode ? wardCode.nameWithType : undefined}\r\n                      className='dropdownNormal'\r\n                      allowClear={false}\r\n                      disabled={!(wardData && wardData.length > 0)}\r\n                      onChange={value => onChangeWard(value, handleChange)}\r\n                    >\r\n                      {wardData && wardData.map((item, index) => <Option value={index}>{item.nameWithType}</Option>)}\r\n                    </Select>\r\n                  </div>\r\n                  <Input\r\n                    className=\"addInput\"\r\n                    value={values.address}\r\n                    onChange={handleChange(\"address\")}\r\n                    onTouchStart={() => setFieldTouched(\"address\")}\r\n                    onBlur={handleBlur(\"address\")}\r\n                    placeholder=\"Nhập địa chỉ\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {(errors.address || errors.ward) && <span className=\"errorAdd\">* Vui lòng nhập địa chỉ</span>}\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Số điện thoại:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.phoneNumber}\r\n                  onChange={handleChange(\"phoneNumber\")}\r\n                  onTouchStart={() => setFieldTouched(\"phoneNumber\")}\r\n                  onBlur={handleBlur(\"phoneNumber\")}\r\n                  placeholder=\"Nhập số điện thoại\"\r\n                />\r\n\r\n              </div>\r\n              {errors.phoneNumber && <span className=\"errorAdd\">{errors.phoneNumber}</span>}\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Email:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.email}\r\n                  onChange={handleChange(\"email\")}\r\n                  onTouchStart={() => setFieldTouched(\"email\")}\r\n                  onBlur={handleBlur(\"email\")}\r\n                  placeholder=\"Nhập email\"\r\n                />\r\n\r\n              </div>\r\n              {errors.email && <span className=\"errorAdd\">{errors.email}</span>}\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Liên hệ:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.contact}\r\n                  onChange={handleChange(\"contact\")}\r\n                  onTouchStart={() => setFieldTouched(\"contact\")}\r\n                  onBlur={handleBlur(\"contact\")}\r\n                  placeholder=\"Nhập tên người liên hệ\"\r\n                />\r\n\r\n              </div>\r\n              {errors.contact && <span className=\"errorAdd\">{errors.contact}</span>}\r\n              <div style={{ display: \"flex\" }}>\r\n                <Button\r\n                  className=\"btnStyle\"\r\n                  type=\"primary\"\r\n                  style={{\r\n                    backgroundColor: \"#EB5757\",\r\n                    borderColor: \"white\",\r\n                  }}\r\n                  onClick={() => dispatch(SetCurrentPage.get({ currentPage: PAGE.BUS_OPERATOR }))}\r\n                >\r\n                  Hủy\r\n                </Button>\r\n                <Button\r\n                  disabled={!isValid}\r\n                  className=\"btnStyle\"\r\n                  type=\"primary\"\r\n                  style={{\r\n                    backgroundColor: isValid ? COLOR.primary : 'gray',\r\n                    borderColor: \"white\",\r\n                    color: 'white'\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Lưu\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBusOperatorPage;\r\n","import { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, Space } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React from \"react\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { COLOR } from \"ultis/functions\";\r\n\r\nexport const getColumnSearchProps = (dataIndex, searchPlaceholder, searchText, setSearchText, searchedColumn, setSearchColumn, refInput) => {\r\n  return {\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n        <div style={{ padding: 8 }}>\r\n          <Input\r\n            ref={refInput}\r\n            placeholder={searchPlaceholder}\r\n            value={selectedKeys[0]}\r\n            onChange={(e) =>\r\n              setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n            }\r\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn)}\r\n            style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n          />\r\n          <Space>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => handleSearch(selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn)}\r\n              icon={<SearchOutlined />}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Tìm\r\n        </Button>\r\n            <Button\r\n              onClick={() => handleReset(clearFilters, setSearchText)}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Cài lại\r\n        </Button>\r\n          </Space>\r\n        </div>\r\n      ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? COLOR.primary : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => refInput.current.select());\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      ) : (\r\n          text\r\n        ),\r\n  }\r\n}\r\n\r\nconst handleSearch = (selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn) => {\r\n  confirm();\r\n  setSearchColumn(dataIndex);\r\n  setSearchText(selectedKeys[0]);\r\n};\r\n\r\nconst handleReset = (clearFilters, setSearchText) => {\r\n  clearFilters();\r\n  setSearchText(\"\");\r\n};","import { LoadingOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button, Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport { PAGE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetBusOperator, SetCurrentPage, GetCityData } from \"../redux/actions\";\r\nimport AddBusOperatorPage from \"./addBusOperator\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction BusOperator() {\r\n  const busOperator = useSelector((state) => state.Dashboard.busOperator);\r\n  const detailPage = useSelector((state) => state.Dashboard.detailPage);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n\r\n  useEffect(() => {\r\n    dispatch(GetBusOperator.get());\r\n  }, []);\r\n\r\n  const onAddNewBusOperator = () => {\r\n    dispatch(GetCityData.get())\r\n    dispatch(SetCurrentPage.get({ currentPage: PAGE.BUS_OPERATOR, detailPage: PAGE.ADD_OPERATOR }))\r\n  }\r\n\r\n  const busOperatorColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        \"name\",\r\n        \"Nhập tên nhà xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: \"Nhà xe\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      sorter: (a, b) => a.name.localeCompare(b.name),\r\n    },\r\n    {\r\n      title: \"Địa chỉ\",\r\n      dataIndex: \"address\",\r\n      sorter: (a, b) => a.address.localeCompare(b.address),\r\n    },\r\n    {\r\n      title: \"SĐT\",\r\n      dataIndex: \"phoneNumber\",\r\n      sorter: (a, b) => a.phoneNumber.localeCompare(b.phoneNumber),\r\n      ...getColumnSearchProps(\r\n        \"phoneNumber\",\r\n        \"Nhập SĐT\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      sorter: (a, b) => a.email.localeCompare(b.email),\r\n      ...getColumnSearchProps(\r\n        \"email\",\r\n        \"Nhập email\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Liên hệ\",\r\n      dataIndex: \"contact\",\r\n      sorter: (a, b) => a.email.localeCompare(b.email),\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (detailPage === PAGE.ADD_OPERATOR) {\r\n    return (\r\n      <AddBusOperatorPage />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách nhà xe</span>\r\n      <Button\r\n        type='primary'\r\n        icon={<PlusCircleOutlined />}\r\n        style={{ width: 200, marginBottom: 32 }}\r\n        onClick={() => onAddNewBusOperator()}\r\n      >\r\n        Thêm nhà xe mới\r\n      </Button>\r\n      <Table columns={busOperatorColumns} dataSource={busOperator} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BusOperator;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport { CUSTOMER_STATUS } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetCustomerList } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction CustomerList() {\r\n  const customerList = useSelector((state) => state.Dashboard.customerList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n  const [filteredInfo, setFilterInfo] = useState(null)\r\n\r\n  useEffect(() => {\r\n    dispatch(GetCustomerList.get());\r\n  }, []);\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    setFilterInfo(filters)\r\n  };\r\n\r\n  const customerColumns = [\r\n    {\r\n      title: \"CMND\",\r\n      dataIndex: \"identityId\",\r\n      key: 'identityId',\r\n      sorter: (a, b) => a.identityId.localeCompare(b.identityId),\r\n      ...getColumnSearchProps(\r\n        \"identityId\",\r\n        \"Nhập CMND\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Tên\",\r\n      dataIndex: \"customerName\",\r\n      key: \"customerName\",\r\n      ...getColumnSearchProps(\r\n        \"customerName\",\r\n        \"Nhập tên hành khách\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"customerEmail\",\r\n      key: 'customerEmail',\r\n      sorter: (a, b) => a.identityId.localeCompare(b.identityId),\r\n      ...getColumnSearchProps(\r\n        \"customerEmail\",\r\n        \"Nhập email\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"SĐT\",\r\n      dataIndex: \"phoneNumber\",\r\n      key: 'phoneNumber',\r\n      sorter: (a, b) => a.phoneNumber.localeCompare(b.phoneNumber),\r\n      ...getColumnSearchProps(\r\n        \"phoneNumber\",\r\n        \"Nhập SĐT\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Trạng thái\",\r\n      dataIndex: \"status\",\r\n      render: (value, record, index) => {\r\n        if (value === CUSTOMER_STATUS.PAID) {\r\n          return <span style={{ color: 'green' }}>Đã thanh toán</span>\r\n        }\r\n        if (value === CUSTOMER_STATUS.NOT_PAID) {\r\n          return <span style={{ color: 'red' }}>Chưa thanh toán</span>\r\n        }\r\n        return <span>--</span>\r\n      },\r\n      filters: [\r\n        { text: 'Đã thanh toán', value: CUSTOMER_STATUS.PAID },\r\n        { text: 'Chưa thanh toán', value: CUSTOMER_STATUS.NOT_PAID },\r\n        { text: '--', value: CUSTOMER_STATUS.NO_ACTIVITY },\r\n      ],\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.paymentStatus === value,\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách hành khách</span>\r\n      <Table columns={customerColumns} dataSource={customerList} onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerList;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { DatePicker, Spin } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from 'moment';\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CartesianGrid, Label, Line, LineChart, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { COLOR, formatCurrency } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\nimport { GetStatistic, GetStatisticAmount } from \"../redux/actions\";\r\nimport viVN from \"antd/es/locale/vi_VN\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch()\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const accountDetail = useSelector((state) => state.Dashboard.accountDetail);\r\n  const stastic = useSelector((state) => state.Dashboard.stastic);\r\n  const statisticData = useSelector((state) => state.Dashboard.statisticData);\r\n\r\n  useEffect(() => {\r\n    dispatch(GetStatistic.get({ busOperatorId: accountType }))\r\n  }, [])\r\n\r\n  const handleChangeRange = (value) => {\r\n    dispatch(GetStatisticAmount.get({ busOperatorId: accountType, from: value[0], to: value[1] }))\r\n  }\r\n\r\n  if (isLoading || !stastic || !accountType) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Xin chào {accountType !== 'admin' ? accountDetail.name : 'Admin'},</span>\r\n      <div id='statisticWrap'>\r\n        <div className='boxStyle'>\r\n          <span className='titleBox'>Tổng đơn hàng</span>\r\n          <span className='amountStyle'>{stastic.totalTicket}</span>\r\n        </div>\r\n        <div className='boxStyle'>\r\n          <span className='titleBox' style={{ color: 'green' }}>Đã thanh toán</span>\r\n          <span className='amountStyle'>{stastic.totalPaid}</span>\r\n        </div>\r\n        <div className='boxStyle'>\r\n          <span className='titleBox' style={{ color: 'red' }}>Chưa thanh toán</span>\r\n          <span className='amountStyle'>{stastic.totalNotPaid}</span>\r\n        </div>\r\n        <div className='boxStyle'>\r\n          <span className='titleBox'>Doanh thu</span>\r\n          <span className='amountStyle'>{formatCurrency(stastic.totalAmount)}</span>\r\n        </div>\r\n      </div>\r\n      <div id='boxStatistic'>\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n          <RangePicker locale={viVN} style={{ marginBottom: 16, width: 300 }} onChange={(value, dateStr) => handleChangeRange(dateStr)} format='DD/MM/YYYY' allowClear={false} value={[moment(statisticData.from, 'DD/MM/YYYY'), moment(statisticData.to, 'DD/MM/YYYY')]} />\r\n          <LineChart width={700} height={400} data={statisticData.statisticData} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n            <Line type='monotone' dataKey=\"amount\" stroke={COLOR.primary} />\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis height={50} dataKey=\"name\">\r\n              <Label value={statisticData.xtype} style={{ fontFamily: 'Source Sans Pro' }} offset={0} position=\"insideBottom\" />\r\n            </XAxis>\r\n            <YAxis label={{ value: 'Doanh thu', angle: -90, position: 'insideLeft', fontFamily: 'Source Sans Pro' }} width={110} tickFormatter={number => { return formatCurrency(number) }} />\r\n            <Tooltip formatter={(value, name, props) => { return [formatCurrency(value), \"Doanh thu\"] }} />\r\n          </LineChart>\r\n        </div>\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n          <div className='boxCloneStyle'>\r\n            <span className='titleBox'>Tổng doanh thu</span>\r\n            <span className='amountStyle'>{formatCurrency(statisticData.totalAmount)}</span>\r\n          </div>\r\n          <div className='boxCloneStyle'>\r\n            <span className='titleBox'>Tổng đơn hàng</span>\r\n            <span className='amountStyle'>{statisticData.totalTicket}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Breadcrumb, Button, Select, Spin } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR, formatCurrency } from \"ultis/functions\";\r\nimport { PAYMENT_TITLE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { EditOrderDetail } from \"../redux/actions\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction EditOrderPage(props) {\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const orderDetail = useSelector((state) => state.Dashboard.orderDetail);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmitEdit = () => {\r\n    dispatch(EditOrderDetail.get({ ticket: orderDetail }));\r\n    props.handleReset();\r\n  };\r\n\r\n  const breadcrumbItem = (route, params, routes, paths) => {\r\n    if (route === routes[0]) {\r\n      return (\r\n        <a\r\n          className=\"titleTopic\"\r\n          style={{ textDecorationColor: COLOR.primary }}\r\n          onClick={() => props.handleReset()}\r\n        >\r\n          Danh sách đơn hàng\r\n        </a>\r\n      );\r\n    }\r\n    return <span className=\"titleTopic\">{route.breadcrumbName}</span>;\r\n  };\r\n\r\n  if (isLoading || !orderDetail) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  const routes = [\r\n    { breadcrumbName: \"Danh sách đơn hàng\" },\r\n    { breadcrumbName: orderDetail.ticketId },\r\n  ];\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <Breadcrumb itemRender={breadcrumbItem} routes={routes} separator=\">\" />\r\n      <span className=\"titleInfo\">Thông tin hành khách</span>\r\n      <div id=\"infoBigCell\">\r\n        <span className=\"infoTitle\">Tên:</span>\r\n        <span className=\"infoContent\">{orderDetail.customerName}</span>\r\n      </div>\r\n      <div id=\"infoBigCell\">\r\n        <span className=\"infoTitle\">Số điện thoại:</span>\r\n        <span className=\"infoContent\">{orderDetail.phoneNumber}</span>\r\n      </div>\r\n      {orderDetail.customerEmail && (\r\n        <div id=\"infoBigCell\">\r\n          <span className=\"infoTitle\">Email:</span>\r\n          <span className=\"infoContent\">{orderDetail.customerEmail}</span>\r\n        </div>\r\n      )}\r\n      <span className=\"titleInfo\">Thông tin đơn hàng</span>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Ngày tạo:</span>\r\n            <span className=\"infoContent\">\r\n              {moment(orderDetail.dateBooked).format(\"DD/MM/YYYY\")}\r\n            </span>\r\n          </div>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Số lượng chỗ:</span>\r\n            <span className=\"infoContent\">{orderDetail.totalTicketAmount}</span>\r\n          </div>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Vị trí:</span>\r\n            <span className=\"infoContent\">{orderDetail.seatId.join(\", \")}</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Tổng tiền:</span>\r\n            <span className=\"infoContent\" style={{ color: COLOR.orange }}>\r\n              {formatCurrency(orderDetail.totalPrice)}\r\n            </span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Phương thức thanh toán:</span>\r\n            <span className=\"infoContent\">\r\n              {PAYMENT_TITLE[orderDetail.paymentCode]}\r\n            </span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Trạng thái:</span>\r\n            <Select\r\n              defaultValue={orderDetail.paymentStatus}\r\n              id=\"dropdown\"\r\n              onChange={(value) => {\r\n                orderDetail.paymentStatus = value;\r\n              }}\r\n            >\r\n              <Option value={true}>Đã thanh toán</Option>\r\n              <Option value={false}>Chưa thanh toán</Option>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <span className=\"titleInfo\">Thông tin chuyến xe</span>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Mã chuyến:</span>\r\n            <span className=\"infoContent\">{orderDetail.tripId}</span>\r\n          </div>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Điểm khởi hành:</span>\r\n            <span className=\"infoContent\">{orderDetail.from}</span>\r\n          </div>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Điểm đến:</span>\r\n            <span className=\"infoContent\">{orderDetail.to}</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Nhà xe:</span>\r\n            <span className=\"infoContent\">{orderDetail.busOperator}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Giờ khởi hành:</span>\r\n            <span className=\"infoContent\">{orderDetail.timeStart}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Ngày khởi hành:</span>\r\n            <span className=\"infoContent\">{orderDetail.departureDay}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ display: \"flex\" }}>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          style={{\r\n            backgroundColor: \"#EB5757\",\r\n            borderColor: \"white\",\r\n          }}\r\n          onClick={() => props.handleReset()}\r\n        >\r\n          Hủy\r\n        </Button>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          style={{\r\n            backgroundColor: COLOR.primary,\r\n            borderColor: \"white\",\r\n          }}\r\n          onClick={() => handleSubmitEdit()}\r\n        >\r\n          Lưu\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditOrderPage;\r\n","import { EditOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Space, Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR, formatCurrency } from \"ultis/functions\";\r\nimport { PAGE, PAYMENT_TYPE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetOrderDetail, GetOrderList, SetCurrentPage } from \"../redux/actions\";\r\nimport EditOrderPage from \"./editOrderPage\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction OrderList() {\r\n  const orderList = useSelector((state) => state.Dashboard.orderList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const detailPage = useSelector((state) => state.Dashboard.detailPage);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n  const [filteredInfo, setFilterInfo] = useState(null);\r\n\r\n  const getOrderList = () => {\r\n    if (accountType && accountType !== \"admin\") {\r\n      dispatch(GetOrderList.get({ busOperatorId: accountType }));\r\n    } else {\r\n      dispatch(GetOrderList.get());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrderList();\r\n  }, []);\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    setFilterInfo(filters);\r\n  };\r\n\r\n  const handleEdit = (value, record) => {\r\n    dispatch(\r\n      GetOrderDetail.get({\r\n        search: record.ticketId,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleReset = () => {\r\n    getOrderList();\r\n    dispatch(SetCurrentPage.get({ currentPage: PAGE.ORDER_LIST }))\r\n  };\r\n\r\n  const orderColumns = [\r\n    {\r\n      title: \"Mã đơn\",\r\n      dataIndex: \"ticketId\",\r\n      key: \"ticketId\",\r\n      sorter: (a, b) => a.ticketId.localeCompare(b.ticketId),\r\n    },\r\n    {\r\n      title: \"Ngày tạo\",\r\n      dataIndex: \"dateBooked\",\r\n      sorter: {\r\n        compare: (a, b) => a.dateBooked - b.dateBooked,\r\n      },\r\n      render: (value, record, index) => {\r\n        return <span>{moment(value).format(\"DD/MM/YYYY\")}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Hành khách\",\r\n      dataIndex: \"customerName\",\r\n      key: \"customerName\",\r\n      ...getColumnSearchProps(\r\n        \"customerName\",\r\n        \"Nhập tên ngườt đặt\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Nhà xe\",\r\n      dataIndex: \"busOperator\",\r\n      key: \"busOperator\",\r\n      ...getColumnSearchProps(\r\n        \"busOperator\",\r\n        \"Nhập tên nhà xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Tổng tiền\",\r\n      dataIndex: \"totalPrice\",\r\n      sorter: {\r\n        compare: (a, b) => a.totalPrice - b.totalPrice,\r\n      },\r\n      render: (value, record, index) => {\r\n        return <span>{formatCurrency(value)}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Hình thức thanh toán\",\r\n      dataIndex: \"paymentCode\",\r\n      render: (value, record, index) => {\r\n        switch (value) {\r\n          case PAYMENT_TYPE[0].value:\r\n            return <span>{PAYMENT_TYPE[0].text}</span>;\r\n          case PAYMENT_TYPE[1].value:\r\n            return <span>{PAYMENT_TYPE[1].text}</span>;\r\n          case PAYMENT_TYPE[2].value:\r\n            return <span>{PAYMENT_TYPE[2].text}</span>;\r\n          case PAYMENT_TYPE[3].value:\r\n            return <span>{PAYMENT_TYPE[3].text}</span>;\r\n          case PAYMENT_TYPE[4].value:\r\n            return <span>{PAYMENT_TYPE[4].text}</span>;\r\n          default:\r\n            return <span />;\r\n        }\r\n      },\r\n      filters: PAYMENT_TYPE,\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.paymentStatus === value,\r\n    },\r\n    {\r\n      title: \"Trạng thái\",\r\n      dataIndex: \"paymentStatus\",\r\n      render: (value, record, index) => {\r\n        if (value) {\r\n          return <span style={{ color: \"green\" }}>Đã thanh toán</span>;\r\n        }\r\n        return <span style={{ color: \"red\" }}>Chưa thanh toán</span>;\r\n      },\r\n      filters: [\r\n        { text: \"Đã thanh toán\", value: true },\r\n        { text: \"Chưa thanh toán\", value: false },\r\n      ],\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.paymentStatus === value,\r\n    },\r\n    {\r\n      title: \"Tác vụ\",\r\n      key: \"action\",\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <EditOutlined\r\n              style={{ fontSize: 20 }}\r\n              onClick={() => handleEdit(value, record)}\r\n            />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  if (detailPage === PAGE.ORDER_DETAIL) {\r\n    return <EditOrderPage handleReset={handleReset} />;\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách đơn hàng</span>\r\n      <Table\r\n        columns={orderColumns}\r\n        dataSource={orderList}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderList;\r\n","import { LoadingOutlined, CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\r\nimport { Button, DatePicker, Input, Switch, message, Spin, InputNumber } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Formik } from \"formik\";\r\nimport moment from 'moment';\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport * as yup from \"yup\";\r\nimport { PAGE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { SetCurrentPage, CreateNewPromotion } from \"../redux/actions\";\r\nconst { RangePicker } = DatePicker;\r\nconst { TextArea } = Input;\r\n\r\nconst firstError = {\r\n  promotionCode: \"* Vui lòng nhập mã khuyến mãi\", promotionName: \"* Vui lòng nhập tên khuyến mãi\", quantity: \"* Vui lòng nhập số lượt sử dụng khuyến mãi\", promotionPercent: \"* Vui lòng nhập phần trăm giảm giá\"\r\n}\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction AddPromotionPage(props) {\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  const validationSchema = yup.object().shape({\r\n    promotionCode: yup\r\n      .string()\r\n      .trim()\r\n      .required('* Vui lòng nhập mã khuyến mãi')\r\n      .matches(\r\n        /^[A-Z0-9]+$/,\r\n        {\r\n          message: 'Mã khuyến mãi chỉ được chứa kí tự hoa và chữ số',\r\n        },\r\n      ),\r\n    promotionName: yup\r\n      .string()\r\n      .trim()\r\n      .required('* Vui lòng nhập tên khuyến mãi')\r\n      .matches(\r\n        /[^a-z0-9A-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]/u,\r\n        {\r\n          message: 'Tên khuyến mãi không hợp lệ',\r\n        },\r\n      ),\r\n    quantity: yup\r\n      .number()\r\n      .min(1, 'Số lượt sử dụng ít nhất là 1 lượt')\r\n      .max(1000, 'Số lượt sử dụng nhiều nhất là 1000 lượt')\r\n      .required('* Vui lòng nhập số lượt sử dụng khuyến mãi'),\r\n    promotionPercent: yup\r\n      .number()\r\n      .min(1, 'Phần trăm giảm giá ít nhất 1%')\r\n      .max(100, 'Phần trăm giảm giá nhiều nhất 100%')\r\n      .required('* Vui lòng nhập số lượt sử dụng khuyến mãi')\r\n  });\r\n\r\n  const handleAdd = (values) => {\r\n    const data = {\r\n      ...values,\r\n      promotionPercent: Number(values.promotionPercent) / 100\r\n    }\r\n    dispatch(CreateNewPromotion.get(data))\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleChangeRange = (dateStr, handleChange) => {\r\n    handleChange('from')(dateStr[0])\r\n    handleChange('to')(dateStr[1])\r\n  }\r\n\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Thêm khuyến mãi</span>\r\n      <Formik\r\n        initialValues={{ promotionCode: '', promotionName: '', quantity: 0, from: moment(new Date()).format('DD/MM/YYYY'), to: moment(new Date()).add(1, 'days').format('DD/MM/YYYY'), description: '', promotionPercent: 1, active: true }}\r\n        initialErrors={firstError}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => handleAdd(values)}\r\n      >\r\n        {({\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          values,\r\n          isValid,\r\n          errors,\r\n          touched,\r\n          setFieldTouched,\r\n          setFieldValue\r\n        }) => {\r\n          return (\r\n            <Form>\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Mã khuyến mãi:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.promotionCode}\r\n                  onChange={e => {\r\n                    handleChange(\"promotionCode\")(e.target.value.toUpperCase())\r\n                  }}\r\n                  onTouchStart={() => setFieldTouched(\"promotionCode\")}\r\n                  onBlur={handleBlur(\"promotionCode\")}\r\n                  placeholder=\"HEVUI20,...\"\r\n                />\r\n              </div>\r\n              {errors.promotionCode && <span className=\"errorAdd\">{errors.promotionCode}</span>}\r\n\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Tên khuyến mãi:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.promotionName}\r\n                  onChange={handleChange(\"promotionName\")}\r\n                  onTouchStart={() => setFieldTouched(\"promotionName\")}\r\n                  onBlur={handleBlur(\"promotionName\")}\r\n                  placeholder=\"Nhập tên khuyến mãi\"\r\n                />\r\n              </div>\r\n              {errors.promotionName && <span className=\"errorAdd\">{errors.promotionName}</span>}\r\n\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Thời gian khuyến mãi:</span>\r\n                <RangePicker style={{ width: 250 }} disabledDate={d => !d || d.isBefore(moment(new Date()))} onChange={(value, dateStr) => handleChangeRange(dateStr, handleChange)} format='DD/MM/YYYY' allowClear={false} value={[moment(values.from, 'DD/MM/YYYY'), moment(values.to, 'DD/MM/YYYY')]} />\r\n                <span className='addTitle' style={{ width: 'auto', marginLeft: 24, marginRight: 24 }}>Hoạt động:</span>\r\n                <Switch\r\n                  checkedChildren={<CheckOutlined />}\r\n                  unCheckedChildren={<CloseOutlined />}\r\n                  checked={values.active || false}\r\n                  onChange={(act, e) => {\r\n                    setFieldValue('active', act)\r\n                  }}\r\n                />\r\n              </div>\r\n              {errors.from && <span className=\"errorAdd\">{errors.from}</span>}\r\n\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Phần trăm giảm giá:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.promotionPercent}\r\n                  onChange={handleChange(\"promotionPercent\")}\r\n                  onTouchStart={() => setFieldTouched(\"promotionPercent\")}\r\n                  onBlur={handleBlur(\"promotionPercent\")}\r\n                  placeholder=\"Nhập phần trăm giảm giá\"\r\n                  type='number'\r\n                />\r\n              </div>\r\n              {errors.promotionPercent && <span className=\"errorAdd\">{errors.promotionPercent}</span>}\r\n\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Số lượt khuyến mãi:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.quantity}\r\n                  onChange={handleChange(\"quantity\")}\r\n                  onTouchStart={() => setFieldTouched(\"quantity\")}\r\n                  onBlur={handleBlur(\"quantity\")}\r\n                  placeholder=\"Nhập số lượt khuyến mãi\"\r\n                  type='number'\r\n                />\r\n              </div>\r\n              {errors.quantity && <span className=\"errorAdd\">{errors.quantity}</span>}\r\n\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Mô tả khuyến mãi:</span>\r\n                <TextArea\r\n                  className=\"addInput\"\r\n                  value={values.description}\r\n                  onChange={handleChange(\"description\")}\r\n                  onTouchStart={() => setFieldTouched(\"description\")}\r\n                  onBlur={handleBlur(\"description\")}\r\n                  placeholder=\"Nhập mô tả khuyến mãi\"\r\n                  rows={4}\r\n                />\r\n              </div>\r\n\r\n\r\n\r\n              <div style={{ display: \"flex\" }}>\r\n                <Button\r\n                  className=\"btnStyle\"\r\n                  type=\"primary\"\r\n                  style={{\r\n                    backgroundColor: \"#EB5757\",\r\n                    borderColor: \"white\",\r\n                  }}\r\n                  onClick={() => dispatch(SetCurrentPage.get({ currentPage: PAGE.PROMOTIONS }))}\r\n                >\r\n                  Hủy\r\n                  </Button>\r\n                <Button\r\n                  disabled={!isValid}\r\n                  className=\"btnStyle\"\r\n                  type=\"primary\"\r\n                  style={{\r\n                    backgroundColor: isValid ? COLOR.primary : 'gray',\r\n                    borderColor: \"white\",\r\n                    color: 'white'\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Lưu\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPromotionPage;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Breadcrumb, Spin } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction PromotionDetailPage(props) {\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const promotionDetail = useSelector((state) => state.Dashboard.promotionDetail);\r\n\r\n  const breadcrumbItem = (route, params, routes, paths) => {\r\n    if (route === routes[0]) {\r\n      return (\r\n        <a\r\n          className=\"titleTopic\"\r\n          style={{ textDecorationColor: COLOR.primary }}\r\n          onClick={() => props.handleReset()}\r\n        >\r\n          Danh sách mã khuyến mãi\r\n        </a>\r\n      );\r\n    }\r\n    return <span className=\"titleTopic\">{route.breadcrumbName}</span>;\r\n  };\r\n\r\n  if (isLoading || !promotionDetail) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  const routes = [\r\n    { breadcrumbName: \"Danh sách đơn hàng\" },\r\n    { breadcrumbName: promotionDetail.promotionCode },\r\n  ];\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <Breadcrumb itemRender={breadcrumbItem} style={{ marginBottom: 24 }} routes={routes} separator=\">\" />\r\n      <div id=\"infoPromotion\">\r\n        <span className=\"infoTitle\">Mã khuyến mãi:</span>\r\n        <span className=\"infoContent\" style={{ marginLeft: 4 }}>{promotionDetail.promotionCode}</span>\r\n      </div>\r\n      <div id=\"infoPromotion\">\r\n        <span className=\"infoTitle\">Tên khuyến mãi:</span>\r\n        <span className=\"infoContent\" style={{ marginLeft: 4 }}>{promotionDetail.promotionName}</span>\r\n      </div>\r\n      <div id=\"infoPromotion\">\r\n        <span className=\"infoTitle\">Phần trăm giảm giá:</span>\r\n        <span className=\"infoContent\" style={{ marginLeft: 4 }}>{promotionDetail.promotionPercent * 100}%</span>\r\n      </div>\r\n      <div id=\"infoPromotion\">\r\n        <span className=\"infoTitle\">Số lượng còn lại:</span>\r\n        <span className=\"infoContent\" style={{ marginLeft: 4 }}>{promotionDetail.quantity}</span>\r\n      </div>\r\n      <div id=\"infoPromotion\">\r\n        <span className=\"infoTitle\">Từ ngày:</span>\r\n        <span className=\"infoContent\" style={{ marginLeft: 4 }}>{promotionDetail.from}</span>\r\n      </div>\r\n      <div id=\"infoPromotion\">\r\n        <span className=\"infoTitle\">Đến ngày:</span>\r\n        <span className=\"infoContent\" style={{ marginLeft: 4 }}>{promotionDetail.to}</span>\r\n      </div>\r\n      <div id=\"infoPromotion\">\r\n        <span className=\"infoTitle\">Trạng thái hoạt động:</span>\r\n        <span className=\"infoContent\" style={{ marginLeft: 4 }}>{promotionDetail.active ? 'Đang hoạt động' : 'Ngừng hoạt động'}</span>\r\n      </div>\r\n      {promotionDetail.description && (\r\n        <div id=\"infoPromotion\" style={{ alignItems: 'flex-start' }}>\r\n          <span className=\"infoTitle\" style={{ minWidth: 44 }}>Mô tả:</span>\r\n          <span className=\"infoContent\" style={{ marginLeft: 4, textAlign: 'justify', width: 800 }}>{promotionDetail.description}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PromotionDetailPage;\r\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EyeOutlined, LoadingOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button, Modal, Space, Spin, Switch, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from 'moment';\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport { PAGE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { ActivatePromotion, DeletePromotion, GetDetailPromotion, GetPromotion, SetCurrentPage } from \"../redux/actions\";\r\nimport AddPromotionPage from \"./addPromotion\";\r\nimport PromotionDetailPage from \"./promotionDetail\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction PromotionList() {\r\n  const promotions = useSelector((state) => state.Dashboard.promotions);\r\n  const detailPage = useSelector((state) => state.Dashboard.detailPage);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n\r\n  useEffect(() => {\r\n    dispatch(GetPromotion.get());\r\n  }, []);\r\n\r\n  const onAddNewPromotion = () => {\r\n    dispatch(SetCurrentPage.get({ currentPage: PAGE.PROMOTIONS, detailPage: PAGE.ADD_PROMOTION }))\r\n  }\r\n\r\n  const handleEdit = (value, record) => {\r\n    dispatch(GetDetailPromotion.get({ promotionCode: record.promotionCode }))\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(GetPromotion.get());\r\n    dispatch(SetCurrentPage.get({ currentPage: PAGE.PROMOTIONS }))\r\n  };\r\n\r\n  const handleDelete = (record) => {\r\n    Modal.confirm({\r\n      title: 'Xác nhận',\r\n      icon: <DeleteOutlined style={{ color: COLOR.primary }} />,\r\n      content: 'Bạn xác nhận xóa mã khuyến mãi này?',\r\n      okText: 'Đồng ý',\r\n      cancelText: 'Hủy bỏ',\r\n      centered: true,\r\n      okButtonProps: { style: { backgroundColor: COLOR.primary } },\r\n      onOk: () => {\r\n        dispatch(DeletePromotion.get({ promotionCode: record.promotionCode }))\r\n        Modal.destroyAll()\r\n      }\r\n    });\r\n  }\r\n\r\n  const promotionColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        \"promotionCode\",\r\n        \"Nhập mã khuyến mãi\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: \"Mã khuyến mãi\",\r\n      dataIndex: \"promotionCode\",\r\n      key: \"promotionCode\",\r\n      sorter: (a, b) => a.promotionCode.localeCompare(b.promotionCode),\r\n    },\r\n    {\r\n      ...getColumnSearchProps(\r\n        \"promotionName\",\r\n        \"Nhập tên khuyến mãi\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: \"Tên khuyến mãi\",\r\n      dataIndex: \"promotionName\",\r\n      key: \"promotionName\",\r\n      sorter: (a, b) => a.promotionName.localeCompare(b.promotionName),\r\n    },\r\n    {\r\n      title: \"Phần trăm giảm giá\",\r\n      dataIndex: \"promotionPercent\",\r\n      key: \"promotionPercent\",\r\n      sorter: (a, b) => a.promotionPercent - b.promotionPercent,\r\n      render: (value, record, index) => {\r\n        return <span>{Number(value) * 100}%</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Số lượng\",\r\n      dataIndex: \"quantity\",\r\n      sorter: (a, b) => a.quantity - b.quantity,\r\n    },\r\n    {\r\n      title: \"Từ ngày\",\r\n      dataIndex: \"from\",\r\n      sorter: (a, b) => moment(a.from, 'DD/MM/YYYY').diff(moment(b.from, 'DD/MM/YYYY'), 'days'),\r\n    },\r\n    {\r\n      title: \"Đến ngày\",\r\n      dataIndex: \"to\",\r\n      sorter: (a, b) => moment(a.to, 'DD/MM/YYYY').diff(moment(b.to, 'DD/MM/YYYY'), 'days'),\r\n    },\r\n    {\r\n      title: \"Hoạt động\",\r\n      dataIndex: \"active\",\r\n      render: (value, record) => {\r\n        return (\r\n          <Switch\r\n            checkedChildren={<CheckOutlined />}\r\n            unCheckedChildren={<CloseOutlined />}\r\n            checked={value || false}\r\n            onChange={(active, e) => dispatch(ActivatePromotion.get({ promotionCode: record.promotionCode, active }))}\r\n          />\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Tác vụ\",\r\n      key: \"action\",\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <EyeOutlined\r\n              style={{ fontSize: 20 }}\r\n              onClick={() => handleEdit(value, record)}\r\n            />\r\n            <DeleteOutlined\r\n              style={{ fontSize: 20, color: \"#FF0000\" }}\r\n              onClick={() => handleDelete(record)}\r\n            />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (detailPage === PAGE.ADD_PROMOTION) {\r\n    return (\r\n      <AddPromotionPage />\r\n    );\r\n  }\r\n\r\n  if (detailPage === PAGE.DETAIL_PROMOTION) {\r\n    return (\r\n      <PromotionDetailPage handleReset={handleReset} />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách mã khuyến mãi</span>\r\n      <Button\r\n        type='primary'\r\n        icon={<PlusCircleOutlined />}\r\n        style={{ width: 230, marginBottom: 32 }}\r\n        onClick={() => onAddNewPromotion()}\r\n      >\r\n        Thêm mã khuyến mãi mới\r\n      </Button>\r\n      <Table columns={promotionColumns} dataSource={promotions} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PromotionList;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Breadcrumb, DatePicker, Spin } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport viVN from \"antd/es/locale/vi_VN\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\nimport { GetMapSeat, GetOrderDetail } from \"../redux/actions\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction TripDateDetail(props) {\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const tripDetail = useSelector((state) => state.Dashboard.tripDetail);\r\n  const { seats, trip, date } = tripDetail\r\n\r\n  const breadcrumbItem = (route, params, routes, paths) => {\r\n    if (route === routes[0]) {\r\n      return (\r\n        <a\r\n          className=\"titleTopic\"\r\n          style={{ textDecorationColor: COLOR.primary }}\r\n          onClick={() => props.handleReset()}\r\n        >\r\n          Danh sách chuyến xe\r\n        </a>\r\n      );\r\n    }\r\n    return <span className=\"titleTopic\">{route.breadcrumbName}</span>;\r\n  };\r\n\r\n  const handleChangeDate = (value) => {\r\n    dispatch(GetMapSeat.get({ tripId: trip.tripId, busType: trip.busType, date: value }))\r\n  }\r\n\r\n  const goToOrderDetail = (seat) => {\r\n    dispatch(GetOrderDetail.get({ search: seat.ticketId }))\r\n  }\r\n\r\n  const renderOneSeat = (seat) => (\r\n    <div className='seatStyle' style={{ backgroundColor: seat.status ? COLOR.lightBlue : COLOR.gray }} onClick={seat.status ? () => goToOrderDetail(seat) : () => { }}>\r\n      <span className=\"infoContent\">{seat.seatId}</span>\r\n      {seat.status && seat.ticketId && <span className=\"infoContent\">{seat.ticketId}</span>}\r\n    </div>\r\n  )\r\n\r\n  const renderSeat = (floor) => (\r\n    <table style={{ display: 'flex', flex: 1, flexDirection: 'column' }}>\r\n      {floor.map(item => (\r\n        <tr>\r\n          {item.map(seat => (<td>{seat ? renderOneSeat(seat) : <div className='seatStyle' style={{ backgroundColor: 'white' }} />}</td>))}\r\n        </tr>\r\n      ))}\r\n    </table>\r\n  )\r\n\r\n  if (isLoading || !trip) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  const routes = [\r\n    { breadcrumbName: \"Danh sách đơn hàng\" },\r\n    { breadcrumbName: trip.tripId },\r\n  ];\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <Breadcrumb itemRender={breadcrumbItem} routes={routes} separator=\">\" />\r\n      <div style={{ display: \"flex\", marginTop: 24 }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Loại xe:</span>\r\n            <span className=\"infoContent\">{trip.busTypeTitle}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Điểm khởi hành:</span>\r\n            <span className=\"infoContent\">{trip.from}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Điểm đến:</span>\r\n            <span className=\"infoContent\">{trip.to}</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Nhà xe:</span>\r\n            <span className=\"infoContent\">{trip.busOperator}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Giờ khởi hành:</span>\r\n            <span className=\"infoContent\">{trip.timeStart}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Ngày khởi hành:</span>\r\n            <DatePicker\r\n              locale={viVN}\r\n              value={moment(date, 'DD/MM/YYYY')}\r\n              format=\"DD/MM/YYYY\"\r\n              allowClear={false}\r\n              onChange={(value, dateStr) => handleChangeDate(dateStr)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ display: \"flex\", marginTop: 24 }}>\r\n        <div\r\n          style={{ backgroundColor: COLOR.lightBlue }}\r\n          className=\"smallSquare\"\r\n        />\r\n        <span className=\"infoContent\" style={{ marginRight: 28 }}>\r\n          Ghế đã đặt\r\n          </span>\r\n        <div\r\n          style={{ backgroundColor: COLOR.gray }}\r\n          className=\"smallSquare\"\r\n        />\r\n        <span className=\"infoContent\" style={{ marginRight: 28 }}>\r\n          Ghế trống\r\n          </span>\r\n      </div>\r\n      {seats && <div style={{ display: 'flex', marginTop: 24 }}>\r\n        {renderSeat(seats.floor1)}\r\n        {seats.floor2 && seats.floor2.length > 0 && renderSeat(seats.floor2)}\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TripDateDetail;\r\n","import { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, message, Select, Spin, Upload, Modal } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR, MAP_API_KEY } from \"ultis/functions\";\r\nimport * as yup from \"yup\";\r\nimport { PAGE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport {\r\n  GetDistrictData,\r\n  GetWardData,\r\n  SetCurrentPage,\r\n  AddBusOperator,\r\n} from \"../redux/actions\";\r\nimport axios from \"axios\";\r\n\r\nconst { Option } = Select;\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"Chỉ được phép sử dụng JPG hoặc PNG!\");\r\n  }\r\n  return isJpgOrPng;\r\n}\r\n\r\nconst firstError = {\r\n  // address: \"* Vui lòng nhập địa chỉ\",\r\n  // operatorName: \"* Vui lòng nhập tên nhà xe\",\r\n  // phoneNumber: \"* Vui lòng nhập số điện thoại\",\r\n  // email: \"* Vui lòng nhập email\",\r\n  // contact: \"* Vui lòng nhập người liên hệ\",\r\n};\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction AddTripPage(props) {\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const citiesTrip = useSelector((state) => state.Dashboard.citiesTrip);\r\n  const busType = useSelector((state) => state.Dashboard.busType);\r\n  const districtData = useSelector((state) => state.Dashboard.districtData);\r\n  const wardData = useSelector((state) => state.Dashboard.wardData);\r\n  const dispatch = useDispatch();\r\n  const [cityCode, setCityCode] = useState(null);\r\n  const [cityCodeTo, setCityCodeTo] = useState(null);\r\n  const [districtCode, setDistrictCode] = useState(null);\r\n  const [wardCode, setWardCode] = useState(null);\r\n  const [isLoadingImage, setLoadingImage] = useState(false);\r\n\r\n  const validationSchema = yup.object().shape({\r\n    // email: yup\r\n    //   .string()\r\n    //   .label(\"Email\")\r\n    //   .email(\"Email hiện tại không hợp lệ\")\r\n    //   .required(\"* Vui lòng nhập email\"),\r\n    // phoneNumber: yup\r\n    //   .string()\r\n    //   .required(\"* Vui lòng nhập số điện thoại\")\r\n    //   .matches(/((09|03|07|08|05)+([0-9]{8})\\b)/, {\r\n    //     message: \"Số điện thoại không hợp lệ\",\r\n    //   }),\r\n    // operatorName: yup\r\n    //   .string()\r\n    //   .trim()\r\n    //   .required(\"* Vui lòng nhập tên nhà xe\")\r\n    //   .matches(\r\n    //     /[^a-z0-9A-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]/u,\r\n    //     {\r\n    //       message: \"Tên nhà xe không hợp lệ\",\r\n    //     }\r\n    //   ),\r\n    // contact: yup\r\n    //   .string()\r\n    //   .trim()\r\n    //   .required(\"* Vui lòng nhập người liên hệ\")\r\n    //   .matches(\r\n    //     /[^a-z0-9A-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]/u,\r\n    //     {\r\n    //       message: \"Tên người liên hệ không hợp lệ\",\r\n    //     }\r\n    //   ),\r\n    price: yup\r\n      .number()\r\n      .min(50000, \"Số tiền phải lớn hơn 50.000đ\")\r\n      .required(\"* Vui lòng nhập đơn giá\"),\r\n    from: yup\r\n      .object()\r\n      .shape({ type: yup.string(), busTypeTitle: yup.string() }),\r\n    to: yup.object().shape({ type: yup.string(), busTypeTitle: yup.string() }),\r\n  });\r\n\r\n  const onChangeCityFrom = (value, handleChange) => {\r\n    handleChange(\"from\", citiesTrip[value]);\r\n  };\r\n\r\n  const onChangeCityTo = (value, handleChange) => {\r\n    handleChange(\"to\", citiesTrip[value]);\r\n  };\r\n\r\n  const onChangeBusType = (value, handleChange) => {\r\n    handleChange(\"busType\")(busType[value].type);\r\n    handleChange(\"busTypeTitle\")(busType[value].busTypeTitle);\r\n  };\r\n\r\n  const onChangeDistrict = (value) => {\r\n    setDistrictCode(districtData[value]);\r\n    setWardCode(null);\r\n    dispatch(\r\n      GetWardData.get({\r\n        cityCode: cityCode.code,\r\n        districtCode: districtData[value].code,\r\n      })\r\n    );\r\n  };\r\n\r\n  const onChangeWard = (value, handleChange) => {\r\n    setWardCode(wardData[value]);\r\n    handleChange(\"ward\")(wardData[value].pathWithType);\r\n  };\r\n\r\n  const handleAdd = (values) => {\r\n    // axios\r\n    //   .request({\r\n    //     url: `https://api.tomtom.com/search/2/geocode/${values.address}, ${values.ward}.json`,\r\n    //     timeout: 10000,\r\n    //     params: {\r\n    //       countrySet: \"VN\",\r\n    //       lat: 10,\r\n    //       lon: 106,\r\n    //       language: \"vi-VN\",\r\n    //       key: MAP_API_KEY,\r\n    //     },\r\n    //     method: \"GET\",\r\n    //   })\r\n    //   .then((res) => {\r\n    //     const { results } = res.data;\r\n    //     let data = {\r\n    //       avatar: values.avatar,\r\n    //       email: values.email,\r\n    //       contact: values.contact,\r\n    //       address: `${values.address}, ${values.ward}`,\r\n    //       name: values.operatorName,\r\n    //       phoneNumber: values.phoneNumber,\r\n    //     };\r\n    //     if (results && results.length > 0) {\r\n    //       data = {\r\n    //         ...data,\r\n    //         lat: results[0].position.lat,\r\n    //         long: results[0].position.lon,\r\n    //       };\r\n    //     }\r\n    //     dispatch(AddBusOperator.get(data));\r\n    //   })\r\n    //   .catch((error) =>\r\n    //     Modal.info({\r\n    //       title: \"Lỗi\",\r\n    //       content: \"Đã có lỗi xảy ra. Vui lòng thử lại sau.\",\r\n    //       onOk() {},\r\n    //     })\r\n    //   );\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleChangeAvatar = (info, handleChange) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoadingImage(true);\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      getBase64(info.file.originFileObj, (imageUrl) => {\r\n        handleChange(\"thumbnail\")(imageUrl);\r\n        setLoadingImage(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {isLoadingImage ? (\r\n        <LoadingOutlined style={{ color: COLOR.primary }} />\r\n      ) : (\r\n          <PlusOutlined />\r\n        )}\r\n      <div\r\n        className=\"ant-upload-text\"\r\n        style={{ fontFamily: \"Source Sans Pro\" }}\r\n      >\r\n        {isLoadingImage ? \"Đang tải lên\" : \"Tải lên\"}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Thêm chuyến xe</span>\r\n      <Formik\r\n        initialValues={{\r\n          thumbnail: null,\r\n          from: undefined,\r\n          to: undefined,\r\n          dropOff: \"\",\r\n          pickUp: \"\",\r\n          price: 0,\r\n          timeEnd: \"\",\r\n          timeStart: \"\",\r\n          busType: \"\",\r\n          busTypeTitle: undefined,\r\n        }}\r\n        initialErrors={firstError}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => handleAdd(values)}\r\n      >\r\n        {({\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          values,\r\n          isValid,\r\n          errors,\r\n          touched,\r\n          setFieldTouched,\r\n        }) => {\r\n          return (\r\n            <Form>\r\n              <div className=\"rowAdd\" style={{ alignItems: \"flex-start\" }}>\r\n                <span className=\"addTitle\">Thêm ảnh:</span>\r\n                <div style={{ display: \"flex\", width: 100 }}>\r\n                  <Upload\r\n                    name=\"thumbnail\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                    beforeUpload={beforeUpload}\r\n                    onChange={(info) => handleChangeAvatar(info, handleChange)}\r\n                  >\r\n                    {values.thumbnail ? (\r\n                      <img\r\n                        src={values.thumbnail}\r\n                        alt=\"thumbnail\"\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    ) : (\r\n                        uploadButton\r\n                      )}\r\n                  </Upload>\r\n                </div>\r\n              </div>\r\n              <div className=\"rowAdd\">\r\n                <span className=\"addTitle\">Điểm khởi hành:</span>\r\n                <Select\r\n                  placeholder=\"Chọn thành phố\"\r\n                  value={values.from?.cityTitle}\r\n                  className=\"dropdownNormal\"\r\n                  allowClear={false}\r\n                  bordered\r\n                  onChange={onChangeCityFrom}\r\n                >\r\n                  {citiesTrip &&\r\n                    citiesTrip.map((item, index) => (\r\n                      <Option value={index}>{item.cityTitle}</Option>\r\n                    ))}\r\n                </Select>\r\n                <span className=\"addTitle\">Điểm đến:</span>\r\n                <Select\r\n                  placeholder=\"Chọn thành phố\"\r\n                  value={values.to?.cityTitle}\r\n                  className=\"dropdownNormal\"\r\n                  allowClear={false}\r\n                  onChange={onChangeCityTo}\r\n                >\r\n                  {citiesTrip &&\r\n                    citiesTrip.map((item, index) => (\r\n                      <Option value={index}>{item.cityTitle}</Option>\r\n                    ))}\r\n                </Select>\r\n              </div>\r\n              <div className=\"rowAdd\">\r\n                <span className=\"addTitle\">Thời gian khởi hành:</span>\r\n                {/* <Select\r\n                  placeholder=\"Chọn thành phố\"\r\n                  value={cityCode ? cityCode.cityTitle : undefined}\r\n                  className=\"dropdownCity\"\r\n                  allowClear={false}\r\n                  bordered\r\n                  onChange={onChangeCityFrom}\r\n                >\r\n                  {citiesTrip &&\r\n                    citiesTrip.map((item, index) => (\r\n                      <Option value={index}>{item.cityTitle}</Option>\r\n                    ))}\r\n                </Select> */}\r\n                <span className=\"addTitle\">Thời gian đến:</span>\r\n                {/* <Select\r\n                  placeholder=\"Chọn thành phố\"\r\n                  value={cityCodeTo ? cityCodeTo.cityTitle : undefined}\r\n                  className=\"dropdownNormal\"\r\n                  allowClear={false}\r\n                  onChange={onChangeCityTo}\r\n                >\r\n                  {citiesTrip &&\r\n                    citiesTrip.map((item, index) => (\r\n                      <Option value={index}>{item.cityTitle}</Option>\r\n                    ))}\r\n                </Select> */}\r\n              </div>\r\n              <div className=\"rowAdd\">\r\n                <span className=\"addTitle\">Loại xe:</span>\r\n                <Select\r\n                  placeholder=\"Chọn loại xe\"\r\n                  value={values.busTypeTitle}\r\n                  className=\"dropdownNormal\"\r\n                  allowClear={false}\r\n                  onChange={onChangeBusType}\r\n                >\r\n                  {busType &&\r\n                    busType.map((item, index) => (\r\n                      <Option value={index}>{item.busTypeTitle}</Option>\r\n                    ))}\r\n                </Select>\r\n              </div>\r\n              {errors.busTypeTitle && (\r\n                <span className=\"errorAdd\">{errors.busTypeTitle}</span>\r\n              )}\r\n              <div className=\"rowAdd\">\r\n                <span className=\"addTitle\">Đơn giá:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.price}\r\n                  onChange={handleChange(\"price\")}\r\n                  onTouchStart={() => setFieldTouched(\"price\")}\r\n                  onBlur={handleBlur(\"price\")}\r\n                  placeholder=\"Nhập đơn giá\"\r\n                />\r\n              </div>\r\n              {errors.price && <span className=\"errorAdd\">{errors.price}</span>}\r\n              <div style={{ display: \"flex\" }}>\r\n                <Button\r\n                  className=\"btnStyle\"\r\n                  type=\"primary\"\r\n                  style={{\r\n                    backgroundColor: \"#EB5757\",\r\n                    borderColor: \"white\",\r\n                  }}\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      SetCurrentPage.get({ currentPage: PAGE.TRIP_LIST })\r\n                    )\r\n                  }\r\n                >\r\n                  Hủy\r\n                </Button>\r\n                <Button\r\n                  disabled={!isValid}\r\n                  className=\"btnStyle\"\r\n                  type=\"primary\"\r\n                  style={{\r\n                    backgroundColor: isValid ? COLOR.primary : \"gray\",\r\n                    borderColor: \"white\",\r\n                    color: \"white\",\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Lưu\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTripPage;\r\n","import {\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  LoadingOutlined,\r\n  PlusCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Modal, Space, Spin, Table, Button } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport { PAGE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport {\r\n  DeleteTrip,\r\n  GetMapSeat,\r\n  GetTripList,\r\n  SetCurrentPage,\r\n  GetCitiesTrip,\r\n} from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\nimport TripDateDetail from \"./tripDateDetail\";\r\nimport AddTripPage from \"./addTrip\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction TripList() {\r\n  const tripList = useSelector((state) => state.Dashboard.tripList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const detailPage = useSelector((state) => state.Dashboard.detailPage);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n\r\n  const getTripList = () => {\r\n    if (accountType && accountType !== \"admin\") {\r\n      dispatch(GetTripList.get({ busOperatorId: accountType }));\r\n    } else {\r\n      dispatch(GetTripList.get());\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getTripList();\r\n  }, []);\r\n\r\n  const handleEdit = (value, record) => {\r\n    dispatch(\r\n      GetMapSeat.get({\r\n        tripId: record.tripId,\r\n        busType: record.busType,\r\n        date: moment(new Date()).format(\"DD/MM/YYYY\"),\r\n      })\r\n    );\r\n    dispatch(\r\n      SetCurrentPage.get({\r\n        currentPage: PAGE.TRIP_LIST,\r\n        detailPage: PAGE.TRIP_DETAIL,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleReset = () => {\r\n    getTripList();\r\n    dispatch(SetCurrentPage.get({ currentPage: PAGE.TRIP_LIST }));\r\n  };\r\n\r\n  const handleDelete = (record) => {\r\n    Modal.confirm({\r\n      title: \"Xác nhận\",\r\n      icon: <DeleteOutlined style={{ color: COLOR.primary }} />,\r\n      content: \"Bạn xác nhận xóa chuyến này?\",\r\n      okText: \"Đồng ý\",\r\n      cancelText: \"Hủy bỏ\",\r\n      centered: true,\r\n      okButtonProps: { style: { backgroundColor: COLOR.primary } },\r\n      onOk: () => {\r\n        dispatch(DeleteTrip.get({ tripId: record.tripId }));\r\n        Modal.destroyAll();\r\n      },\r\n    });\r\n  };\r\n\r\n  const onAddNewTrip = () => {\r\n    dispatch(GetCitiesTrip.get());\r\n  };\r\n\r\n  const tripsColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        \"busOperator\",\r\n        \"Nhập tên nhà xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: \"Nhà xe\",\r\n      dataIndex: \"busOperator\",\r\n      key: \"busOperator\",\r\n    },\r\n    {\r\n      title: \"Mã chuyến\",\r\n      dataIndex: \"tripId\",\r\n      sorter: (a, b) => a.tripId.localeCompare(b.tripId),\r\n    },\r\n    {\r\n      title: \"Loại xe\",\r\n      dataIndex: \"busTypeTitle\",\r\n      key: \"busTypeTitle\",\r\n      ...getColumnSearchProps(\r\n        \"busTypeTitle\",\r\n        \"Nhập loại xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Điểm khởi hành\",\r\n      dataIndex: \"from\",\r\n      key: \"from\",\r\n      ...getColumnSearchProps(\r\n        \"from\",\r\n        \"Nhập điểm khởi hành\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Điểm đến\",\r\n      dataIndex: \"to\",\r\n      key: \"to\",\r\n      ...getColumnSearchProps(\r\n        \"to\",\r\n        \"Nhập điểm điến\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Thời điểm khởi hành\",\r\n      dataIndex: \"timeStart\",\r\n      sorter: (a, b) => a.timeStart.localeCompare(b.timeStart),\r\n    },\r\n    {\r\n      title: \"Tác vụ\",\r\n      key: \"action\",\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <EditOutlined\r\n              style={{ fontSize: 20 }}\r\n              onClick={() => handleEdit(value, record)}\r\n            />\r\n            <DeleteOutlined\r\n              style={{ fontSize: 20, color: \"#FF0000\" }}\r\n              onClick={() => handleDelete(record)}\r\n            />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  if (detailPage === PAGE.TRIP_DETAIL) {\r\n    return <TripDateDetail handleReset={handleReset} />;\r\n  }\r\n  if (detailPage === PAGE.ADD_TRIP) {\r\n    return <AddTripPage />;\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách chuyến xe</span>\r\n      {accountType && accountType !== \"admin\" && (\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlusCircleOutlined />}\r\n          style={{ width: 200, marginBottom: 32 }}\r\n          onClick={() => onAddNewTrip()}\r\n        >\r\n          Thêm chuyến xe mới\r\n        </Button>\r\n      )}\r\n      <Table columns={tripsColumns} dataSource={tripList} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TripList;\r\n","import {\r\n  ContactsOutlined,\r\n  LineChartOutlined,\r\n  LoadingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Avatar, Button, Menu, Spin } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport React, { useEffect } from \"react\";\r\nimport { FaBus } from \"react-icons/fa\";\r\nimport { FiFileText, FiGift, FiUsers } from \"react-icons/fi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport BusOperator from \"./component/busOperatorTable\";\r\nimport CustomerList from \"./component/customerList\";\r\nimport Home from \"./component/homePage\";\r\nimport OrderList from \"./component/orderListTable\";\r\nimport PromotionList from \"./component/promotionList\";\r\nimport TripList from \"./component/tripTable\";\r\nimport { PAGE } from \"./constant\";\r\nimport \"./dashboard.css\";\r\nimport {\r\n  GetAccountType,\r\n  GetBusOperatorDetail,\r\n  ResetDashboard,\r\n  SetCurrentPage,\r\n} from \"./redux/actions\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction Dashboard() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const accountDetail = useSelector((state) => state.Dashboard.accountDetail);\r\n  const isLoadingDashboard = useSelector(\r\n    (state) => state.Dashboard.isLoadingDashboard\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(GetAccountType.get());\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        await firebase\r\n          .database()\r\n          .ref(\"users\")\r\n          .child(firebase.auth().currentUser.uid)\r\n          .once(\"value\", async (snapshot) => {\r\n            dispatch(\r\n              GetBusOperatorDetail.get({ busOperatorId: snapshot.val() })\r\n            );\r\n          });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const currentPage = useSelector((state) => state.Dashboard.currentPage);\r\n\r\n  const onMenuSelect = ({ item, key, keyPath, selectedKeys, domEvent }) => {\r\n    dispatch(SetCurrentPage.get({ currentPage: key }));\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    firebase.auth().signOut();\r\n    dispatch(ResetDashboard.get());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const renderRightDashboard = () => {\r\n    switch (currentPage) {\r\n      case PAGE.HOME:\r\n        return <Home />;\r\n      case PAGE.BUS_OPERATOR:\r\n        return <BusOperator />;\r\n      case PAGE.TRIP_LIST:\r\n        return <TripList />;\r\n      case PAGE.PROMOTIONS:\r\n        return <PromotionList />;\r\n      case PAGE.ORDER_LIST:\r\n        return <OrderList />;\r\n      case PAGE.CUSTOMER_LIST:\r\n        return <CustomerList />;\r\n      default:\r\n        return <BusOperator />;\r\n    }\r\n  };\r\n\r\n  if (isLoadingDashboard || !accountType) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // if (!accountType) {\r\n  //   return (\r\n  //     <div id=\"empty\">\r\n  //       <div id=\"errorWrap\">\r\n  //         <FrownOutlined style={{ fontSize: 60, color: COLOR.primary }} />\r\n  //         <p style={{ textAlign: \"center\", paddingBottom: 16 }}>\r\n  //           Bạn chưa đăng nhập hoặc phiên đăng nhập đã hết hạn. Nhấn đăng nhập\r\n  //           để đăng nhập lại.\r\n  //         </p>\r\n  //         <Button\r\n  //           type=\"primary\"\r\n  //           style={{\r\n  //             borderColor: \"white\",\r\n  //           }}\r\n  //           onClick={() => history.push(\"/\")}\r\n  //         >\r\n  //           Đăng nhập\r\n  //         </Button>\r\n  //       </div>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <div id=\"dashboardBg\">\r\n      <div id=\"menuContainer\">\r\n        <Avatar size={100} src=\"https://source.unsplash.com/random\" />\r\n        <span id=\"adminName\">\r\n          {accountType !== \"admin\" ? accountDetail.name : \"Admin\"}\r\n        </span>\r\n        <Menu\r\n          defaultSelectedKeys={[PAGE.HOME]}\r\n          selectedKeys={[currentPage]}\r\n          mode=\"inline\"\r\n          onSelect={onMenuSelect}\r\n        >\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key={PAGE.HOME}\r\n            icon={<LineChartOutlined style={{ fontSize: 16 }} />}\r\n          >\r\n            Trang chủ\r\n          </Menu.Item>\r\n          {accountType === \"admin\" && (\r\n            <Menu.Item\r\n              style={{ color: \"white\" }}\r\n              key={PAGE.BUS_OPERATOR}\r\n              icon={<ContactsOutlined style={{ fontSize: 16 }} />}\r\n            >\r\n              Nhà xe\r\n            </Menu.Item>\r\n          )}\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key={PAGE.TRIP_LIST}\r\n            icon={<FaBus size={14} style={{ marginRight: 8 }} />}\r\n          >\r\n            Chuyến xe\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key={PAGE.ORDER_LIST}\r\n            icon={<FiFileText size={16} style={{ marginRight: 8 }} />}\r\n          >\r\n            Đơn hàng\r\n          </Menu.Item>\r\n          {accountType === \"admin\" && (\r\n            <Menu.Item\r\n              style={{ color: \"white\" }}\r\n              key={PAGE.PROMOTIONS}\r\n              icon={<FiGift size={16} style={{ marginRight: 8 }} />}\r\n            >\r\n              Khuyến mãi\r\n            </Menu.Item>\r\n          )}\r\n          {accountType === \"admin\" && (\r\n            <Menu.Item\r\n              style={{ color: \"white\" }}\r\n              key={PAGE.CUSTOMER_LIST}\r\n              icon={<FiUsers size={16} style={{ marginRight: 8 }} />}\r\n            >\r\n              Hành khách\r\n            </Menu.Item>\r\n          )}\r\n        </Menu>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{\r\n            width: \"80%\",\r\n            marginTop: 64,\r\n            borderColor: \"white\",\r\n          }}\r\n          onClick={() => handleSignOut()}\r\n        >\r\n          Đăng xuất\r\n        </Button>\r\n      </div>\r\n      {renderRightDashboard()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import animationData from \"assets/bus.json\";\r\nimport React from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SetTypeAccount } from \"pages/Dashboard/redux/actions\";\r\n\r\nconst defaultOptions = {\r\n  loop: true,\r\n  autoplay: true,\r\n  animationData: animationData,\r\n  rendererSettings: {\r\n    preserveAspectRatio: \"xMidYMid slice\",\r\n  },\r\n};\r\n\r\nfunction Loading() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        await firebase\r\n          .database()\r\n          .ref(\"users\")\r\n          .child(firebase.auth().currentUser.uid)\r\n          .once(\"value\", (snapshot) => {\r\n            dispatch(SetTypeAccount.get(snapshot.val()));\r\n          });\r\n        history.push(\"/dashboard\");\r\n      } else {\r\n        history.push(\"/login\");\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flex: 1,\r\n        backgroundColor: \"white\",\r\n      }}\r\n    >\r\n      <Lottie options={defaultOptions} width={400} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Login from 'pages/Login'\r\nimport Dashboard from 'pages/Dashboard'\r\nimport Loading from \"pages/Loading\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\">\r\n          <Loading />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/dashboard\">\r\n          <Dashboard />\r\n        </Route>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyBQEVkTU5GeejO-ZA_vq9rRopNoh754fMw\",\r\n  authDomain: \"dimo-3e6f7.firebaseapp.com\",\r\n  databaseURL: \"https://dimo-3e6f7.firebaseio.com\",\r\n  projectId: \"dimo-3e6f7\",\r\n  storageBucket: \"dimo-3e6f7.appspot.com\",\r\n  messagingSenderId: \"155067027749\",\r\n  appId: \"1:155067027749:web:d218c29405e42ea7ed4acc\",\r\n  measurementId: \"G-MB07KHZCFB\"\r\n};","import axios from 'axios';\r\nimport { from } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { DOMAIN, log as SysLog, __DEV__ } from 'ultis/functions';\r\n\r\nexport function request(param) {\r\n  let url = `${DOMAIN}/${param.url}`\r\n\r\n  const language = 'vi';\r\n  const parameters = param.param;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    accept: 'application/json',\r\n    \"Access-Control-Allow-Origin\": true,\r\n    'Accept-Language': language\r\n  }\r\n\r\n  if (__DEV__) {\r\n    console.info('Log_header', headers);\r\n  }\r\n\r\n  return from(\r\n    axios.request({\r\n      url,\r\n      timeout: 10000,\r\n      headers,\r\n      method: param.method || 'POST',\r\n      data: parameters\r\n    }),\r\n  ).pipe(\r\n    map((result) => {\r\n      return { result: result.data.result, status: result.status };\r\n    }),\r\n    tap((result) => log(url, parameters, result)),\r\n  );\r\n}\r\n\r\nfunction log(url, parameters, result) {\r\n  SysLog(\r\n    '--------------------------\\n',\r\n    // '\\x1b[34m',\r\n    'Request data:',\r\n    // '\\x1b[37m',\r\n    '\\nURL:           ',\r\n    // '\\x1b[32m',\r\n    url,\r\n    // '\\x1b[37m',\r\n    '\\nParam:         ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(parameters, null, '\\x1b[32m'),\r\n    // '\\x1b[37m',\r\n    '\\nResponse Data: ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(result, null, '\\x1b[32m') || true,\r\n    // '\\x1b[37m',\r\n    '\\n--------------------------',\r\n  );\r\n}\r\n","import { store } from \"core/store\";\r\nimport moment from \"moment\";\r\nimport { combineEpics, ofType } from \"redux-observable\";\r\nimport { catchError, exhaustMap, map } from \"rxjs/operators\";\r\nimport { request } from \"ultis/api\";\r\nimport { PAGE } from \"../constant\";\r\nimport {\r\n  ActivatePromotion,\r\n  ActivatePromotionFailed,\r\n  ActivatePromotionSuccess,\r\n  CreateNewPromotion,\r\n  CreateNewPromotionFailed,\r\n  CreateNewPromotionSuccess,\r\n  DeletePromotion,\r\n  DeletePromotionFailed,\r\n  DeletePromotionSuccess,\r\n  EditOrderDetail,\r\n  EditOrderDetailFailed,\r\n  EditOrderDetailSuccess,\r\n  GetBusOperator,\r\n  GetBusOperatorDetail,\r\n  GetBusOperatorDetailFailed,\r\n  GetBusOperatorDetailSuccess,\r\n  GetBusOperatorFailed,\r\n  GetBusOperatorSuccess,\r\n  GetCityData,\r\n  GetCityDataFailed,\r\n  GetCityDataSuccess,\r\n  GetCustomerList,\r\n  GetCustomerListFailed,\r\n  GetCustomerListSuccess,\r\n  GetDistrictData,\r\n  GetDistrictFailed,\r\n  GetDistrictSuccess,\r\n  GetMapSeat,\r\n  GetMapSeatFailed,\r\n  GetMapSeatSuccess,\r\n  GetOrderDetail,\r\n  GetOrderDetailFailed,\r\n  GetOrderDetailSuccess,\r\n  GetOrderList,\r\n  GetOrderListFailed,\r\n  GetOrderListSuccess,\r\n  GetPromotion,\r\n  GetPromotionFailed,\r\n  GetPromotionSuccess,\r\n  GetStatistic,\r\n  GetStatisticAmount,\r\n  GetStatisticAmountFailed,\r\n  GetStatisticAmountSuccess,\r\n  GetStatisticFailed,\r\n  GetStatisticSuccess,\r\n  GetTripList,\r\n  GetTripListFailed,\r\n  GetTripListSuccess,\r\n  GetWardData,\r\n  GetWardDataFailed,\r\n  GetWardDataSuccess,\r\n  SetCurrentPage,\r\n  SetTypeAccount,\r\n  GetDetailPromotion,\r\n  GetDetailPromotionSuccess,\r\n  GetDetailPromotionFailed,\r\n  AddBusOperator,\r\n  AddBusOperatorSuccess,\r\n  AddBusOperatorFailed,\r\n  DeleteBusOperator,\r\n  DeleteBusOperatorSuccess,\r\n  DeleteBusOperatorFailed,\r\n  GetCitiesTrip,\r\n  GetCitiesTripSuccess,\r\n  GetCitiesTripFailed,\r\n  DeleteTrip,\r\n  DeleteTripFailed,\r\n  DeleteTripSuccess,\r\n} from \"./actions\";\r\n\r\nconst getBusOperatorEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetBusOperator.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"GET\",\r\n        url: \"busOperator\",\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetBusOperatorSuccess.get(result.result);\r\n          }\r\n          return GetBusOperatorFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetBusOperatorFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst getTripListEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetTripList.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"tripsList\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetTripListSuccess.get(result.result);\r\n          }\r\n          return GetTripListFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetTripListFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst getOrderListEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetOrderList.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"tickets\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetOrderListSuccess.get(result.result);\r\n          }\r\n          return GetOrderListFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetOrderListFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst getCustomerListEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetCustomerList.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"GET\",\r\n        url: \"getCustomers\",\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetCustomerListSuccess.get(result.result);\r\n          }\r\n          return GetCustomerListFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetCustomerListFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst getBusOperatorDetailEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetBusOperatorDetail.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"busOperatorDetail\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(SetTypeAccount.get(action.payload.busOperatorId));\r\n            return GetBusOperatorDetailSuccess.get(result.result);\r\n          }\r\n          return GetBusOperatorDetailFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetBusOperatorDetailFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst getOrderDetailEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetOrderDetail.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"findTicketWeb\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(\r\n              SetCurrentPage.get({\r\n                currentPage: PAGE.ORDER_LIST,\r\n                detailPage: PAGE.ORDER_DETAIL,\r\n              })\r\n            );\r\n            return GetOrderDetailSuccess.get(result.result);\r\n          }\r\n          return GetOrderDetailFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetOrderDetailFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst editOrderDetailEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(EditOrderDetail.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"editTickets\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return EditOrderDetailSuccess.get(result.message);\r\n          }\r\n          return EditOrderDetailFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return EditOrderDetailFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst getMapSeatEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetMapSeat.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"getSeatWeb\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetMapSeatSuccess.get(result.result);\r\n          }\r\n          return GetMapSeatFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetMapSeatFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst getStatisticEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetStatistic.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"getTotal\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(\r\n              GetStatisticAmount.get({\r\n                busOperatorId: action.payload.busOperatorId,\r\n                from: moment(new Date()).add(-7, \"days\").format(\"DD/MM/YYYY\"),\r\n                to: moment(new Date()).format(\"DD/MM/YYYY\"),\r\n              })\r\n            );\r\n            return GetStatisticSuccess.get(result.result);\r\n          }\r\n          return GetStatisticFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetStatisticFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst getStatisticAmountEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetStatisticAmount.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"getStatistic\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetStatisticAmountSuccess.get(result.result);\r\n          }\r\n          return GetStatisticAmountFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetStatisticAmountFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst getCityDataEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetCityData.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"GET\",\r\n        url: \"locationCity\",\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetCityDataSuccess.get(result.result);\r\n          }\r\n          return GetCityDataFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetCityDataFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst getDistrictDataEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetDistrictData.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"locationDistrict\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetDistrictSuccess.get(result.result);\r\n          }\r\n          return GetDistrictFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetDistrictFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst getWardDataEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetWardData.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"locationWard\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetWardDataSuccess.get(result.result);\r\n          }\r\n          return GetWardDataFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetWardDataFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst getPromotionEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetPromotion.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"GET\",\r\n        url: \"promotion\",\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetPromotionSuccess.get(result.result);\r\n          }\r\n          return GetPromotionFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetPromotionFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst createNewPromotionEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(CreateNewPromotion.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"newPromotion\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(GetPromotion.get());\r\n            store.dispatch(\r\n              SetCurrentPage.get({ currentPage: PAGE.PROMOTIONS })\r\n            );\r\n            return CreateNewPromotionSuccess.get(result.result);\r\n          }\r\n          return CreateNewPromotionFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return CreateNewPromotionFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst deletePromotionEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(DeletePromotion.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"deletePromotion\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(GetPromotion.get());\r\n            return DeletePromotionSuccess.get(result.result);\r\n          }\r\n          return DeletePromotionFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return DeletePromotionFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst activatePromotionEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(ActivatePromotion.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"activatePromotion\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(GetPromotion.get());\r\n            return ActivatePromotionSuccess.get(result.result);\r\n          }\r\n          return ActivatePromotionFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return ActivatePromotionFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst getDetailPromotionEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetDetailPromotion.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"promotionDetail\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(\r\n              SetCurrentPage.get({\r\n                currentPage: PAGE.PROMOTIONS,\r\n                detailPage: PAGE.DETAIL_PROMOTION,\r\n              })\r\n            );\r\n            return GetDetailPromotionSuccess.get(result.result);\r\n          }\r\n          return GetDetailPromotionFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetDetailPromotionFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst addBusOperatorEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(AddBusOperator.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"newBusOperator\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(GetBusOperator.get());\r\n            store.dispatch(\r\n              SetCurrentPage.get({ currentPage: PAGE.BUS_OPERATOR })\r\n            );\r\n            return AddBusOperatorSuccess.get(result.result);\r\n          }\r\n          return AddBusOperatorFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return AddBusOperatorFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst deleteBusOperatorEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(DeleteBusOperator.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"deleteBusOperator\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(GetBusOperator.get());\r\n            store.dispatch(\r\n              SetCurrentPage.get({ currentPage: PAGE.BUS_OPERATOR })\r\n            );\r\n            return DeleteBusOperatorSuccess.get(result.result);\r\n          }\r\n          return DeleteBusOperatorFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return DeleteBusOperatorFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst deleteTripEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(DeleteTrip.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"deleteTrip\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            const { accountType } = store.getState().Dashboard;\r\n            store.dispatch(\r\n              GetTripList.get(\r\n                accountType !== \"admin\" ? { busOperatorId: accountType } : {}\r\n              )\r\n            );\r\n            store.dispatch(SetCurrentPage.get({ currentPage: PAGE.TRIP_LIST }));\r\n            return DeleteTripSuccess.get(result.result);\r\n          }\r\n          return DeleteTripFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return DeleteTripFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nconst getCitiesTripEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetCitiesTrip.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"GET\",\r\n        url: \"cities\",\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(SetCurrentPage.get({ currentPage: PAGE.TRIP_LIST, detailPage: PAGE.ADD_TRIP }));\r\n            return GetCitiesTripSuccess.get(result.result);\r\n          }\r\n          return GetCitiesTripFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return GetCitiesTripFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nexport const dashboardEpics = combineEpics(\r\n  deleteBusOperatorEpic$,\r\n  deleteTripEpic$,\r\n  addBusOperatorEpic$,\r\n  getDetailPromotionEpic$,\r\n  activatePromotionEpic$,\r\n  deletePromotionEpic$,\r\n  getCityDataEpic$,\r\n  getWardDataEpic$,\r\n  getDistrictDataEpic$,\r\n  getBusOperatorEpic$,\r\n  getTripListEpic$,\r\n  getOrderListEpic$,\r\n  getCustomerListEpic$,\r\n  getBusOperatorDetailEpic$,\r\n  getOrderDetailEpic$,\r\n  editOrderDetailEpic$,\r\n  getMapSeatEpic$,\r\n  getStatisticEpic$,\r\n  getStatisticAmountEpic$,\r\n  getPromotionEpic$,\r\n  createNewPromotionEpic$,\r\n  getCitiesTripEpic$\r\n);\r\n","import { combineEpics } from 'redux-observable';\r\nimport { dashboardEpics } from 'pages/Dashboard/redux/epics';\r\n\r\nexport const rootEpic = combineEpics(dashboardEpics);\r\n","import { PAGE } from \"pages/Dashboard/constant\";\r\nimport {\r\n  GetAccountType,\r\n  GetBusOperator,\r\n  GetBusOperatorDetail,\r\n  GetBusOperatorDetailFailed,\r\n  GetBusOperatorDetailSuccess,\r\n  GetBusOperatorFailed,\r\n  GetBusOperatorSuccess,\r\n  GetCityData,\r\n  GetCityDataFailed,\r\n  GetCityDataSuccess,\r\n  GetCustomerList,\r\n  GetCustomerListFailed,\r\n  GetCustomerListSuccess,\r\n  GetDistrictSuccess,\r\n  GetMapSeat,\r\n  GetMapSeatFailed,\r\n  GetMapSeatSuccess,\r\n  GetOrderDetail,\r\n  GetOrderDetailFailed,\r\n  GetOrderDetailSuccess,\r\n  GetOrderList,\r\n  GetOrderListFailed,\r\n  GetOrderListSuccess,\r\n  GetStatistic,\r\n  GetStatisticAmountFailed,\r\n  GetStatisticAmountSuccess,\r\n  GetStatisticFailed,\r\n  GetStatisticSuccess,\r\n  GetTripList,\r\n  GetTripListFailed,\r\n  GetTripListSuccess,\r\n  GetWardDataSuccess,\r\n  ResetDashboard,\r\n  SetCurrentPage,\r\n  SetTypeAccount,\r\n  GetPromotion,\r\n  GetPromotionSuccess,\r\n  GetPromotionFailed,\r\n  GetDetailPromotion,\r\n  GetDetailPromotionSuccess,\r\n  GetDetailPromotionFailed,\r\n  GetCitiesTrip,\r\n  GetCitiesTripSuccess,\r\n  GetCitiesTripFailed,\r\n  GetBusType,\r\n  GetBusTypeSuccess,\r\n  GetBusTypeFailed,\r\n} from \"./actions\";\r\nconst initialState = {\r\n  busOperator: [],\r\n  tripList: [],\r\n  orderList: [],\r\n  customerList: [],\r\n  accountType: null,\r\n  isLoading: false,\r\n  isLoadingDashboard: false,\r\n  accountDetail: null,\r\n  orderDetail: {},\r\n  tripDetail: {},\r\n  currentPage: PAGE.HOME,\r\n  detailPage: null,\r\n  stastic: null,\r\n  statisticData: null,\r\n  cityData: [],\r\n  districtData: [],\r\n  wardData: [],\r\n  promotions: [],\r\n  promotionDetail: {},\r\n  citiesTrip: [],\r\n  busType: [],\r\n};\r\n\r\nexport function dashboardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GetBusOperator.type:\r\n      return { ...state, isLoading: true };\r\n    case GetBusOperatorSuccess.type:\r\n      return { ...state, busOperator: action.payload.data, isLoading: false };\r\n    case GetBusOperatorFailed.type:\r\n      return { ...state, isLoading: false };\r\n    case GetTripList.type:\r\n      return { ...state, isLoading: true };\r\n    case GetTripListSuccess.type:\r\n      return { ...state, tripList: action.payload, isLoading: false };\r\n    case GetTripListFailed.type:\r\n      return { ...state, isLoading: false };\r\n    case GetOrderList.type:\r\n      return { ...state, isLoading: true };\r\n    case GetOrderListSuccess.type:\r\n      return { ...state, orderList: action.payload, isLoading: false };\r\n    case GetOrderListFailed.type:\r\n      return { ...state, isLoading: false };\r\n    case SetTypeAccount.type:\r\n      return { ...state, accountType: action.payload };\r\n    case GetCustomerList.type:\r\n      return { ...state, isLoading: true };\r\n    case GetCustomerListSuccess.type:\r\n      return { ...state, customerList: action.payload, isLoading: false };\r\n    case GetCustomerListFailed.type:\r\n      return { ...state, isLoading: false };\r\n    case GetBusOperatorDetail.type:\r\n      return { ...state, isLoadingDashboard: true };\r\n    case GetBusOperatorDetailSuccess.type:\r\n      return {\r\n        ...state,\r\n        accountDetail: action.payload,\r\n        isLoadingDashboard: false,\r\n      };\r\n    case GetBusOperatorDetailFailed.type:\r\n      return { ...state, isLoadingDashboard: false };\r\n    case GetAccountType.type:\r\n      return { ...state, isLoadingDashboard: true };\r\n    case GetOrderDetail.type:\r\n      return { ...state, isLoading: true };\r\n    case GetOrderDetailSuccess.type:\r\n      return { ...state, orderDetail: action.payload, isLoading: false };\r\n    case GetOrderDetailFailed.type:\r\n      return { ...state, isLoading: false };\r\n    case GetMapSeat.type:\r\n      return { ...state, isLoading: true };\r\n    case GetMapSeatSuccess.type:\r\n      return { ...state, tripDetail: action.payload, isLoading: false };\r\n    case GetMapSeatFailed.type:\r\n      return { ...state, isLoading: false };\r\n    case SetCurrentPage.type:\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload.currentPage,\r\n        detailPage: action.payload.detailPage,\r\n      };\r\n    case ResetDashboard.type:\r\n      return { ...initialState };\r\n    case GetStatistic.type:\r\n      return { ...state, isLoading: true };\r\n    case GetStatisticSuccess.type:\r\n      return { ...state, stastic: action.payload };\r\n    case GetStatisticFailed.type:\r\n      return { ...state, isLoading: false };\r\n    case GetStatisticAmountSuccess.type:\r\n      return { ...state, statisticData: action.payload, isLoading: false };\r\n    case GetStatisticAmountFailed.type:\r\n      return { ...state, isLoading: false };\r\n    case GetCityData.type:\r\n      return { ...state, isLoading: true };\r\n    case GetCityDataSuccess.type:\r\n      return {\r\n        ...state,\r\n        cityData: action.payload,\r\n        districtData: [],\r\n        wardData: [],\r\n        isLoading: false,\r\n      };\r\n    case GetCityDataFailed.type:\r\n      return { ...state, isLoading: false };\r\n    case GetDistrictSuccess.type:\r\n      return { ...state, districtData: action.payload, wardData: [] };\r\n    case GetWardDataSuccess.type:\r\n      return { ...state, wardData: action.payload };\r\n    case GetPromotion.type:\r\n      return { ...state, isLoading: true };\r\n    case GetPromotionSuccess.type:\r\n      return { ...state, promotions: action.payload, isLoading: false };\r\n    case GetPromotionFailed.type:\r\n      return { ...state, isLoading: false };\r\n    case GetDetailPromotion.type:\r\n      return { ...state, isLoading: true };\r\n    case GetDetailPromotionSuccess.type:\r\n      return { ...state, promotionDetail: action.payload, isLoading: false };\r\n    case GetDetailPromotionFailed.type:\r\n      return { ...state, isLoading: false };\r\n    case GetCitiesTrip.type:\r\n      return { ...state, isLoading: true };\r\n    case GetCitiesTripSuccess.type:\r\n      return { ...state, citiesTrip: action.payload, isLoading: false };\r\n    case GetCitiesTripFailed.type:\r\n      return { ...state, isLoading: false };\r\n    case GetBusType.type:\r\n      return { ...state, isLoading: true };\r\n    case GetBusTypeSuccess.type:\r\n      return { ...state, busType: action.payload, isLoading: false };\r\n    case GetBusTypeFailed.type:\r\n      return { ...state, isLoading: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { dashboardReducer } from 'pages/Dashboard/redux/reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  Dashboard: dashboardReducer,\r\n});\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport { rootEpic } from './epic';\r\nimport { rootReducer } from './reducer';\r\nimport { __DEV__ } from 'ultis/functions';\r\n\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nconst applyMiddlewarePro = applyMiddleware(epicMiddleware);\r\nconst applyMiddlewareDev = applyMiddleware(logger, epicMiddleware);\r\n\r\nexport const store = createStore(rootReducer, __DEV__ ? applyMiddlewareDev : applyMiddlewarePro);\r\n\r\nepicMiddleware.run(rootEpic);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { firebaseConfig } from \"./firebaseConfig\";\r\nimport firebase from \"firebase\";\r\nimport { Provider } from 'react-redux'\r\nimport { store } from 'core/store';\r\nimport { ConfigProvider } from 'antd';\r\nimport viVN from 'antd/es/locale/vi_VN';\r\nimport { IconContext } from \"react-icons\"\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ConfigProvider locale={viVN}>\r\n        <IconContext.Provider value={{ className: \"react-icon-clasname\", style: { verticalAlign: 'middle' } }}>\r\n          <App />\r\n        </IconContext.Provider>\r\n      </ConfigProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}