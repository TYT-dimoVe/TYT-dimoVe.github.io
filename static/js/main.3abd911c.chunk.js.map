{"version":3,"sources":["pages/Login/index.jsx","ultis/functions.js","pages/Dashboard/redux/actions.js","pages/Dashboard/component/searchInput.js","pages/Dashboard/component/busOperatorTable.js","pages/Dashboard/constant.js","pages/Dashboard/component/customerList.js","pages/Dashboard/component/orderListTable.js","pages/Dashboard/component/tripTable.js","pages/Dashboard/component/homePage.js","pages/Dashboard/index.jsx","pages/Loading/index.jsx","App.js","serviceWorker.js","firebaseConfig.js","ultis/api.js","pages/Dashboard/redux/epics.js","core/epic.js","pages/Dashboard/redux/reducer.js","core/reducer.js","core/store.js","index.js"],"names":["Login","validationSchema","yup","shape","email","label","required","password","matches","message","id","className","initialValues","isInitialValid","onSubmit","values","firebase","auth","signInWithEmailAndPassword","catch","error","code","Modal","title","content","handleLogin","handleChange","handleBlur","handleSubmit","isValid","errors","setFieldTouched","touched","value","onChange","onTouchStart","onBlur","placeholder","type","disabled","onClick","size","COLOR","GetBusOperator","defineAction","GetBusOperatorSuccess","GetBusOperatorFailed","GetTripList","GetTripListSuccess","GetTripListFailed","GetOrderList","GetOrderListSuccess","GetOrderListFailed","SetTypeAccount","getColumnSearchProps","dataIndex","searchPlaceholder","searchText","setSearchText","searchedColumn","setSearchColumn","refInput","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","e","target","onPressEnter","handleSearch","width","marginBottom","display","icon","SearchOutlined","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","current","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","loadingIcon","LoadingOutlined","fontSize","spin","BusOperator","busOperator","useSelector","state","Dashboard","isLoading","dispatch","useDispatch","useState","useRef","useEffect","get","busOperatorColumns","key","sorter","a","b","name","localeCompare","address","phoneNumber","indicator","PlusCircleOutlined","columns","dataSource","CUSTOMER_STATUS","CustomerList","orderList","filteredInfo","setFilterInfo","orderColumns","identityId","index","filters","filteredValue","paymentStatus","pagination","OrderList","ticketId","compare","dateBooked","moment","format","totalPrice","n","separate","s","regex","ret","replace","formatCurrency","TripList","tripList","accountType","busOperatorId","tripsColumns","tripId","timeStart","Home","menuSelect","setMenuSelect","src","defaultSelectedKeys","defaultOpenKeys","mode","onSelect","item","keyPath","domEvent","Item","PieChartOutlined","DesktopOutlined","marginRight","marginTop","borderColor","signOut","renderRightDashboard","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loading","history","useHistory","onAuthStateChanged","user","database","child","currentUser","uid","once","snapshot","val","push","justifyContent","alignItems","flex","options","App","exact","path","Boolean","window","location","hostname","match","request","param","url","parameters","headers","accept","from","axios","timeout","method","data","pipe","map","result","status","tap","JSON","stringify","log","dashboardEpics","combineEpics","action$","ofType","exhaustMap","action","catchError","payload","rootEpic","initialState","customerList","rootReducer","combineReducers","epicMiddleware","createEpicMiddleware","applyMiddlewarePro","applyMiddleware","store","logger","createStore","run","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","StrictMode","locale","viVN","Provider","verticalAlign","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","console"],"mappings":"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","file":"static/js/main.3abd911c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./login.css\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { Input, Modal } from \"antd\";\r\nimport axios from \"axios\";\r\nimport firebase from \"firebase\";\r\nimport moment from \"moment\";\r\n\r\nfunction Login() {\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .label(\"Email\")\r\n      .email(\"Email hiện tại không hợp lệ\")\r\n      .required(\"* Vui lòng nhập email\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"* Vui lòng nhập mật khẩu\")\r\n      .matches(/(?=.{8,})/, {\r\n        message: \"Mật khẩu phải gồm 8 kí tự\",\r\n      }),\r\n  });\r\n\r\n  const handleLogin = (values) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(values.email, values.password)\r\n      .catch((error) => {\r\n        if (error.code === \"auth/user-not-found\") {\r\n          Modal.error({\r\n            title: \"Không tìm thấy\",\r\n            content: \"Không tìm thấy người dùng này.\",\r\n          });\r\n        } else if (error.code === \"auth/wrong-password\") {\r\n          Modal.error({\r\n            title: \"Sai mật khẩu\",\r\n            content: \"Bạn đã nhập sai mật khẩu.\",\r\n          });\r\n        }\r\n      });\r\n    // firebase\r\n    //   .database()\r\n    //   .ref(\"trips\")\r\n    //   .once(\"value\", (snapshot) => {\r\n    //     if (!snapshot.exists()) {\r\n    //       console.log(\"Trips donot exist\");\r\n    //       return;\r\n    //     }\r\n    //     var tripToGet = snapshot.val();\r\n    //     const busOperator = {};\r\n    //     const map = new Map();\r\n    //     for (const item of tripToGet) {\r\n    //       if (!map.has(item.busOperatorId)) {\r\n    //         map.set(item.busOperatorId, true); // set any value to Map\r\n    //         busOperator[item.busOperatorId] = {\r\n    //           busOperatorId: item.busOperatorId,\r\n    //           email: `${item.busOperatorId.toLowerCase()}@gmail.com`,\r\n    //           name: item.busOperator,\r\n    //           phoneNumber: \"0912345678\",\r\n    //           contact: item.busOperator,\r\n    //           address: \"221 PHẠM NGŨ LÃO, QUẬN 1, TP.HCM\",\r\n    //           lat: 10.768,\r\n    //           long: 106.69,\r\n    //         };\r\n    //       }\r\n    //     }\r\n    //     console.log(busOperator);\r\n    //   })\r\n    //   .catch((error) => console.log(error));\r\n    // axios\r\n    //   .request({\r\n    //     url: \"http://localhost:5001/dimo-3e6f7/us-central1/dimoApi/api/trips\",\r\n    //     timeout: 10000,\r\n    //     headers: { \"Access-Control-Allow-Origin\": true },\r\n    //     method: \"POST\",\r\n    //     data: {\r\n    //       from: \"NHATRANG\",\r\n    //       to: \"SAIGON\",\r\n    //       date: \"21/06/2020\",\r\n    //       page: 1,\r\n    //     },\r\n    //   })\r\n    //   .then((res) => console.log(res))\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div id=\"loginBg\">\r\n      <span className=\"dimoName\">dimo</span>\r\n      <div id=\"loginBox\">\r\n        <span id=\"loginStyle\">Đăng nhập</span>\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          isInitialValid={false}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => handleLogin(values)}\r\n        >\r\n          {({\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            values,\r\n            isValid,\r\n            errors,\r\n            touched,\r\n            setFieldTouched,\r\n          }) => {\r\n            return (\r\n              <Form>\r\n                <Input\r\n                  id=\"inputBox\"\r\n                  value={values.email}\r\n                  onChange={handleChange(\"email\")}\r\n                  onTouchStart={() => setFieldTouched(\"email\")}\r\n                  onBlur={handleBlur(\"email\")}\r\n                  placeholder=\"Email\"\r\n                />\r\n                {errors.email && <span id=\"errorStyle\">{errors.email}</span>}\r\n                <Input\r\n                  id=\"inputBox\"\r\n                  type=\"password\"\r\n                  onChange={handleChange(\"password\")}\r\n                  onTouchStart={() => setFieldTouched(\"password\")}\r\n                  value={values.password}\r\n                  onBlur={handleBlur(\"password\")}\r\n                  placeholder=\"Mật khẩu\"\r\n                />\r\n                {errors.password && (\r\n                  <span id=\"errorStyle\">{errors.password}</span>\r\n                )}\r\n                <button\r\n                  id=\"loginBtn\"\r\n                  type=\"submit\"\r\n                  disabled={!isValid}\r\n                  onClick={handleSubmit}\r\n                  size={\"large\"}\r\n                >\r\n                  Đăng nhập\r\n                </button>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","export const DOMAIN = 'https://us-central1-dimo-3e6f7.cloudfunctions.net/dimoApi/api'\r\n// export const DOMAIN = 'http://localhost:5001/dimo-3e6f7/us-central1/dimoApi/api'\r\nexport const __DEV__ = false;\r\nexport const COLOR = {\r\n  primary: '#2E4170'\r\n}\r\n\r\nexport function log(...arg) {\r\n  if (__DEV__) {\r\n    console.info(\r\n      arg\r\n        .map((i) =>\r\n          ['string', 'number'].indexOf(typeof i) === -1 ? JSON.stringify(i, null, ' ') : i,\r\n        )\r\n        .join(' '),\r\n    );\r\n  }\r\n}\r\n\r\nexport function formatCurrency(n, separate = '.') {\r\n  var s = n.toString();\r\n  var regex = /\\B(?=(\\d{3})+(?!\\d))/g;\r\n  var ret = s.replace(regex, separate);\r\n  return ret;\r\n}\r\n","import { defineAction } from 'redux-typed-actions'\r\n\r\nexport const GetBusOperator = defineAction('GET_BUS_OPERATOR_REQUEST')\r\nexport const GetBusOperatorSuccess = defineAction('GET_BUS_OPERATOR_SUCCESS')\r\nexport const GetBusOperatorFailed = defineAction('GET_BUS_OPERATOR_FAILED')\r\n\r\nexport const GetTripList = defineAction('GET_TRIP_LIST_REQUEST')\r\nexport const GetTripListSuccess = defineAction('GET_TRIP_LIST_SUCCESS')\r\nexport const GetTripListFailed = defineAction('GET_TRIP_LIST_FAILED')\r\n\r\nexport const GetOrderList = defineAction('GET_ORDER_LIST_REQUEST')\r\nexport const GetOrderListSuccess = defineAction('GET_ORDER_LIST_SUCCESS')\r\nexport const GetOrderListFailed = defineAction('GET_ORDER_LIST_FAILED')\r\n\r\nexport const SetTypeAccount = defineAction('SET_TYPE_ACCOUNT')\r\n","import { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, Space } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React from \"react\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { COLOR } from \"ultis/functions\";\r\n\r\nexport const getColumnSearchProps = (dataIndex, searchPlaceholder, searchText, setSearchText, searchedColumn, setSearchColumn, refInput) => {\r\n  return {\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n        <div style={{ padding: 8 }}>\r\n          <Input\r\n            ref={refInput}\r\n            placeholder={searchPlaceholder}\r\n            value={selectedKeys[0]}\r\n            onChange={(e) =>\r\n              setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n            }\r\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn)}\r\n            style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n          />\r\n          <Space>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => handleSearch(selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn)}\r\n              icon={<SearchOutlined />}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Tìm\r\n        </Button>\r\n            <Button\r\n              onClick={() => handleReset(clearFilters, setSearchText)}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Cài lại\r\n        </Button>\r\n          </Space>\r\n        </div>\r\n      ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? COLOR.primary : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => refInput.current.select());\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      ) : (\r\n          text\r\n        ),\r\n  }\r\n}\r\n\r\nconst handleSearch = (selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn) => {\r\n  confirm();\r\n  setSearchColumn(dataIndex);\r\n  setSearchText(selectedKeys[0]);\r\n};\r\n\r\nconst handleReset = (clearFilters, setSearchText) => {\r\n  clearFilters();\r\n  setSearchText(\"\");\r\n};","import { LoadingOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button, Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\nimport { GetBusOperator } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction BusOperator() {\r\n  const busOperator = useSelector((state) => state.Dashboard.busOperator);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n\r\n  useEffect(() => {\r\n    dispatch(GetBusOperator.get());\r\n  }, []);\r\n\r\n  const busOperatorColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        \"name\",\r\n        \"Nhập tên nhà xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: \"Nhà xe\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      sorter: (a, b) => a.name.localeCompare(b.name),\r\n    },\r\n    {\r\n      title: \"Địa chỉ\",\r\n      dataIndex: \"address\",\r\n      sorter: (a, b) => a.address.localeCompare(b.address),\r\n    },\r\n    {\r\n      title: \"SĐT\",\r\n      dataIndex: \"phoneNumber\",\r\n      sorter: (a, b) => a.phoneNumber.localeCompare(b.phoneNumber),\r\n      ...getColumnSearchProps(\r\n        \"phoneNumber\",\r\n        \"Nhập SĐT\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      sorter: (a, b) => a.email.localeCompare(b.email),\r\n      ...getColumnSearchProps(\r\n        \"email\",\r\n        \"Nhập email\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Liên hệ\",\r\n      dataIndex: \"contact\",\r\n      sorter: (a, b) => a.email.localeCompare(b.email),\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách nhà xe</span>\r\n      <Button\r\n        type='primary'\r\n        icon={<PlusCircleOutlined />}\r\n        style={{ width: 200, marginBottom: 32 }}\r\n        onClick={() => { }}\r\n      >\r\n        Thêm nhà xe mới\r\n      </Button>\r\n      <Table columns={busOperatorColumns} dataSource={busOperator} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BusOperator;\r\n","export const CUSTOMER_STATUS = {\r\n  NOT_PAID: 'NOT_PAID',\r\n  PAID: 'PAID',\r\n  NO_ACTIVITY: 'NO_ACTIVITY'\r\n}","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport { CUSTOMER_STATUS } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetOrderList } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction CustomerList() {\r\n  const orderList = useSelector((state) => state.Dashboard.orderList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n  const [filteredInfo, setFilterInfo] = useState(null)\r\n\r\n  useEffect(() => {\r\n    dispatch(GetOrderList.get());\r\n  }, []);\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    setFilterInfo(filters)\r\n  };\r\n\r\n  const orderColumns = [\r\n    {\r\n      title: \"CMND\",\r\n      dataIndex: \"identityId\",\r\n      key: 'identityId',\r\n      sorter: (a, b) => a.identityId.localeCompare(b.identityId),\r\n      ...getColumnSearchProps(\r\n        \"identityId\",\r\n        \"Nhập CMND\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Tên\",\r\n      dataIndex: \"customerName\",\r\n      key: \"customerName\",\r\n      ...getColumnSearchProps(\r\n        \"customerName\",\r\n        \"Nhập tên hành khách\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: 'email',\r\n      sorter: (a, b) => a.identityId.localeCompare(b.identityId),\r\n      ...getColumnSearchProps(\r\n        \"email\",\r\n        \"Nhập email\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"SĐT\",\r\n      dataIndex: \"phoneNumber\",\r\n      key: 'phoneNumber',\r\n      sorter: (a, b) => a.phoneNumber.localeCompare(b.phoneNumber),\r\n      ...getColumnSearchProps(\r\n        \"phoneNumber\",\r\n        \"Nhập SĐT\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Trạng thái\",\r\n      dataIndex: \"status\",\r\n      render: (value, record, index) => {\r\n        if (value === CUSTOMER_STATUS.PAID) {\r\n          return <span style={{ color: 'green' }}>Đã thanh toán</span>\r\n        }\r\n        if (value === CUSTOMER_STATUS.NOT_PAID) {\r\n          return <span style={{ color: 'red' }}>Chưa thanh toán</span>\r\n        }\r\n        return <span>--</span>\r\n      },\r\n      filters: [\r\n        { text: 'Đã thanh toán', value: CUSTOMER_STATUS.PAID },\r\n        { text: 'Chưa thanh toán', value: CUSTOMER_STATUS.NOT_PAID },\r\n        { text: '--', value: CUSTOMER_STATUS.NO_ACTIVITY },\r\n      ],\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.paymentStatus === value,\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách hành khách</span>\r\n      <Table columns={orderColumns} dataSource={orderList} onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerList;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from 'moment';\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR, formatCurrency } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\nimport { GetOrderList } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction OrderList() {\r\n  const orderList = useSelector((state) => state.Dashboard.orderList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n  const [filteredInfo, setFilterInfo] = useState(null)\r\n\r\n  useEffect(() => {\r\n    dispatch(GetOrderList.get());\r\n  }, []);\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    setFilterInfo(filters)\r\n  };\r\n\r\n  const orderColumns = [\r\n    {\r\n      title: \"Mã đơn\",\r\n      dataIndex: \"ticketId\",\r\n      key: 'ticketId',\r\n      sorter: (a, b) => a.ticketId.localeCompare(b.ticketId),\r\n    },\r\n    {\r\n      title: \"Ngày tạo\",\r\n      dataIndex: \"dateBooked\",\r\n      sorter: {\r\n        compare: (a, b) => a.dateBooked - b.dateBooked,\r\n      },\r\n      render: (value, record, index) => {\r\n        return <span>{moment(value).format(\"DD/MM/YYYY\")}</span>\r\n      }\r\n    },\r\n    {\r\n      title: \"Hành khách\",\r\n      dataIndex: \"customerName\",\r\n      key: \"customerName\",\r\n      ...getColumnSearchProps(\r\n        \"customerName\",\r\n        \"Nhập tên ngườt đặt\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    // {\r\n    //   title: \"Nhà xe\",\r\n    //   dataIndex: \"customerName\",\r\n    //   key: \"customerName\",\r\n    //   ...getColumnSearchProps(\r\n    //     \"customerName\",\r\n    //     \"Nhập tên nhà xe\",\r\n    //     searchText,\r\n    //     setSearchText,\r\n    //     searchedColumn,\r\n    //     setSearchColumn,\r\n    //     refInput\r\n    //   ),\r\n    // },\r\n    {\r\n      title: \"Tổng tiền\",\r\n      dataIndex: \"totalPrice\",\r\n      sorter: {\r\n        compare: (a, b) => a.totalPrice - b.totalPrice,\r\n      },\r\n      render: (value, record, index) => {\r\n        return <span>{formatCurrency(value)}</span>\r\n      }\r\n    },\r\n    {\r\n      title: \"Trạng thái\",\r\n      dataIndex: \"paymentStatus\",\r\n      render: (value, record, index) => {\r\n        if (value) {\r\n          return <span style={{ color: 'green' }}>Đã thanh toán</span>\r\n        }\r\n        return <span style={{ color: 'red' }}>Chưa thanh toán</span>\r\n      },\r\n      filters: [\r\n        { text: 'Đã thanh toán', value: true },\r\n        { text: 'Chưa thanh toán', value: false },\r\n      ],\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.paymentStatus === value,\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách đơn hàng</span>\r\n      <Table columns={orderColumns} dataSource={orderList} onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderList;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\nimport { GetTripList } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction TripList() {\r\n  const tripList = useSelector((state) => state.Dashboard.tripList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n\r\n  useEffect(() => {\r\n    if (accountType !== 'admin') {\r\n      dispatch(GetTripList.get({ busOperatorId: accountType }));\r\n    } else {\r\n      dispatch(GetTripList.get());\r\n    }\r\n  }, []);\r\n\r\n  const tripsColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        \"busOperator\",\r\n        \"Nhập tên nhà xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: \"Nhà xe\",\r\n      dataIndex: \"busOperator\",\r\n      key: \"busOperator\",\r\n    },\r\n    {\r\n      title: \"Mã chuyến\",\r\n      dataIndex: \"tripId\",\r\n      sorter: (a, b) => a.tripId.localeCompare(b.tripId),\r\n    },\r\n    {\r\n      title: \"Loại xe\",\r\n      dataIndex: \"busTypeTitle\",\r\n      key: 'busTypeTitle',\r\n      ...getColumnSearchProps(\r\n        \"busTypeTitle\",\r\n        \"Nhập loại xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Điểm khởi hành\",\r\n      dataIndex: \"from\",\r\n      key: 'from',\r\n      ...getColumnSearchProps(\r\n        \"from\",\r\n        \"Nhập điểm khởi hành\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Điểm đến\",\r\n      dataIndex: \"to\",\r\n      key: 'to',\r\n      ...getColumnSearchProps(\r\n        \"to\",\r\n        \"Nhập điểm điến\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Thời điểm khởi hành\",\r\n      dataIndex: \"timeStart\",\r\n      sorter: (a, b) => a.timeStart.localeCompare(b.timeStart),\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách chuyến xe</span>\r\n      <Table columns={tripsColumns} dataSource={tripList} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TripList;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from 'moment';\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR, formatCurrency } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\nimport { GetOrderList } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction Home() {\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span>Trang chủ chưa có gì nè</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { DesktopOutlined, PieChartOutlined } from \"@ant-design/icons\";\r\nimport { Avatar, Menu, Button } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { FiFileText, FiUsers } from \"react-icons/fi\";\r\nimport BusOperator from \"./component/busOperatorTable\";\r\nimport CustomerList from \"./component/customerList\";\r\nimport OrderList from \"./component/orderListTable\";\r\nimport TripList from \"./component/tripTable\";\r\nimport \"./dashboard.css\";\r\nimport firebase from \"firebase\";\r\nimport Home from \"./component/homePage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction Dashboard() {\r\n  const [menuSelect, setMenuSelect] = useState(\"0\");\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n\r\n  const onMenuSelect = ({ item, key, keyPath, selectedKeys, domEvent }) => {\r\n    setMenuSelect(key);\r\n  };\r\n\r\n  const renderRightDashboard = () => {\r\n    switch (menuSelect) {\r\n      case \"0\":\r\n        return <Home />;\r\n      case \"1\":\r\n        return <BusOperator />;\r\n      case \"2\":\r\n        return <TripList />;\r\n      case \"3\":\r\n        return <OrderList />;\r\n      case \"4\":\r\n        return <CustomerList />;\r\n      default:\r\n        return <BusOperator />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"dashboardBg\">\r\n      <div id=\"menuContainer\">\r\n        <Avatar size={100} src=\"https://source.unsplash.com/random\" />\r\n        <span id=\"adminName\">Admin</span>\r\n        <Menu\r\n          defaultSelectedKeys={[\"0\"]}\r\n          defaultOpenKeys={[\"sub1\"]}\r\n          mode=\"inline\"\r\n          onSelect={onMenuSelect}\r\n        >\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key=\"0\"\r\n            icon={<PieChartOutlined />}\r\n          >\r\n            Trang chủ\r\n          </Menu.Item>\r\n          {accountType === \"admin\" && (\r\n            <Menu.Item\r\n              style={{ color: \"white\" }}\r\n              key=\"1\"\r\n              icon={<PieChartOutlined />}\r\n            >\r\n              Nhà xe\r\n            </Menu.Item>\r\n          )}\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key=\"2\"\r\n            icon={<DesktopOutlined />}\r\n          >\r\n            Chuyến xe\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key=\"3\"\r\n            icon={<FiFileText size={16} style={{ marginRight: 8 }} />}\r\n          >\r\n            Đơn hàng\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key=\"4\"\r\n            icon={<FiUsers size={16} style={{ marginRight: 8 }} />}\r\n          >\r\n            Hành khách\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{\r\n            width: \"80%\",\r\n            marginTop: 64,\r\n            borderColor: \"white\",\r\n          }}\r\n          onClick={() => firebase.auth().signOut()}\r\n        >\r\n          Đăng xuất\r\n        </Button>\r\n      </div>\r\n      {renderRightDashboard()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import animationData from \"assets/bus.json\";\r\nimport React from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SetTypeAccount } from \"pages/Dashboard/redux/actions\";\r\n\r\nconst defaultOptions = {\r\n  loop: true,\r\n  autoplay: true,\r\n  animationData: animationData,\r\n  rendererSettings: {\r\n    preserveAspectRatio: \"xMidYMid slice\",\r\n  },\r\n};\r\n\r\nfunction Loading() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        await firebase\r\n          .database()\r\n          .ref(\"users\")\r\n          .child(firebase.auth().currentUser.uid)\r\n          .once(\"value\", (snapshot) => {\r\n            dispatch(SetTypeAccount.get(snapshot.val()));\r\n          });\r\n        history.push(\"/dashboard\");\r\n      } else {\r\n        history.push(\"/login\");\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flex: 1,\r\n        backgroundColor: \"white\",\r\n      }}\r\n    >\r\n      <Lottie options={defaultOptions} width={400} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Login from 'pages/Login'\r\nimport Dashboard from 'pages/Dashboard'\r\nimport Loading from \"pages/Loading\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\">\r\n          <Loading />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/dashboard\">\r\n          <Dashboard />\r\n        </Route>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyBQEVkTU5GeejO-ZA_vq9rRopNoh754fMw\",\r\n  authDomain: \"dimo-3e6f7.firebaseapp.com\",\r\n  databaseURL: \"https://dimo-3e6f7.firebaseio.com\",\r\n  projectId: \"dimo-3e6f7\",\r\n  storageBucket: \"dimo-3e6f7.appspot.com\",\r\n  messagingSenderId: \"155067027749\",\r\n  appId: \"1:155067027749:web:d218c29405e42ea7ed4acc\",\r\n  measurementId: \"G-MB07KHZCFB\"\r\n};","import axios from 'axios';\r\nimport { from } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { DOMAIN, log as SysLog, __DEV__ } from 'ultis/functions';\r\n\r\nexport function request(param) {\r\n  let url = `${DOMAIN}/${param.url}`\r\n\r\n  const language = 'vi';\r\n  const parameters = param.param;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    accept: 'application/json',\r\n    \"Access-Control-Allow-Origin\": true,\r\n    'Accept-Language': language\r\n  }\r\n\r\n  if (__DEV__) {\r\n    console.info('Log_header', headers);\r\n  }\r\n\r\n  return from(\r\n    axios.request({\r\n      url,\r\n      timeout: 10000,\r\n      headers,\r\n      method: param.method || 'POST',\r\n      data: parameters\r\n    }),\r\n  ).pipe(\r\n    map((result) => {\r\n      return { result: result.data.result, status: result.status };\r\n    }),\r\n    tap((result) => log(url, parameters, result)),\r\n  );\r\n}\r\n\r\nfunction log(url, parameters, result) {\r\n  SysLog(\r\n    '--------------------------\\n',\r\n    // '\\x1b[34m',\r\n    'Request data:',\r\n    // '\\x1b[37m',\r\n    '\\nURL:           ',\r\n    // '\\x1b[32m',\r\n    url,\r\n    // '\\x1b[37m',\r\n    '\\nParam:         ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(parameters, null, '\\x1b[32m'),\r\n    // '\\x1b[37m',\r\n    '\\nResponse Data: ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(result, null, '\\x1b[32m') || true,\r\n    // '\\x1b[37m',\r\n    '\\n--------------------------',\r\n  );\r\n}\r\n","import { combineEpics, ofType } from 'redux-observable'\r\nimport { catchError, exhaustMap, map } from 'rxjs/operators'\r\nimport { request } from 'ultis/api'\r\nimport { GetBusOperator, GetBusOperatorFailed, GetBusOperatorSuccess, GetTripList, GetTripListSuccess, GetTripListFailed, GetOrderList, GetOrderListSuccess, GetOrderListFailed } from './actions'\r\n\r\nconst getBusOperatorEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetBusOperator.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'GET',\r\n        url: 'busOperator'\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetBusOperatorSuccess.get(result.result)\r\n          }\r\n          return GetBusOperatorFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetBusOperatorFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getTripListEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetTripList.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'tripsList',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetTripListSuccess.get(result.result)\r\n          }\r\n          return GetTripListFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetTripListFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getOrderListEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetOrderList.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'GET',\r\n        url: 'tickets'\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetOrderListSuccess.get(result.result)\r\n          }\r\n          return GetOrderListFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetOrderListFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nexport const dashboardEpics = combineEpics(getBusOperatorEpic$, getTripListEpic$, getOrderListEpic$)\r\n","import { combineEpics } from 'redux-observable';\r\nimport { dashboardEpics } from 'pages/Dashboard/redux/epics';\r\n\r\nexport const rootEpic = combineEpics(dashboardEpics);\r\n","import { GetBusOperator, GetBusOperatorFailed, GetBusOperatorSuccess, GetTripList, GetTripListSuccess, GetTripListFailed, GetOrderList, GetOrderListSuccess, GetOrderListFailed, SetTypeAccount } from './actions'\r\n\r\nconst initialState = {\r\n  busOperator: [],\r\n  tripList: [],\r\n  orderList: [],\r\n  customerList: [],\r\n  accountType: null,\r\n  isLoading: false\r\n}\r\n\r\nexport function dashboardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GetBusOperator.type:\r\n      return { ...state, isLoading: true }\r\n    case GetBusOperatorSuccess.type:\r\n      return { ...state, busOperator: action.payload.data, isLoading: false }\r\n    case GetBusOperatorFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetTripList.type:\r\n      return { ...state, isLoading: true }\r\n    case GetTripListSuccess.type:\r\n      return { ...state, tripList: action.payload, isLoading: false }\r\n    case GetTripListFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetOrderList.type:\r\n      return { ...state, isLoading: true }\r\n    case GetOrderListSuccess.type:\r\n      return { ...state, orderList: action.payload, isLoading: false }\r\n    case GetOrderListFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case SetTypeAccount.type:\r\n      return { ...state, accountType: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { dashboardReducer } from 'pages/Dashboard/redux/reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  Dashboard: dashboardReducer,\r\n});\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport { rootEpic } from './epic';\r\nimport { rootReducer } from './reducer';\r\nimport { __DEV__ } from 'ultis/functions';\r\n\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nconst applyMiddlewarePro = applyMiddleware(epicMiddleware);\r\nconst applyMiddlewareDev = applyMiddleware(logger, epicMiddleware);\r\n\r\nexport const store = createStore(rootReducer, __DEV__ ? applyMiddlewareDev : applyMiddlewarePro);\r\n\r\nepicMiddleware.run(rootEpic);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { firebaseConfig } from \"./firebaseConfig\";\r\nimport firebase from \"firebase\";\r\nimport { Provider } from 'react-redux'\r\nimport { store } from 'core/store';\r\nimport { ConfigProvider } from 'antd';\r\nimport viVN from 'antd/es/locale/vi_VN';\r\nimport { IconContext } from \"react-icons\"\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ConfigProvider locale={viVN}>\r\n        <IconContext.Provider value={{ className: \"react-icon-clasname\", style: { verticalAlign: 'middle' } }}>\r\n          <App />\r\n        </IconContext.Provider>\r\n      </ConfigProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}