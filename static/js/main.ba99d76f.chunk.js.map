{"version":3,"sources":["pages/Login/index.jsx","ultis/functions.js","pages/Dashboard/redux/actions.js","pages/Dashboard/component/searchInput.js","pages/Dashboard/component/busOperatorTable.js","pages/Dashboard/constant.js","pages/Dashboard/component/customerList.js","pages/Dashboard/component/homePage.js","pages/Dashboard/component/editOrderPage.js","pages/Dashboard/component/orderListTable.js","pages/Dashboard/component/tripDateDetail.js","pages/Dashboard/component/tripTable.js","pages/Dashboard/index.jsx","pages/Loading/index.jsx","App.js","serviceWorker.js","firebaseConfig.js","ultis/api.js","pages/Dashboard/redux/epics.js","core/epic.js","pages/Dashboard/redux/reducer.js","core/reducer.js","core/store.js","index.js"],"names":["Login","history","useHistory","validationSchema","yup","shape","email","label","required","password","matches","message","id","className","initialValues","isInitialValid","onSubmit","values","firebase","auth","signInWithEmailAndPassword","then","push","catch","error","code","Modal","title","content","handleLogin","handleChange","handleBlur","handleSubmit","isValid","errors","setFieldTouched","touched","value","onChange","onTouchStart","onBlur","placeholder","type","disabled","onClick","size","COLOR","formatCurrency","n","separate","s","toString","regex","ret","replace","GetBusOperator","defineAction","GetBusOperatorSuccess","GetBusOperatorFailed","GetTripList","GetTripListSuccess","GetTripListFailed","GetOrderList","GetOrderListSuccess","GetOrderListFailed","SetTypeAccount","GetCustomerList","GetCustomerListSuccess","GetCustomerListFailed","GetBusOperatorDetail","GetBusOperatorDetailSuccess","GetBusOperatorDetailFailed","GetAccountType","GetOrderDetail","GetOrderDetailSuccess","GetOrderDetailFailed","EditOrderDetail","EditOrderDetailSuccess","EditOrderDetailFailed","GetMapSeat","GetMapSeatSuccess","GetMapSeatFailed","SetCurrentPage","ResetDashboard","GetStatistic","GetStatisticSuccess","GetStatisticFailed","GetStatisticAmount","GetStatisticAmountSuccess","GetStatisticAmountFailed","getColumnSearchProps","dataIndex","searchPlaceholder","searchText","setSearchText","searchedColumn","setSearchColumn","refInput","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","e","target","onPressEnter","handleSearch","width","marginBottom","display","icon","SearchOutlined","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","current","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","loadingIcon","LoadingOutlined","fontSize","spin","BusOperator","busOperator","useSelector","state","Dashboard","isLoading","dispatch","useDispatch","useState","useRef","useEffect","get","busOperatorColumns","key","sorter","a","b","name","localeCompare","address","phoneNumber","indicator","PlusCircleOutlined","columns","dataSource","CUSTOMER_STATUS","PAGE","PAYMENT_TYPE","PAYMENT_TITLE","DIRECT","BANK_TRANSFER","ATM_PAY","MASTER_VISA","MOMO_PAY","CustomerList","customerList","filteredInfo","setFilterInfo","customerColumns","identityId","index","filters","filteredValue","paymentStatus","pagination","RangePicker","DatePicker","Home","accountType","accountDetail","stastic","statisticData","busOperatorId","totalTicket","totalPaid","totalNotPaid","totalAmount","flex","flexDirection","dateStr","from","to","handleChangeRange","format","allowClear","moment","height","data","margin","top","right","bottom","left","dataKey","stroke","strokeDasharray","xtype","offset","position","angle","tickFormatter","number","formatter","props","Option","Select","EditOrderPage","orderDetail","routes","breadcrumbName","ticketId","itemRender","route","params","paths","textDecorationColor","separator","customerName","customerEmail","dateBooked","totalTicketAmount","seatId","join","totalPrice","paymentCode","defaultValue","tripId","timeStart","departureDay","borderColor","ticket","OrderList","orderList","detailPage","getOrderList","orderColumns","compare","EditOutlined","search","handleEdit","currentPage","TripDateDetail","tripDetail","seats","trip","date","renderOneSeat","seat","status","goToOrderDetail","renderSeat","floor","map","item","marginTop","busTypeTitle","locale","viVN","busType","handleChangeDate","marginRight","floor1","floor2","length","TripList","tripList","getTripList","tripsColumns","Date","DeleteOutlined","isLoadingDashboard","onAuthStateChanged","user","database","child","currentUser","uid","once","snapshot","val","src","defaultSelectedKeys","mode","onSelect","keyPath","domEvent","Item","PieChartOutlined","DesktopOutlined","signOut","renderRightDashboard","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loading","justifyContent","alignItems","options","App","exact","path","Boolean","window","location","hostname","match","request","param","url","parameters","headers","accept","axios","timeout","method","pipe","result","tap","JSON","stringify","log","dashboardEpics","combineEpics","action$","ofType","exhaustMap","action","catchError","payload","store","add","rootEpic","initialState","rootReducer","combineReducers","epicMiddleware","createEpicMiddleware","applyMiddlewarePro","applyMiddleware","logger","createStore","run","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","StrictMode","Provider","verticalAlign","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.ba99d76f.chunk.js","sourcesContent":["import { Input, Modal } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport * as yup from \"yup\";\r\nimport \"./login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .label(\"Email\")\r\n      .email(\"Email hiện tại không hợp lệ\")\r\n      .required(\"* Vui lòng nhập email\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"* Vui lòng nhập mật khẩu\")\r\n      .matches(/(?=.{8,})/, {\r\n        message: \"Mật khẩu phải gồm 8 kí tự\",\r\n      }),\r\n  });\r\n\r\n  const handleLogin = (values) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(values.email, values.password)\r\n      .then(() => history.push(\"/\"))\r\n      .catch((error) => {\r\n        if (error.code === \"auth/user-not-found\") {\r\n          Modal.error({\r\n            title: \"Không tìm thấy\",\r\n            content: \"Không tìm thấy người dùng này.\",\r\n          });\r\n        } else if (error.code === \"auth/wrong-password\") {\r\n          Modal.error({\r\n            title: \"Sai mật khẩu\",\r\n            content: \"Bạn đã nhập sai mật khẩu.\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"loginBg\">\r\n      <span className=\"dimoName\">dimo</span>\r\n      <div id=\"loginBox\">\r\n        <span id=\"loginStyle\">Đăng nhập</span>\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          isInitialValid={false}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => handleLogin(values)}\r\n        >\r\n          {({\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            values,\r\n            isValid,\r\n            errors,\r\n            touched,\r\n            setFieldTouched,\r\n          }) => {\r\n            return (\r\n              <Form>\r\n                <Input\r\n                  id=\"inputBox\"\r\n                  value={values.email}\r\n                  onChange={handleChange(\"email\")}\r\n                  onTouchStart={() => setFieldTouched(\"email\")}\r\n                  onBlur={handleBlur(\"email\")}\r\n                  placeholder=\"Email\"\r\n                />\r\n                {errors.email && <span id=\"errorStyle\">{errors.email}</span>}\r\n                <Input\r\n                  id=\"inputBox\"\r\n                  type=\"password\"\r\n                  onChange={handleChange(\"password\")}\r\n                  onTouchStart={() => setFieldTouched(\"password\")}\r\n                  value={values.password}\r\n                  onBlur={handleBlur(\"password\")}\r\n                  placeholder=\"Mật khẩu\"\r\n                />\r\n                {errors.password && (\r\n                  <span id=\"errorStyle\">{errors.password}</span>\r\n                )}\r\n                <button\r\n                  id=\"loginBtn\"\r\n                  type=\"submit\"\r\n                  disabled={!isValid}\r\n                  onClick={handleSubmit}\r\n                  size={\"large\"}\r\n                >\r\n                  Đăng nhập\r\n                </button>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","export const DOMAIN = 'https://us-central1-dimo-3e6f7.cloudfunctions.net/dimoApi/api'\r\n// export const DOMAIN = 'http://localhost:5001/dimo-3e6f7/us-central1/dimoApi/api'\r\nexport const __DEV__ = false;\r\nexport const COLOR = {\r\n  primary: '#2E4170',\r\n  orange: '#FF7000',\r\n  lightBlue: '#3CA0F7',\r\n  gray: '#C4C4C4'\r\n}\r\n\r\nexport function log(...arg) {\r\n  if (__DEV__) {\r\n    console.info(\r\n      arg\r\n        .map((i) =>\r\n          ['string', 'number'].indexOf(typeof i) === -1 ? JSON.stringify(i, null, ' ') : i,\r\n        )\r\n        .join(' '),\r\n    );\r\n  }\r\n}\r\n\r\nexport function formatCurrency(n, separate = '.') {\r\n  var s = n.toString();\r\n  var regex = /\\B(?=(\\d{3})+(?!\\d))/g;\r\n  var ret = s.replace(regex, separate);\r\n  return ret;\r\n}\r\n","import { defineAction } from 'redux-typed-actions'\r\n\r\nexport const GetBusOperator = defineAction('GET_BUS_OPERATOR_REQUEST')\r\nexport const GetBusOperatorSuccess = defineAction('GET_BUS_OPERATOR_SUCCESS')\r\nexport const GetBusOperatorFailed = defineAction('GET_BUS_OPERATOR_FAILED')\r\n\r\nexport const GetTripList = defineAction('GET_TRIP_LIST_REQUEST')\r\nexport const GetTripListSuccess = defineAction('GET_TRIP_LIST_SUCCESS')\r\nexport const GetTripListFailed = defineAction('GET_TRIP_LIST_FAILED')\r\n\r\nexport const GetOrderList = defineAction('GET_ORDER_LIST_REQUEST')\r\nexport const GetOrderListSuccess = defineAction('GET_ORDER_LIST_SUCCESS')\r\nexport const GetOrderListFailed = defineAction('GET_ORDER_LIST_FAILED')\r\n\r\nexport const SetTypeAccount = defineAction('SET_TYPE_ACCOUNT')\r\n\r\nexport const GetCustomerList = defineAction('GET_CUSTOMER_LIST_REQUEST')\r\nexport const GetCustomerListSuccess = defineAction('GET_CUSTOMER_LIST_SUCCESS')\r\nexport const GetCustomerListFailed = defineAction('GET_CUSTOMER_LIST_FAILED')\r\n\r\nexport const GetBusOperatorDetail = defineAction('GET_BUS_OPERATOR_DETAIL_REQUEST')\r\nexport const GetBusOperatorDetailSuccess = defineAction('GET_BUS_OPERATOR_DETAIL_SUCCESS')\r\nexport const GetBusOperatorDetailFailed = defineAction('GET_BUS_OPERATOR_DETAIL_FAILED')\r\n\r\nexport const GetAccountType = defineAction('GET_TYPE_ACCOUNT')\r\n\r\nexport const GetOrderDetail = defineAction('GET_ORDER_DETAIL_REQUEST')\r\nexport const GetOrderDetailSuccess = defineAction('GET_ORDER_DETAIL_SUCCESS')\r\nexport const GetOrderDetailFailed = defineAction('GET_ORDER_DETAIL_FAILED')\r\n\r\nexport const GetTripDetail = defineAction('GET_TRIP_DETAIL_REQUEST')\r\nexport const GetTripDetailSuccess = defineAction('GET_TRIP_DETAIL_SUCCESS')\r\nexport const GetTripDetailFailed = defineAction('GET_TRIP_DETAIL_FAILED')\r\n\r\nexport const EditOrderDetail = defineAction('EDIT_ORDER_DETAIL_REQUEST')\r\nexport const EditOrderDetailSuccess = defineAction('EDIT_ORDER_DETAIL_SUCCESS')\r\nexport const EditOrderDetailFailed = defineAction('EDIT_ORDER_DETAIL_FAILED')\r\n\r\nexport const GetMapSeat = defineAction('GET_MAP_SEAT_REQUEST')\r\nexport const GetMapSeatSuccess = defineAction('GET_MAP_SEAT_SUCCESS')\r\nexport const GetMapSeatFailed = defineAction('GET_MAP_SEAT_FAILED')\r\n\r\nexport const SetCurrentPage = defineAction('SET_CURRENT_PAGE')\r\nexport const ResetDashboard = defineAction('RESET_DASHBOARD')\r\n\r\nexport const GetStatistic = defineAction('GET_STATISTIC_REQUEST')\r\nexport const GetStatisticSuccess = defineAction('GET_STATISTIC_SUCCESS')\r\nexport const GetStatisticFailed = defineAction('GET_STATISTIC_FAILED')\r\n\r\nexport const GetStatisticAmount = defineAction('GET_STATISTIC_AMOUNT_REQUEST')\r\nexport const GetStatisticAmountSuccess = defineAction('GET_STATISTIC_AMOUNT_SUCCESS')\r\nexport const GetStatisticAmountFailed = defineAction('GET_STATISTIC_AMOUNT_FAILED')","import { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, Space } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React from \"react\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { COLOR } from \"ultis/functions\";\r\n\r\nexport const getColumnSearchProps = (dataIndex, searchPlaceholder, searchText, setSearchText, searchedColumn, setSearchColumn, refInput) => {\r\n  return {\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n        <div style={{ padding: 8 }}>\r\n          <Input\r\n            ref={refInput}\r\n            placeholder={searchPlaceholder}\r\n            value={selectedKeys[0]}\r\n            onChange={(e) =>\r\n              setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n            }\r\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn)}\r\n            style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n          />\r\n          <Space>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => handleSearch(selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn)}\r\n              icon={<SearchOutlined />}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Tìm\r\n        </Button>\r\n            <Button\r\n              onClick={() => handleReset(clearFilters, setSearchText)}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Cài lại\r\n        </Button>\r\n          </Space>\r\n        </div>\r\n      ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? COLOR.primary : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => refInput.current.select());\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      ) : (\r\n          text\r\n        ),\r\n  }\r\n}\r\n\r\nconst handleSearch = (selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn) => {\r\n  confirm();\r\n  setSearchColumn(dataIndex);\r\n  setSearchText(selectedKeys[0]);\r\n};\r\n\r\nconst handleReset = (clearFilters, setSearchText) => {\r\n  clearFilters();\r\n  setSearchText(\"\");\r\n};","import { LoadingOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button, Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\nimport { GetBusOperator } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction BusOperator() {\r\n  const busOperator = useSelector((state) => state.Dashboard.busOperator);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n\r\n  useEffect(() => {\r\n    dispatch(GetBusOperator.get());\r\n  }, []);\r\n\r\n  const onAddNewBusOperator = () => {\r\n  }\r\n\r\n  const busOperatorColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        \"name\",\r\n        \"Nhập tên nhà xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: \"Nhà xe\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      sorter: (a, b) => a.name.localeCompare(b.name),\r\n    },\r\n    {\r\n      title: \"Địa chỉ\",\r\n      dataIndex: \"address\",\r\n      sorter: (a, b) => a.address.localeCompare(b.address),\r\n    },\r\n    {\r\n      title: \"SĐT\",\r\n      dataIndex: \"phoneNumber\",\r\n      sorter: (a, b) => a.phoneNumber.localeCompare(b.phoneNumber),\r\n      ...getColumnSearchProps(\r\n        \"phoneNumber\",\r\n        \"Nhập SĐT\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      sorter: (a, b) => a.email.localeCompare(b.email),\r\n      ...getColumnSearchProps(\r\n        \"email\",\r\n        \"Nhập email\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Liên hệ\",\r\n      dataIndex: \"contact\",\r\n      sorter: (a, b) => a.email.localeCompare(b.email),\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách nhà xe</span>\r\n      <Button\r\n        type='primary'\r\n        icon={<PlusCircleOutlined />}\r\n        style={{ width: 200, marginBottom: 32 }}\r\n        onClick={() => onAddNewBusOperator()}\r\n      >\r\n        Thêm nhà xe mới\r\n      </Button>\r\n      <Table columns={busOperatorColumns} dataSource={busOperator} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BusOperator;\r\n","export const CUSTOMER_STATUS = {\r\n  NOT_PAID: \"NOT_PAID\",\r\n  PAID: \"PAID\",\r\n  NO_ACTIVITY: \"NO_ACTIVITY\",\r\n};\r\n\r\nexport const PAGE = {\r\n  HOME: \"HOME\",\r\n  BUS_OPERATOR: 'BUS_OPERATOR',\r\n  TRIP_LIST: 'TRIP_LIST',\r\n  ORDER_LIST: 'ORDER_LIST',\r\n  CUSTOMER_LIST: 'CUSTOMER_LIST',\r\n  ORDER_DETAIL: \"ORDER_DETAIL\",\r\n  TRIP_DETAIL: \"TRIP_DETAIL\",\r\n};\r\n\r\nexport const PAYMENT_TYPE = [\r\n  {\r\n    value: \"DIRECT\",\r\n    text: \"Trực tiếp\",\r\n  },\r\n  {\r\n    value: \"BANK_TRANSFER\",\r\n    text: \"Chuyển khoản\",\r\n  },\r\n  {\r\n    value: \"ATM_PAY\",\r\n    text: \"Thẻ nội địa\",\r\n  },\r\n  {\r\n    value: \"MASTER_VISA\",\r\n    text: \"Thẻ Visa/Mastercard\",\r\n  },\r\n  {\r\n    value: \"MOMO_PAY\",\r\n    text: \"Ví điện tử MOMO\",\r\n  },\r\n];\r\n\r\nexport const PAYMENT_TITLE = {\r\n  DIRECT: \"Trực tiếp\",\r\n  BANK_TRANSFER: \"Chuyển khoản\",\r\n  ATM_PAY: \"Thẻ nội địa\",\r\n  MASTER_VISA: \"Thẻ Visa/Mastercard\",\r\n  MOMO_PAY: \"Ví điện tử MOMO\",\r\n};\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport { CUSTOMER_STATUS } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetCustomerList } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction CustomerList() {\r\n  const customerList = useSelector((state) => state.Dashboard.customerList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n  const [filteredInfo, setFilterInfo] = useState(null)\r\n\r\n  useEffect(() => {\r\n    dispatch(GetCustomerList.get());\r\n  }, []);\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    setFilterInfo(filters)\r\n  };\r\n\r\n  const customerColumns = [\r\n    {\r\n      title: \"CMND\",\r\n      dataIndex: \"identityId\",\r\n      key: 'identityId',\r\n      sorter: (a, b) => a.identityId.localeCompare(b.identityId),\r\n      ...getColumnSearchProps(\r\n        \"identityId\",\r\n        \"Nhập CMND\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Tên\",\r\n      dataIndex: \"customerName\",\r\n      key: \"customerName\",\r\n      ...getColumnSearchProps(\r\n        \"customerName\",\r\n        \"Nhập tên hành khách\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"customerEmail\",\r\n      key: 'customerEmail',\r\n      sorter: (a, b) => a.identityId.localeCompare(b.identityId),\r\n      ...getColumnSearchProps(\r\n        \"customerEmail\",\r\n        \"Nhập email\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"SĐT\",\r\n      dataIndex: \"phoneNumber\",\r\n      key: 'phoneNumber',\r\n      sorter: (a, b) => a.phoneNumber.localeCompare(b.phoneNumber),\r\n      ...getColumnSearchProps(\r\n        \"phoneNumber\",\r\n        \"Nhập SĐT\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Trạng thái\",\r\n      dataIndex: \"status\",\r\n      render: (value, record, index) => {\r\n        if (value === CUSTOMER_STATUS.PAID) {\r\n          return <span style={{ color: 'green' }}>Đã thanh toán</span>\r\n        }\r\n        if (value === CUSTOMER_STATUS.NOT_PAID) {\r\n          return <span style={{ color: 'red' }}>Chưa thanh toán</span>\r\n        }\r\n        return <span>--</span>\r\n      },\r\n      filters: [\r\n        { text: 'Đã thanh toán', value: CUSTOMER_STATUS.PAID },\r\n        { text: 'Chưa thanh toán', value: CUSTOMER_STATUS.NOT_PAID },\r\n        { text: '--', value: CUSTOMER_STATUS.NO_ACTIVITY },\r\n      ],\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.paymentStatus === value,\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách hành khách</span>\r\n      <Table columns={customerColumns} dataSource={customerList} onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerList;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { DatePicker, Spin } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from 'moment';\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CartesianGrid, Label, Line, LineChart, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { COLOR, formatCurrency } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\nimport { GetStatistic, GetStatisticAmount } from \"../redux/actions\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch()\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const accountDetail = useSelector((state) => state.Dashboard.accountDetail);\r\n  const stastic = useSelector((state) => state.Dashboard.stastic);\r\n  const statisticData = useSelector((state) => state.Dashboard.statisticData);\r\n\r\n  useEffect(() => {\r\n    dispatch(GetStatistic.get({ busOperatorId: accountType }))\r\n  }, [])\r\n\r\n  const handleChangeRange = (value) => {\r\n    dispatch(GetStatisticAmount.get({ busOperatorId: accountType, from: value[0], to: value[1] }))\r\n  }\r\n\r\n  if (isLoading || !stastic || !accountType) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Xin chào {accountType !== 'admin' ? accountDetail.name : 'Admin'},</span>\r\n      <div id='statisticWrap'>\r\n        <div className='boxStyle'>\r\n          <span className='titleBox'>Tổng đơn hàng</span>\r\n          <span className='amountStyle'>{stastic.totalTicket}</span>\r\n        </div>\r\n        <div className='boxStyle'>\r\n          <span className='titleBox' style={{ color: 'green' }}>Đã thanh toán</span>\r\n          <span className='amountStyle'>{stastic.totalPaid}</span>\r\n        </div>\r\n        <div className='boxStyle'>\r\n          <span className='titleBox' style={{ color: 'red' }}>Chưa thanh toán</span>\r\n          <span className='amountStyle'>{stastic.totalNotPaid}</span>\r\n        </div>\r\n        <div className='boxStyle'>\r\n          <span className='titleBox'>Doanh thu</span>\r\n          <span className='amountStyle'>{formatCurrency(stastic.totalAmount)}</span>\r\n        </div>\r\n      </div>\r\n      <div id='boxStatistic'>\r\n        <div style={{ display: 'flex', flex: 3, flexDirection: 'column' }}>\r\n          <RangePicker style={{ marginBottom: 16, width: 300 }} onChange={(value, dateStr) => handleChangeRange(dateStr)} format='DD/MM/YYYY' allowClear={false} value={[moment(statisticData.from, 'DD/MM/YYYY'), moment(statisticData.to, 'DD/MM/YYYY')]} />\r\n          <LineChart width={700} height={400} data={statisticData.statisticData} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n            <Line type='monotone' dataKey=\"amount\" stroke={COLOR.primary} />\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis height={50} dataKey=\"name\">\r\n              <Label value={statisticData.xtype} offset={0} position=\"insideBottom\" />\r\n            </XAxis>\r\n            <YAxis label={{ value: 'Doanh thu', angle: -90, position: 'insideLeft' }} width={110} tickFormatter={number => { return formatCurrency(number) }} />\r\n            <Tooltip formatter={(value, name, props) => { return [formatCurrency(value), \"Doanh thu\"] }} />\r\n          </LineChart>\r\n        </div>\r\n        <div style={{ display: 'flex', flex: 1, flexDirection: 'column' }}>\r\n          <div className='boxCloneStyle'>\r\n            <span className='titleBox'>Tổng doanh thu</span>\r\n            <span className='amountStyle'>{formatCurrency(statisticData.totalAmount)}</span>\r\n          </div>\r\n          <div className='boxCloneStyle'>\r\n            <span className='titleBox'>Tổng đơn hàng</span>\r\n            <span className='amountStyle'>{statisticData.totalTicket}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Breadcrumb, Button, Select, Spin } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR, formatCurrency } from \"ultis/functions\";\r\nimport { PAYMENT_TITLE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { EditOrderDetail } from \"../redux/actions\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction EditOrderPage(props) {\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const orderDetail = useSelector((state) => state.Dashboard.orderDetail);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmitEdit = () => {\r\n    dispatch(EditOrderDetail.get({ ticket: orderDetail }));\r\n    props.handleReset();\r\n  };\r\n\r\n  const breadcrumbItem = (route, params, routes, paths) => {\r\n    if (route === routes[0]) {\r\n      return (\r\n        <a\r\n          className=\"titleTopic\"\r\n          style={{ textDecorationColor: COLOR.primary }}\r\n          onClick={() => props.handleReset()}\r\n        >\r\n          Danh sách đơn hàng\r\n        </a>\r\n      );\r\n    }\r\n    return <span className=\"titleTopic\">{route.breadcrumbName}</span>;\r\n  };\r\n\r\n  if (isLoading || !orderDetail) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  const routes = [\r\n    { breadcrumbName: \"Danh sách đơn hàng\" },\r\n    { breadcrumbName: orderDetail.ticketId },\r\n  ];\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <Breadcrumb itemRender={breadcrumbItem} routes={routes} separator=\">\" />\r\n      <span className=\"titleInfo\">Thông tin hành khách</span>\r\n      <div id=\"infoCell\">\r\n        <span className=\"infoTitle\">Tên:</span>\r\n        <span className=\"infoContent\">{orderDetail.customerName}</span>\r\n      </div>\r\n      <div id=\"infoCell\">\r\n        <span className=\"infoTitle\">Số điện thoại:</span>\r\n        <span className=\"infoContent\">{orderDetail.phoneNumber}</span>\r\n      </div>\r\n      {orderDetail.customerEmail && (\r\n        <div id=\"infoCell\">\r\n          <span className=\"infoTitle\">Email:</span>\r\n          <span className=\"infoContent\">{orderDetail.customerEmail}</span>\r\n        </div>\r\n      )}\r\n      <span className=\"titleInfo\">Thông tin đơn hàng</span>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Ngày tạo:</span>\r\n            <span className=\"infoContent\">\r\n              {moment(orderDetail.dateBooked).format(\"DD/MM/YYYY\")}\r\n            </span>\r\n          </div>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Số lượng chỗ:</span>\r\n            <span className=\"infoContent\">{orderDetail.totalTicketAmount}</span>\r\n          </div>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Vị trí:</span>\r\n            <span className=\"infoContent\">{orderDetail.seatId.join(\", \")}</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Tổng tiền:</span>\r\n            <span className=\"infoContent\" style={{ color: COLOR.orange }}>\r\n              {formatCurrency(orderDetail.totalPrice)}\r\n            </span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Phương thức thanh toán:</span>\r\n            <span className=\"infoContent\">\r\n              {PAYMENT_TITLE[orderDetail.paymentCode]}\r\n            </span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Trạng thái:</span>\r\n            <Select\r\n              defaultValue={orderDetail.paymentStatus}\r\n              id=\"dropdown\"\r\n              onChange={(value) => {\r\n                orderDetail.paymentStatus = value;\r\n              }}\r\n            >\r\n              <Option value={true}>Đã thanh toán</Option>\r\n              <Option value={false}>Chưa thanh toán</Option>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <span className=\"titleInfo\">Thông tin chuyến xe</span>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Mã chuyến:</span>\r\n            <span className=\"infoContent\">{orderDetail.tripId}</span>\r\n          </div>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Điểm khởi hành:</span>\r\n            <span className=\"infoContent\">{orderDetail.from}</span>\r\n          </div>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Điểm đến:</span>\r\n            <span className=\"infoContent\">{orderDetail.to}</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Nhà xe:</span>\r\n            <span className=\"infoContent\">{orderDetail.busOperator}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Giờ khởi hành:</span>\r\n            <span className=\"infoContent\">{orderDetail.timeStart}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Ngày khởi hành:</span>\r\n            <span className=\"infoContent\">{orderDetail.departureDay}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ display: \"flex\" }}>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          style={{\r\n            backgroundColor: \"#EB5757\",\r\n            borderColor: \"white\",\r\n          }}\r\n          onClick={() => props.handleReset()}\r\n        >\r\n          Hủy\r\n        </Button>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          style={{\r\n            backgroundColor: COLOR.primary,\r\n            borderColor: \"white\",\r\n          }}\r\n          onClick={() => handleSubmitEdit()}\r\n        >\r\n          Lưu\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditOrderPage;\r\n","import { EditOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Space, Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR, formatCurrency } from \"ultis/functions\";\r\nimport { PAGE, PAYMENT_TYPE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetOrderDetail, GetOrderList, SetCurrentPage } from \"../redux/actions\";\r\nimport EditOrderPage from \"./editOrderPage\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction OrderList() {\r\n  const orderList = useSelector((state) => state.Dashboard.orderList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const detailPage = useSelector((state) => state.Dashboard.detailPage);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n  const [filteredInfo, setFilterInfo] = useState(null);\r\n\r\n  const getOrderList = () => {\r\n    if (accountType && accountType !== \"admin\") {\r\n      dispatch(GetOrderList.get({ busOperatorId: accountType }));\r\n    } else {\r\n      dispatch(GetOrderList.get());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrderList();\r\n  }, []);\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    setFilterInfo(filters);\r\n  };\r\n\r\n  const handleEdit = (value, record) => {\r\n    dispatch(\r\n      GetOrderDetail.get({\r\n        search: record.ticketId,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleReset = () => {\r\n    getOrderList();\r\n    dispatch(SetCurrentPage.get({ currentPage: PAGE.ORDER_LIST }))\r\n  };\r\n\r\n  const orderColumns = [\r\n    {\r\n      title: \"Mã đơn\",\r\n      dataIndex: \"ticketId\",\r\n      key: \"ticketId\",\r\n      sorter: (a, b) => a.ticketId.localeCompare(b.ticketId),\r\n    },\r\n    {\r\n      title: \"Ngày tạo\",\r\n      dataIndex: \"dateBooked\",\r\n      sorter: {\r\n        compare: (a, b) => a.dateBooked - b.dateBooked,\r\n      },\r\n      render: (value, record, index) => {\r\n        return <span>{moment(value).format(\"DD/MM/YYYY\")}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Hành khách\",\r\n      dataIndex: \"customerName\",\r\n      key: \"customerName\",\r\n      ...getColumnSearchProps(\r\n        \"customerName\",\r\n        \"Nhập tên ngườt đặt\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Nhà xe\",\r\n      dataIndex: \"busOperator\",\r\n      key: \"busOperator\",\r\n      ...getColumnSearchProps(\r\n        \"busOperator\",\r\n        \"Nhập tên nhà xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Tổng tiền\",\r\n      dataIndex: \"totalPrice\",\r\n      sorter: {\r\n        compare: (a, b) => a.totalPrice - b.totalPrice,\r\n      },\r\n      render: (value, record, index) => {\r\n        return <span>{formatCurrency(value)}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Hình thức thanh toán\",\r\n      dataIndex: \"paymentCode\",\r\n      render: (value, record, index) => {\r\n        switch (value) {\r\n          case PAYMENT_TYPE[0].value:\r\n            return <span>{PAYMENT_TYPE[0].text}</span>;\r\n          case PAYMENT_TYPE[1].value:\r\n            return <span>{PAYMENT_TYPE[1].text}</span>;\r\n          case PAYMENT_TYPE[2].value:\r\n            return <span>{PAYMENT_TYPE[2].text}</span>;\r\n          case PAYMENT_TYPE[3].value:\r\n            return <span>{PAYMENT_TYPE[3].text}</span>;\r\n          case PAYMENT_TYPE[4].value:\r\n            return <span>{PAYMENT_TYPE[4].text}</span>;\r\n          default:\r\n            return <span />;\r\n        }\r\n      },\r\n      filters: PAYMENT_TYPE,\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.paymentStatus === value,\r\n    },\r\n    {\r\n      title: \"Trạng thái\",\r\n      dataIndex: \"paymentStatus\",\r\n      render: (value, record, index) => {\r\n        if (value) {\r\n          return <span style={{ color: \"green\" }}>Đã thanh toán</span>;\r\n        }\r\n        return <span style={{ color: \"red\" }}>Chưa thanh toán</span>;\r\n      },\r\n      filters: [\r\n        { text: \"Đã thanh toán\", value: true },\r\n        { text: \"Chưa thanh toán\", value: false },\r\n      ],\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.paymentStatus === value,\r\n    },\r\n    {\r\n      title: \"Tác vụ\",\r\n      key: \"action\",\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <EditOutlined\r\n              style={{ fontSize: 20 }}\r\n              onClick={() => handleEdit(value, record)}\r\n            />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  if (detailPage === PAGE.ORDER_DETAIL) {\r\n    return <EditOrderPage handleReset={handleReset} />;\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách đơn hàng</span>\r\n      <Table\r\n        columns={orderColumns}\r\n        dataSource={orderList}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderList;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Breadcrumb, DatePicker, Spin } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport viVN from \"antd/es/locale/vi_VN\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\nimport { GetMapSeat, GetOrderDetail } from \"../redux/actions\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction TripDateDetail(props) {\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const tripDetail = useSelector((state) => state.Dashboard.tripDetail);\r\n  const { seats, trip, date } = tripDetail\r\n\r\n  const breadcrumbItem = (route, params, routes, paths) => {\r\n    if (route === routes[0]) {\r\n      return (\r\n        <a\r\n          className=\"titleTopic\"\r\n          style={{ textDecorationColor: COLOR.primary }}\r\n          onClick={() => props.handleReset()}\r\n        >\r\n          Danh sách chuyến xe\r\n        </a>\r\n      );\r\n    }\r\n    return <span className=\"titleTopic\">{route.breadcrumbName}</span>;\r\n  };\r\n\r\n  const handleChangeDate = (value) => {\r\n    dispatch(GetMapSeat.get({ tripId: trip.tripId, busType: trip.busType, date: value }))\r\n  }\r\n\r\n  const goToOrderDetail = (seat) => {\r\n    dispatch(GetOrderDetail.get({ search: seat.ticketId }))\r\n  }\r\n\r\n  const renderOneSeat = (seat) => (\r\n    <div className='seatStyle' style={{ backgroundColor: seat.status ? COLOR.lightBlue : COLOR.gray }} onClick={seat.status ? () => goToOrderDetail(seat) : () => { }}>\r\n      <span className=\"infoContent\">{seat.seatId}</span>\r\n      {seat.status && seat.ticketId && <span className=\"infoContent\">{seat.ticketId}</span>}\r\n    </div>\r\n  )\r\n\r\n  const renderSeat = (floor) => (\r\n    <table style={{ display: 'flex', flex: 1, flexDirection: 'column' }}>\r\n      {floor.map(item => (\r\n        <tr>\r\n          {item.map(seat => (<td>{seat ? renderOneSeat(seat) : <div className='seatStyle' style={{ backgroundColor: 'white' }} />}</td>))}\r\n        </tr>\r\n      ))}\r\n    </table>\r\n  )\r\n\r\n  if (isLoading || !trip) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  const routes = [\r\n    { breadcrumbName: \"Danh sách đơn hàng\" },\r\n    { breadcrumbName: trip.tripId },\r\n  ];\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <Breadcrumb itemRender={breadcrumbItem} routes={routes} separator=\">\" />\r\n      <div style={{ display: \"flex\", marginTop: 24 }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Loại xe:</span>\r\n            <span className=\"infoContent\">{trip.busTypeTitle}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Điểm khởi hành:</span>\r\n            <span className=\"infoContent\">{trip.from}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Điểm đến:</span>\r\n            <span className=\"infoContent\">{trip.to}</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Nhà xe:</span>\r\n            <span className=\"infoContent\">{trip.busOperator}</span>\r\n          </div>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Giờ khởi hành:</span>\r\n            <span className=\"infoContent\">{trip.timeStart}</span>\r\n          </div>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Ngày khởi hành:</span>\r\n            <DatePicker\r\n              locale={viVN}\r\n              value={moment(date, 'DD/MM/YYYY')}\r\n              format=\"DD/MM/YYYY\"\r\n              allowClear={false}\r\n              onChange={(value, dateStr) => handleChangeDate(dateStr)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ display: \"flex\", marginTop: 24 }}>\r\n        <div\r\n          style={{ backgroundColor: COLOR.lightBlue }}\r\n          className=\"smallSquare\"\r\n        />\r\n        <span className=\"infoContent\" style={{ marginRight: 28 }}>\r\n          Ghế đã đặt\r\n          </span>\r\n        <div\r\n          style={{ backgroundColor: COLOR.gray }}\r\n          className=\"smallSquare\"\r\n        />\r\n        <span className=\"infoContent\" style={{ marginRight: 28 }}>\r\n          Ghế trống\r\n          </span>\r\n      </div>\r\n      {seats && <div style={{ display: 'flex', marginTop: 24 }}>\r\n        {renderSeat(seats.floor1)}\r\n        {seats.floor2 && seats.floor2.length > 0 && renderSeat(seats.floor2)}\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TripDateDetail;\r\n","import {\r\n  DeleteOutlined, EditOutlined,\r\n  LoadingOutlined\r\n} from \"@ant-design/icons\";\r\nimport { Space, Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport { PAGE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetMapSeat, GetTripList, SetCurrentPage } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\nimport TripDateDetail from \"./tripDateDetail\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction TripList() {\r\n  const tripList = useSelector((state) => state.Dashboard.tripList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const detailPage = useSelector((state) => state.Dashboard.detailPage);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n\r\n  const getTripList = () => {\r\n    if (accountType && accountType !== \"admin\") {\r\n      dispatch(GetTripList.get({ busOperatorId: accountType }));\r\n    } else {\r\n      dispatch(GetTripList.get());\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getTripList();\r\n  }, []);\r\n\r\n  const handleEdit = (value, record) => {\r\n    dispatch(GetMapSeat.get({ tripId: record.tripId, busType: record.busType, date: moment(new Date()).format('DD/MM/YYYY') }))\r\n    dispatch(SetCurrentPage.get({ currentPage: PAGE.TRIP_LIST, detailPage: PAGE.TRIP_DETAIL }))\r\n  };\r\n\r\n  const handleReset = () => {\r\n    getTripList();\r\n    dispatch(SetCurrentPage.get({ currentPage: PAGE.TRIP_LIST }))\r\n  };\r\n\r\n  const tripsColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        \"busOperator\",\r\n        \"Nhập tên nhà xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: \"Nhà xe\",\r\n      dataIndex: \"busOperator\",\r\n      key: \"busOperator\",\r\n    },\r\n    {\r\n      title: \"Mã chuyến\",\r\n      dataIndex: \"tripId\",\r\n      sorter: (a, b) => a.tripId.localeCompare(b.tripId),\r\n    },\r\n    {\r\n      title: \"Loại xe\",\r\n      dataIndex: \"busTypeTitle\",\r\n      key: \"busTypeTitle\",\r\n      ...getColumnSearchProps(\r\n        \"busTypeTitle\",\r\n        \"Nhập loại xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Điểm khởi hành\",\r\n      dataIndex: \"from\",\r\n      key: \"from\",\r\n      ...getColumnSearchProps(\r\n        \"from\",\r\n        \"Nhập điểm khởi hành\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Điểm đến\",\r\n      dataIndex: \"to\",\r\n      key: \"to\",\r\n      ...getColumnSearchProps(\r\n        \"to\",\r\n        \"Nhập điểm điến\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Thời điểm khởi hành\",\r\n      dataIndex: \"timeStart\",\r\n      sorter: (a, b) => a.timeStart.localeCompare(b.timeStart),\r\n    },\r\n    {\r\n      title: \"Tác vụ\",\r\n      key: \"action\",\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <EditOutlined\r\n              style={{ fontSize: 20 }}\r\n              onClick={() => handleEdit(value, record)}\r\n            />\r\n            <DeleteOutlined\r\n              style={{ fontSize: 20, color: \"#FF0000\" }}\r\n              onClick={() => { }}\r\n            />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  if (detailPage === PAGE.TRIP_DETAIL) {\r\n    return (\r\n      <TripDateDetail handleReset={handleReset} />\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách chuyến xe</span>\r\n      <Table columns={tripsColumns} dataSource={tripList} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TripList;\r\n","import {\r\n  DesktopOutlined,\r\n  LoadingOutlined,\r\n  PieChartOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Avatar, Button, Menu, Spin } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport React, { useEffect } from \"react\";\r\nimport { FiFileText, FiUsers } from \"react-icons/fi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport BusOperator from \"./component/busOperatorTable\";\r\nimport CustomerList from \"./component/customerList\";\r\nimport Home from \"./component/homePage\";\r\nimport OrderList from \"./component/orderListTable\";\r\nimport TripList from \"./component/tripTable\";\r\nimport { PAGE } from \"./constant\";\r\nimport \"./dashboard.css\";\r\nimport {\r\n  GetAccountType,\r\n  GetBusOperatorDetail,\r\n  ResetDashboard,\r\n  SetCurrentPage,\r\n} from \"./redux/actions\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction Dashboard() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const accountDetail = useSelector((state) => state.Dashboard.accountDetail);\r\n  const isLoadingDashboard = useSelector(\r\n    (state) => state.Dashboard.isLoadingDashboard\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(GetAccountType.get());\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        await firebase\r\n          .database()\r\n          .ref(\"users\")\r\n          .child(firebase.auth().currentUser.uid)\r\n          .once(\"value\", async (snapshot) => {\r\n            dispatch(\r\n              GetBusOperatorDetail.get({ busOperatorId: snapshot.val() })\r\n            );\r\n          });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const currentPage = useSelector((state) => state.Dashboard.currentPage);\r\n\r\n  const onMenuSelect = ({ item, key, keyPath, selectedKeys, domEvent }) => {\r\n    dispatch(SetCurrentPage.get({ currentPage: key }));\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    firebase.auth().signOut();\r\n    dispatch(ResetDashboard.get());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const renderRightDashboard = () => {\r\n    switch (currentPage) {\r\n      case PAGE.HOME:\r\n        return <Home />;\r\n      case PAGE.BUS_OPERATOR:\r\n        return <BusOperator />;\r\n      case PAGE.TRIP_LIST:\r\n        return <TripList />;\r\n      case PAGE.ORDER_LIST:\r\n        return <OrderList />;\r\n      case PAGE.CUSTOMER_LIST:\r\n        return <CustomerList />;\r\n      default:\r\n        return <BusOperator />;\r\n    }\r\n  };\r\n\r\n  if (isLoadingDashboard || !accountType) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // if (!accountType) {\r\n  //   return (\r\n  //     <div id=\"empty\">\r\n  //       <div id=\"errorWrap\">\r\n  //         <FrownOutlined style={{ fontSize: 60, color: COLOR.primary }} />\r\n  //         <p style={{ textAlign: \"center\", paddingBottom: 16 }}>\r\n  //           Bạn chưa đăng nhập hoặc phiên đăng nhập đã hết hạn. Nhấn đăng nhập\r\n  //           để đăng nhập lại.\r\n  //         </p>\r\n  //         <Button\r\n  //           type=\"primary\"\r\n  //           style={{\r\n  //             borderColor: \"white\",\r\n  //           }}\r\n  //           onClick={() => history.push(\"/\")}\r\n  //         >\r\n  //           Đăng nhập\r\n  //         </Button>\r\n  //       </div>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <div id=\"dashboardBg\">\r\n      <div id=\"menuContainer\">\r\n        <Avatar size={100} src=\"https://source.unsplash.com/random\" />\r\n        <span id=\"adminName\">\r\n          {accountType !== \"admin\" ? accountDetail.name : \"Admin\"}\r\n        </span>\r\n        <Menu\r\n          defaultSelectedKeys={[PAGE.HOME]}\r\n          selectedKeys={[currentPage]}\r\n          mode=\"inline\"\r\n          onSelect={onMenuSelect}\r\n        >\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key={PAGE.HOME}\r\n            icon={<PieChartOutlined />}\r\n          >\r\n            Trang chủ\r\n          </Menu.Item>\r\n          {accountType === \"admin\" && (\r\n            <Menu.Item\r\n              style={{ color: \"white\" }}\r\n              key={PAGE.BUS_OPERATOR}\r\n              icon={<PieChartOutlined />}\r\n            >\r\n              Nhà xe\r\n            </Menu.Item>\r\n          )}\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key={PAGE.TRIP_LIST}\r\n            icon={<DesktopOutlined />}\r\n          >\r\n            Chuyến xe\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key={PAGE.ORDER_LIST}\r\n            icon={<FiFileText size={16} style={{ marginRight: 8 }} />}\r\n          >\r\n            Đơn hàng\r\n          </Menu.Item>\r\n          {accountType === \"admin\" && (\r\n            <Menu.Item\r\n              style={{ color: \"white\" }}\r\n              key={PAGE.CUSTOMER_LIST}\r\n              icon={<FiUsers size={16} style={{ marginRight: 8 }} />}\r\n            >\r\n              Hành khách\r\n            </Menu.Item>\r\n          )}\r\n        </Menu>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{\r\n            width: \"80%\",\r\n            marginTop: 64,\r\n            borderColor: \"white\",\r\n          }}\r\n          onClick={() => handleSignOut()}\r\n        >\r\n          Đăng xuất\r\n        </Button>\r\n      </div>\r\n      {renderRightDashboard()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import animationData from \"assets/bus.json\";\r\nimport React from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SetTypeAccount } from \"pages/Dashboard/redux/actions\";\r\n\r\nconst defaultOptions = {\r\n  loop: true,\r\n  autoplay: true,\r\n  animationData: animationData,\r\n  rendererSettings: {\r\n    preserveAspectRatio: \"xMidYMid slice\",\r\n  },\r\n};\r\n\r\nfunction Loading() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        await firebase\r\n          .database()\r\n          .ref(\"users\")\r\n          .child(firebase.auth().currentUser.uid)\r\n          .once(\"value\", (snapshot) => {\r\n            dispatch(SetTypeAccount.get(snapshot.val()));\r\n          });\r\n        history.push(\"/dashboard\");\r\n      } else {\r\n        history.push(\"/login\");\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flex: 1,\r\n        backgroundColor: \"white\",\r\n      }}\r\n    >\r\n      <Lottie options={defaultOptions} width={400} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Login from 'pages/Login'\r\nimport Dashboard from 'pages/Dashboard'\r\nimport Loading from \"pages/Loading\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\">\r\n          <Loading />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/dashboard\">\r\n          <Dashboard />\r\n        </Route>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyBQEVkTU5GeejO-ZA_vq9rRopNoh754fMw\",\r\n  authDomain: \"dimo-3e6f7.firebaseapp.com\",\r\n  databaseURL: \"https://dimo-3e6f7.firebaseio.com\",\r\n  projectId: \"dimo-3e6f7\",\r\n  storageBucket: \"dimo-3e6f7.appspot.com\",\r\n  messagingSenderId: \"155067027749\",\r\n  appId: \"1:155067027749:web:d218c29405e42ea7ed4acc\",\r\n  measurementId: \"G-MB07KHZCFB\"\r\n};","import axios from 'axios';\r\nimport { from } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { DOMAIN, log as SysLog, __DEV__ } from 'ultis/functions';\r\n\r\nexport function request(param) {\r\n  let url = `${DOMAIN}/${param.url}`\r\n\r\n  const language = 'vi';\r\n  const parameters = param.param;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    accept: 'application/json',\r\n    \"Access-Control-Allow-Origin\": true,\r\n    'Accept-Language': language\r\n  }\r\n\r\n  if (__DEV__) {\r\n    console.info('Log_header', headers);\r\n  }\r\n\r\n  return from(\r\n    axios.request({\r\n      url,\r\n      timeout: 10000,\r\n      headers,\r\n      method: param.method || 'POST',\r\n      data: parameters\r\n    }),\r\n  ).pipe(\r\n    map((result) => {\r\n      return { result: result.data.result, status: result.status };\r\n    }),\r\n    tap((result) => log(url, parameters, result)),\r\n  );\r\n}\r\n\r\nfunction log(url, parameters, result) {\r\n  SysLog(\r\n    '--------------------------\\n',\r\n    // '\\x1b[34m',\r\n    'Request data:',\r\n    // '\\x1b[37m',\r\n    '\\nURL:           ',\r\n    // '\\x1b[32m',\r\n    url,\r\n    // '\\x1b[37m',\r\n    '\\nParam:         ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(parameters, null, '\\x1b[32m'),\r\n    // '\\x1b[37m',\r\n    '\\nResponse Data: ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(result, null, '\\x1b[32m') || true,\r\n    // '\\x1b[37m',\r\n    '\\n--------------------------',\r\n  );\r\n}\r\n","import { store } from 'core/store'\r\nimport moment from 'moment'\r\nimport { combineEpics, ofType } from 'redux-observable'\r\nimport { catchError, exhaustMap, map } from 'rxjs/operators'\r\nimport { request } from 'ultis/api'\r\nimport { PAGE } from '../constant'\r\nimport { EditOrderDetail, EditOrderDetailFailed, EditOrderDetailSuccess, GetBusOperator, GetBusOperatorDetail, GetBusOperatorDetailFailed, GetBusOperatorDetailSuccess, GetBusOperatorFailed, GetBusOperatorSuccess, GetCustomerList, GetCustomerListFailed, GetCustomerListSuccess, GetMapSeat, GetMapSeatFailed, GetMapSeatSuccess, GetOrderDetail, GetOrderDetailFailed, GetOrderDetailSuccess, GetOrderList, GetOrderListFailed, GetOrderListSuccess, GetStatistic, GetStatisticAmount, GetStatisticAmountFailed, GetStatisticAmountSuccess, GetStatisticFailed, GetStatisticSuccess, GetTripList, GetTripListFailed, GetTripListSuccess, SetCurrentPage, SetTypeAccount } from './actions'\r\n\r\nconst getBusOperatorEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetBusOperator.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'GET',\r\n        url: 'busOperator'\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetBusOperatorSuccess.get(result.result)\r\n          }\r\n          return GetBusOperatorFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetBusOperatorFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getTripListEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetTripList.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'tripsList',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetTripListSuccess.get(result.result)\r\n          }\r\n          return GetTripListFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetTripListFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getOrderListEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetOrderList.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'tickets',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetOrderListSuccess.get(result.result)\r\n          }\r\n          return GetOrderListFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetOrderListFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getCustomerListEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetCustomerList.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'GET',\r\n        url: 'getCustomers',\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetCustomerListSuccess.get(result.result)\r\n          }\r\n          return GetCustomerListFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetCustomerListFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getBusOperatorDetailEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetBusOperatorDetail.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'busOperatorDetail',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(SetTypeAccount.get(action.payload.busOperatorId))\r\n            return GetBusOperatorDetailSuccess.get(result.result)\r\n          }\r\n          return GetBusOperatorDetailFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetBusOperatorDetailFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getOrderDetailEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetOrderDetail.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'findTicketWeb',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(SetCurrentPage.get({ currentPage: PAGE.ORDER_LIST, detailPage: PAGE.ORDER_DETAIL }))\r\n            return GetOrderDetailSuccess.get(result.result)\r\n          }\r\n          return GetOrderDetailFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetOrderDetailFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst editOrderDetailEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(EditOrderDetail.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'editTickets',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return EditOrderDetailSuccess.get(result.message)\r\n          }\r\n          return EditOrderDetailFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return EditOrderDetailFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getMapSeatEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetMapSeat.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'getSeatWeb',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetMapSeatSuccess.get(result.result)\r\n          }\r\n          return GetMapSeatFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetMapSeatFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getStatisticEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetStatistic.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'getTotal',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(GetStatisticAmount.get({ busOperatorId: action.payload.busOperatorId, from: moment(new Date()).add(-7, 'days').format('DD/MM/YYYY'), to: moment(new Date()).format('DD/MM/YYYY') }))\r\n            return GetStatisticSuccess.get(result.result)\r\n          }\r\n          return GetStatisticFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetStatisticFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getStatisticAmountEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetStatisticAmount.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'getStatistic',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetStatisticAmountSuccess.get(result.result)\r\n          }\r\n          return GetStatisticAmountFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetStatisticAmountFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nexport const dashboardEpics = combineEpics(getBusOperatorEpic$, getTripListEpic$, getOrderListEpic$, getCustomerListEpic$, getBusOperatorDetailEpic$, getOrderDetailEpic$, editOrderDetailEpic$, getMapSeatEpic$, getStatisticEpic$, getStatisticAmountEpic$)\r\n","import { combineEpics } from 'redux-observable';\r\nimport { dashboardEpics } from 'pages/Dashboard/redux/epics';\r\n\r\nexport const rootEpic = combineEpics(dashboardEpics);\r\n","import { GetBusOperator, GetBusOperatorFailed, GetBusOperatorSuccess, GetTripList, GetTripListSuccess, GetTripListFailed, GetOrderList, GetOrderListSuccess, GetOrderListFailed, SetTypeAccount, GetCustomerList, GetCustomerListSuccess, GetCustomerListFailed, GetBusOperatorDetail, GetBusOperatorDetailSuccess, GetBusOperatorDetailFailed, GetAccountType, GetOrderDetail, GetOrderDetailSuccess, GetOrderDetailFailed, GetMapSeat, GetMapSeatSuccess, GetMapSeatFailed, SetCurrentPage, ResetDashboard, GetStatistic, GetStatisticSuccess, GetStatisticFailed, GetStatisticAmountSuccess, GetStatisticAmountFailed } from './actions'\r\nimport { PAGE } from 'pages/Dashboard/constant'\r\nconst initialState = {\r\n  busOperator: [],\r\n  tripList: [],\r\n  orderList: [],\r\n  customerList: [],\r\n  accountType: null,\r\n  isLoading: false,\r\n  isLoadingDashboard: false,\r\n  accountDetail: null,\r\n  orderDetail: {},\r\n  tripDetail: {},\r\n  currentPage: PAGE.HOME,\r\n  detailPage: null,\r\n  stastic: null,\r\n  statisticData: null\r\n}\r\n\r\nexport function dashboardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GetBusOperator.type:\r\n      return { ...state, isLoading: true }\r\n    case GetBusOperatorSuccess.type:\r\n      return { ...state, busOperator: action.payload.data, isLoading: false }\r\n    case GetBusOperatorFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetTripList.type:\r\n      return { ...state, isLoading: true }\r\n    case GetTripListSuccess.type:\r\n      return { ...state, tripList: action.payload, isLoading: false }\r\n    case GetTripListFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetOrderList.type:\r\n      return { ...state, isLoading: true }\r\n    case GetOrderListSuccess.type:\r\n      return { ...state, orderList: action.payload, isLoading: false }\r\n    case GetOrderListFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case SetTypeAccount.type:\r\n      return { ...state, accountType: action.payload }\r\n    case GetCustomerList.type:\r\n      return { ...state, isLoading: true }\r\n    case GetCustomerListSuccess.type:\r\n      return { ...state, customerList: action.payload, isLoading: false }\r\n    case GetCustomerListFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetBusOperatorDetail.type:\r\n      return { ...state, isLoadingDashboard: true }\r\n    case GetBusOperatorDetailSuccess.type:\r\n      return { ...state, accountDetail: action.payload, isLoadingDashboard: false }\r\n    case GetBusOperatorDetailFailed.type:\r\n      return { ...state, isLoadingDashboard: false }\r\n    case GetAccountType.type:\r\n      return { ...state, isLoadingDashboard: true }\r\n    case GetOrderDetail.type:\r\n      return { ...state, isLoading: true }\r\n    case GetOrderDetailSuccess.type:\r\n      return { ...state, orderDetail: action.payload, isLoading: false }\r\n    case GetOrderDetailFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetMapSeat.type:\r\n      return { ...state, isLoading: true }\r\n    case GetMapSeatSuccess.type:\r\n      return { ...state, tripDetail: action.payload, isLoading: false }\r\n    case GetMapSeatFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case SetCurrentPage.type:\r\n      return { ...state, currentPage: action.payload.currentPage, detailPage: action.payload.detailPage }\r\n    case ResetDashboard.type:\r\n      return { ...initialState }\r\n    case GetStatistic.type:\r\n      return { ...state, isLoading: true }\r\n    case GetStatisticSuccess.type:\r\n      return { ...state, stastic: action.payload }\r\n    case GetStatisticFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetStatisticAmountSuccess.type:\r\n      return { ...state, statisticData: action.payload, isLoading: false }\r\n    case GetStatisticAmountFailed.type:\r\n      return { ...state, isLoading: false }\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { dashboardReducer } from 'pages/Dashboard/redux/reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  Dashboard: dashboardReducer,\r\n});\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport { rootEpic } from './epic';\r\nimport { rootReducer } from './reducer';\r\nimport { __DEV__ } from 'ultis/functions';\r\n\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nconst applyMiddlewarePro = applyMiddleware(epicMiddleware);\r\nconst applyMiddlewareDev = applyMiddleware(logger, epicMiddleware);\r\n\r\nexport const store = createStore(rootReducer, __DEV__ ? applyMiddlewareDev : applyMiddlewarePro);\r\n\r\nepicMiddleware.run(rootEpic);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { firebaseConfig } from \"./firebaseConfig\";\r\nimport firebase from \"firebase\";\r\nimport { Provider } from 'react-redux'\r\nimport { store } from 'core/store';\r\nimport { ConfigProvider } from 'antd';\r\nimport viVN from 'antd/es/locale/vi_VN';\r\nimport { IconContext } from \"react-icons\"\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ConfigProvider locale={viVN}>\r\n        <IconContext.Provider value={{ className: \"react-icon-clasname\", style: { verticalAlign: 'middle' } }}>\r\n          <App />\r\n        </IconContext.Provider>\r\n      </ConfigProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}