{"version":3,"sources":["pages/Login/index.jsx","ultis/functions.js","pages/Dashboard/redux/actions.js","pages/Dashboard/component/searchInput.js","pages/Dashboard/component/busOperatorTable.js","pages/Dashboard/constant.js","pages/Dashboard/component/customerList.js","pages/Dashboard/component/homePage.js","pages/Dashboard/component/orderListTable.js","pages/Dashboard/component/tripTable.js","pages/Dashboard/index.jsx","pages/Loading/index.jsx","App.js","serviceWorker.js","firebaseConfig.js","ultis/api.js","pages/Dashboard/redux/epics.js","core/epic.js","pages/Dashboard/redux/reducer.js","core/reducer.js","core/store.js","index.js"],"names":["Login","history","useHistory","validationSchema","yup","shape","email","label","required","password","matches","message","id","className","initialValues","isInitialValid","onSubmit","values","firebase","auth","signInWithEmailAndPassword","then","push","catch","error","code","Modal","title","content","handleLogin","handleChange","handleBlur","handleSubmit","isValid","errors","setFieldTouched","touched","value","onChange","onTouchStart","onBlur","placeholder","type","disabled","onClick","size","COLOR","formatCurrency","n","separate","s","toString","regex","ret","replace","GetBusOperator","defineAction","GetBusOperatorSuccess","GetBusOperatorFailed","GetTripList","GetTripListSuccess","GetTripListFailed","GetOrderList","GetOrderListSuccess","GetOrderListFailed","SetTypeAccount","GetCustomerList","GetCustomerListSuccess","GetCustomerListFailed","GetBusOperatorDetail","GetBusOperatorDetailSuccess","GetBusOperatorDetailFailed","GetAccountType","GetOrderDetail","GetOrderDetailSuccess","GetOrderDetailFailed","EditOrderDetail","EditOrderDetailSuccess","EditOrderDetailFailed","getColumnSearchProps","dataIndex","searchPlaceholder","searchText","setSearchText","searchedColumn","setSearchColumn","refInput","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","e","target","onPressEnter","handleSearch","width","marginBottom","display","icon","SearchOutlined","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","current","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","loadingIcon","LoadingOutlined","fontSize","spin","BusOperator","busOperator","useSelector","state","Dashboard","isLoading","dispatch","useDispatch","useState","useRef","useEffect","get","busOperatorColumns","key","sorter","a","b","name","localeCompare","address","phoneNumber","indicator","PlusCircleOutlined","console","log","Date","getTime","columns","dataSource","CUSTOMER_STATUS","PAYMENT_TYPE","PAYMENT_TITLE","DIRECT","BANK_TRANSFER","ATM_PAY","MASTER_VISA","MOMO_PAY","CustomerList","customerList","filteredInfo","setFilterInfo","customerColumns","identityId","index","filters","filteredValue","paymentStatus","pagination","Home","Option","Select","PAGE","OrderList","orderList","accountType","orderDetail","currentPage","setCurrentPage","breadcrumbName","routes","setRoutes","getOrderList","busOperatorId","orderColumns","ticketId","compare","dateBooked","moment","format","totalPrice","EditOutlined","search","concat","handleEdit","itemRender","route","params","paths","textDecorationColor","separator","customerName","customerEmail","flexDirection","totalTicketAmount","seatId","join","paymentCode","defaultValue","tripId","from","to","timeStart","departureDay","borderColor","ticket","TripList","tripList","tripsColumns","menuSelect","setMenuSelect","accountDetail","isLoadingDashboard","src","defaultSelectedKeys","defaultOpenKeys","mode","onSelect","item","keyPath","domEvent","Item","PieChartOutlined","DesktopOutlined","marginRight","marginTop","signOut","renderRightDashboard","FrownOutlined","textAlign","paddingBottom","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loading","onAuthStateChanged","user","database","child","currentUser","uid","once","snapshot","val","justifyContent","alignItems","flex","options","App","exact","path","Boolean","window","location","hostname","match","request","param","url","parameters","headers","accept","axios","timeout","method","data","pipe","map","result","status","tap","JSON","stringify","dashboardEpics","combineEpics","action$","ofType","exhaustMap","action","catchError","payload","rootEpic","initialState","rootReducer","combineReducers","epicMiddleware","createEpicMiddleware","applyMiddlewarePro","applyMiddleware","store","logger","createStore","run","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","StrictMode","locale","viVN","Provider","verticalAlign","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ol1EA0GeA,MAlGf,WACE,IAAMC,EAAUC,cACVC,EAAmBC,MAAaC,MAAM,CAC1CC,MAAOF,MAEJG,MAAM,SACND,MAAM,sDACNE,SAAS,iCACZC,SAAUL,MAEPI,SAAS,8CACTE,QAAQ,YAAa,CACpBC,QAAS,4DAwBf,OACE,yBAAKC,GAAG,WACN,0BAAMC,UAAU,YAAhB,QACA,yBAAKD,GAAG,YACN,0BAAMA,GAAG,cAAT,4BACA,kBAAC,IAAD,CACEE,cAAe,CAAER,MAAO,GAAIG,SAAU,IACtCM,gBAAgB,EAChBZ,iBAAkBA,EAClBa,SAAU,SAACC,GAAD,OA7BE,SAACA,GACnBC,IACGC,OACAC,2BAA2BH,EAAOX,MAAOW,EAAOR,UAChDY,MAAK,kBAAMpB,EAAQqB,KAAK,QACxBC,OAAM,SAACC,GACa,wBAAfA,EAAMC,KACRC,IAAMF,MAAM,CACVG,MAAO,4BACPC,QAAS,8DAEa,wBAAfJ,EAAMC,MACfC,IAAMF,MAAM,CACVG,MAAO,yBACPC,QAAS,6DAeWC,CAAYZ,MAEjC,YASM,IARLa,EAQI,EARJA,aACAC,EAOI,EAPJA,WACAC,EAMI,EANJA,aACAf,EAKI,EALJA,OACAgB,EAII,EAJJA,QACAC,EAGI,EAHJA,OAEAC,GACI,EAFJC,QAEI,EADJD,iBAEA,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEvB,GAAG,WACHyB,MAAOpB,EAAOX,MACdgC,SAAUR,EAAa,SACvBS,aAAc,kBAAMJ,EAAgB,UACpCK,OAAQT,EAAW,SACnBU,YAAY,UAEbP,EAAO5B,OAAS,0BAAMM,GAAG,cAAcsB,EAAO5B,OAC/C,kBAAC,IAAD,CACEM,GAAG,WACH8B,KAAK,WACLJ,SAAUR,EAAa,YACvBS,aAAc,kBAAMJ,EAAgB,aACpCE,MAAOpB,EAAOR,SACd+B,OAAQT,EAAW,YACnBU,YAAY,uBAEbP,EAAOzB,UACN,0BAAMG,GAAG,cAAcsB,EAAOzB,UAEhC,4BACEG,GAAG,WACH8B,KAAK,SACLC,UAAWV,EACXW,QAASZ,EACTa,KAAM,SALR,mC,+FCrFHC,EACF,UADEA,EAEH,UAeH,SAASC,EAAeC,GAAoB,IAAjBC,EAAgB,uDAAL,IACvCC,EAAIF,EAAEG,WACNC,EAAQ,wBACRC,EAAMH,EAAEI,QAAQF,EAAOH,GAC3B,OAAOI,E,qDCtBIE,EAAiBC,YAAa,4BAC9BC,EAAwBD,YAAa,4BACrCE,EAAuBF,YAAa,2BAEpCG,EAAcH,YAAa,yBAC3BI,EAAqBJ,YAAa,yBAClCK,EAAoBL,YAAa,wBAEjCM,EAAeN,YAAa,0BAC5BO,EAAsBP,YAAa,0BACnCQ,EAAqBR,YAAa,yBAElCS,EAAiBT,YAAa,oBAE9BU,EAAkBV,YAAa,6BAC/BW,EAAyBX,YAAa,6BACtCY,EAAwBZ,YAAa,4BAErCa,EAAuBb,YAAa,mCACpCc,EAA8Bd,YAAa,mCAC3Ce,EAA6Bf,YAAa,kCAE1CgB,EAAiBhB,YAAa,oBAE9BiB,EAAiBjB,YAAa,4BAC9BkB,EAAwBlB,YAAa,4BACrCmB,EAAuBnB,YAAa,2BAEpCoB,GAAkBpB,YAAa,6BAC/BqB,GAAyBrB,YAAa,6BACtCsB,GAAwBtB,YAAa,4B,yCCzBrCuB,GAAuB,SAACC,EAAWC,EAAmBC,EAAYC,EAAeC,EAAgBC,EAAiBC,GAC7H,MAAO,CACLC,eAAgB,gBACdC,EADc,EACdA,gBACAC,EAFc,EAEdA,aACAC,EAHc,EAGdA,QACAC,EAJc,EAIdA,aAJc,OAMZ,yBAAKC,MAAO,CAAEC,QAAS,IACrB,kBAAC,IAAD,CACEC,IAAKR,EACL7C,YAAawC,EACb5C,MAAOoD,EAAa,GACpBnD,SAAU,SAACyD,GAAD,OACRP,EAAgBO,EAAEC,OAAO3D,MAAQ,CAAC0D,EAAEC,OAAO3D,OAAS,KAEtD4D,aAAc,kBAAMC,GAAaT,EAAcC,EAASV,EAAWG,EAAeE,IAClFO,MAAO,CAAEO,MAAO,IAAKC,aAAc,EAAGC,QAAS,WAEjD,kBAAC,KAAD,KACE,kBAAC,IAAD,CACE3D,KAAK,UACLE,QAAS,kBAAMsD,GAAaT,EAAcC,EAASV,EAAWG,EAAeE,IAC7EiB,KAAM,kBAACC,GAAA,EAAD,MACN1D,KAAK,QACL+C,MAAO,CAAEO,MAAO,KALlB,UASA,kBAAC,IAAD,CACEvD,QAAS,kBAAM4D,GAAYb,EAAcR,IACzCtC,KAAK,QACL+C,MAAO,CAAEO,MAAO,KAHlB,sBAURM,WAAY,SAACC,GAAD,OACV,kBAACH,GAAA,EAAD,CAAgBX,MAAO,CAAEe,MAAOD,EAAW5D,OAAgB8D,MAE7DC,SAAU,SAACxE,EAAOyE,GAAR,OACRA,EAAO9B,GAAW7B,WAAW4D,cAAcC,SAAS3E,EAAM0E,gBAC5DE,8BAA+B,SAACC,GAC1BA,GACFC,YAAW,kBAAM7B,EAAS8B,QAAQC,aAGtCC,OAAQ,SAACC,GAAD,OACNnC,IAAmBJ,EACjB,kBAAC,KAAD,CACEwC,eAAgB,CAAEC,gBAAiB,UAAW5B,QAAS,GACvD6B,YAAa,CAACxC,GACdyC,YAAU,EACVC,gBAAiBL,EAAKpE,aAGtBoE,KAKJrB,GAAe,SAACT,EAAcC,EAASV,EAAWG,EAAeE,GACrEK,IACAL,EAAgBL,GAChBG,EAAcM,EAAa,KAGvBe,GAAc,SAACb,EAAcR,GACjCQ,IACAR,EAAc,KCpEV0C,GACJ,kBAACC,EAAA,EAAD,CAAiBlC,MAAO,CAAEmC,SAAU,GAAIpB,MAAO7D,GAAiBkF,MAAI,IAkGvDC,OA/Ff,WACE,IAAMC,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUH,eACrDI,EAAYH,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUC,aACnDC,EAAWC,cAHI,EAIeC,mBAAS,IAJxB,mBAIdvD,EAJc,KAIFC,EAJE,OAKqBsD,mBAAS,IAL9B,mBAKdrD,EALc,KAKEC,EALF,KAMfC,EAAWoD,mBAEjBC,qBAAU,WACRJ,EAAShF,EAAeqF,SACvB,IAEH,IAIMC,EAAqB,CAAC,2BAErB9D,GACD,OACA,6BACAG,EACAC,EACAC,EACAC,EACAC,IATqB,IAWvB3D,MAAO,YACPqD,UAAW,OACX8D,IAAK,OACLC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,SAE3C,CACEvH,MAAO,yBACPqD,UAAW,UACX+D,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,QAAQD,cAAcF,EAAEG,WAnBrB,aAsBvBzH,MAAO,WACPqD,UAAW,cACX+D,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEK,YAAYF,cAAcF,EAAEI,eAC7CtE,GACD,cACA,qBACAG,EACAC,EACAC,EACAC,EACAC,IAhCqB,aAoCvB3D,MAAO,QACPqD,UAAW,QACX+D,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAE1I,MAAM6I,cAAcF,EAAE3I,SACvCyE,GACD,QACA,kBACAG,EACAC,EACAC,EACAC,EACAC,IAGJ,CACE3D,MAAO,kBACPqD,UAAW,UACX+D,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAE1I,MAAM6I,cAAcF,EAAE3I,UAI9C,OAAIgI,EAEA,yBAAKzH,UAAU,mBACb,kBAAC,IAAD,CAAMyI,UAAWzB,MAKrB,yBAAKhH,UAAU,mBACb,0BAAMA,UAAU,cAAhB,0BACA,kBAAC,IAAD,CACE6B,KAAK,UACL4D,KAAM,kBAACiD,EAAA,EAAD,MACN3D,MAAO,CAAEO,MAAO,IAAKC,aAAc,IACnCxD,QAAS,WAzEb4G,QAAQC,KAAI,IAAIC,MAAOC,aAqErB,8BAQA,kBAAC,IAAD,CAAOC,QAASf,EAAoBgB,WAAY3B,MCxGzC4B,GACD,WADCA,GAEL,OAFKA,GAGE,cAGFC,GAAe,CAC1B,CACE1H,MAAO,SACPkF,KAAM,uBAER,CACElF,MAAO,gBACPkF,KAAM,0BAER,CACElF,MAAO,UACPkF,KAAM,mCAER,CACElF,MAAO,cACPkF,KAAM,4BAER,CACElF,MAAO,WACPkF,KAAM,sCAIGyC,GAAgB,CAC3BC,OAAQ,sBACRC,cAAe,yBACfC,QAAS,kCACTC,YAAa,2BACbC,SAAU,qCCvBNxC,GACJ,kBAACC,EAAA,EAAD,CAAiBlC,MAAO,CAAEmC,SAAU,GAAIpB,MAAO7D,GAAiBkF,MAAI,IAqHvDsC,OAlHf,WACE,IAAMC,EAAepC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUkC,gBACtDjC,EAAYH,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUC,aACnDC,EAAWC,cAHK,EAIcC,mBAAS,IAJvB,mBAIfvD,EAJe,KAIHC,EAJG,OAKoBsD,mBAAS,IAL7B,mBAKfrD,EALe,KAKCC,EALD,KAMhBC,EAAWoD,mBANK,EAOgBD,mBAAS,MAPzB,mBAOf+B,EAPe,KAODC,EAPC,KAStB9B,qBAAU,WACRJ,EAASrE,EAAgB0E,SACxB,IAEH,IAIM8B,EAAkB,CAAC,aAErB/I,MAAO,OACPqD,UAAW,aACX8D,IAAK,aACLC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAE2B,WAAWxB,cAAcF,EAAE0B,cAC5C5F,GACD,aACA,iBACAG,EACAC,EACAC,EACAC,EACAC,IAbkB,aAiBpB3D,MAAO,SACPqD,UAAW,eACX8D,IAAK,gBACF/D,GACD,eACA,oCACAG,EACAC,EACAC,EACAC,EACAC,IA3BkB,aA+BpB3D,MAAO,QACPqD,UAAW,gBACX8D,IAAK,gBACLC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAE2B,WAAWxB,cAAcF,EAAE0B,cAC5C5F,GACD,gBACA,kBACAG,EACAC,EACAC,EACAC,EACAC,IA1CkB,aA8CpB3D,MAAO,WACPqD,UAAW,cACX8D,IAAK,cACLC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEK,YAAYF,cAAcF,EAAEI,eAC7CtE,GACD,cACA,qBACAG,EACAC,EACAC,EACAC,EACAC,IAGJ,CACE3D,MAAO,qBACPqD,UAAW,SACXsC,OAAQ,SAACjF,EAAOyE,EAAQ8D,GACtB,OAAIvI,IAAUyH,GACL,0BAAMlE,MAAO,CAAEe,MAAO,UAAtB,4BAELtE,IAAUyH,GACL,0BAAMlE,MAAO,CAAEe,MAAO,QAAtB,2BAEF,qCAETkE,QAAS,CACP,CAAEtD,KAAM,2BAAiBlF,MAAOyH,IAChC,CAAEvC,KAAM,0BAAmBlF,MAAOyH,IAClC,CAAEvC,KAAM,KAAMlF,MAAOyH,KAEvBgB,cAAeN,EAAeA,EAAatB,KAAO,KAClDrC,SAAU,SAACxE,EAAOyE,GAAR,OAAmBA,EAAOiE,gBAAkB1I,KAI1D,OAAIiG,EAEA,yBAAKzH,UAAU,mBACb,kBAAC,IAAD,CAAMyI,UAAWzB,MAKrB,yBAAKhH,UAAU,mBACb,0BAAMA,UAAU,cAAhB,iCACA,kBAAC,IAAD,CAAO+I,QAASc,EAAiBb,WAAYU,EAAcjI,SAhG1C,SAAC0I,EAAYH,EAAS9B,GACzC0B,EAAcI,Q,qBClBZhD,GACJ,kBAACC,EAAA,EAAD,CAAiBlC,MAAO,CAAEmC,SAAU,GAAIpB,MAAO7D,GAAiBkF,MAAI,IAoBvDiD,OAjBf,WAGE,OAFkB9C,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUC,aAIrD,yBAAKzH,UAAU,mBACb,kBAAC,IAAD,CAAMyI,UAAWzB,MAKrB,yBAAKhH,UAAU,mBACb,8E,8BCfEqK,GAAWC,KAAXD,OAEFE,GACK,UADLA,GAEG,QAGHvD,GACJ,kBAACC,EAAA,EAAD,CAAiBlC,MAAO,CAAEmC,SAAU,GAAIpB,MAAO7D,GAAiBkF,MAAI,IA8RvDqD,OA3Rf,WACE,IAAMC,EAAYnD,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUiD,aACnDhD,EAAYH,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUC,aACnDiD,EAAcpD,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUkD,eACrDC,EAAcrD,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUmD,eACrDjD,EAAWC,cALE,EAMiBC,mBAAS,IAN1B,mBAMZvD,EANY,KAMAC,EANA,OAOuBsD,mBAAS,IAPhC,mBAOZrD,EAPY,KAOIC,EAPJ,KAQbC,EAAWoD,mBARE,EASmBD,mBAAS,MAT5B,mBASZ+B,EATY,KASEC,EATF,OAUmBhC,mBAAS2C,IAV5B,mBAUZK,EAVY,KAUCC,EAVD,OAWSjD,mBAAS,CAAC,CAAEkD,eAAgB,wCAXrC,mBAWZC,EAXY,KAWJC,EAXI,KAabC,EAAe,WAEjBvD,EADEgD,GAA+B,UAAhBA,EACRzH,EAAa8E,IAAI,CAAEmD,cAAeR,IAElCzH,EAAa8E,QAI1BD,qBAAU,WACRmD,MACC,IAEH,IAUMtF,EAAc,WAClBqF,EAAU,CAAC,CAAEF,eAAgB,wCAC7BG,IACAJ,EAAeN,KAeXY,EAAe,CACnB,CACErK,MAAO,sBACPqD,UAAW,WACX8D,IAAK,WACLC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEiD,SAAS9C,cAAcF,EAAEgD,YAE/C,CACEtK,MAAO,mBACPqD,UAAW,aACX+D,OAAQ,CACNmD,QAAS,SAAClD,EAAGC,GAAJ,OAAUD,EAAEmD,WAAalD,EAAEkD,aAEtC7E,OAAQ,SAACjF,EAAOyE,EAAQ8D,GACtB,OAAO,8BAAOwB,KAAO/J,GAAOgK,OAAO,iBAdpB,aAkBjB1K,MAAO,mBACPqD,UAAW,eACX8D,IAAK,gBACF/D,GACD,eACA,iDACAG,EACAC,EACAC,EACAC,EACAC,IA5Be,aAgCjB3D,MAAO,YACPqD,UAAW,cACX8D,IAAK,eACF/D,GACD,cACA,6BACAG,EACAC,EACAC,EACAC,EACAC,IAGJ,CACE3D,MAAO,sBACPqD,UAAW,aACX+D,OAAQ,CACNmD,QAAS,SAAClD,EAAGC,GAAJ,OAAUD,EAAEsD,WAAarD,EAAEqD,aAEtChF,OAAQ,SAACjF,EAAOyE,EAAQ8D,GACtB,OAAO,8BAAO7H,EAAeV,MAGjC,CACEV,MAAO,kCACPqD,UAAW,cACXsC,OAAQ,SAACjF,EAAOyE,EAAQ8D,GACtB,OAAQvI,GACN,KAAK0H,GAAa,GAAG1H,MACnB,OAAO,8BAAO0H,GAAa,GAAGxC,MAChC,KAAKwC,GAAa,GAAG1H,MACnB,OAAO,8BAAO0H,GAAa,GAAGxC,MAChC,KAAKwC,GAAa,GAAG1H,MACnB,OAAO,8BAAO0H,GAAa,GAAGxC,MAChC,KAAKwC,GAAa,GAAG1H,MACnB,OAAO,8BAAO0H,GAAa,GAAGxC,MAChC,KAAKwC,GAAa,GAAG1H,MACnB,OAAO,8BAAO0H,GAAa,GAAGxC,MAChC,QAAS,OAAO,iCAGpBsD,QAASd,GACTe,cAAeN,EAAeA,EAAatB,KAAO,KAClDrC,SAAU,SAACxE,EAAOyE,GAAR,OAAmBA,EAAOiE,gBAAkB1I,IAExD,CACEV,MAAO,qBACPqD,UAAW,gBACXsC,OAAQ,SAACjF,EAAOyE,EAAQ8D,GACtB,OAAIvI,EACK,0BAAMuD,MAAO,CAAEe,MAAO,UAAtB,4BAEF,0BAAMf,MAAO,CAAEe,MAAO,QAAtB,4BAETkE,QAAS,CACP,CAAEtD,KAAM,2BAAiBlF,OAAO,GAChC,CAAEkF,KAAM,0BAAmBlF,OAAO,IAEpCyI,cAAeN,EAAeA,EAAatB,KAAO,KAClDrC,SAAU,SAACxE,EAAOyE,GAAR,OAAmBA,EAAOiE,gBAAkB1I,IAExD,CACEV,MAAO,iBACPmH,IAAK,SACLxB,OAAQ,SAACjF,EAAOyE,GACd,OACE,kBAAC,KAAD,KACE,kBAACyF,GAAA,EAAD,CAAc3G,MAAO,CAAEmC,SAAU,IAAMnF,QAAS,kBA3HvC,SAACP,EAAOyE,GACzByB,EAAS9D,EAAemE,IAAI,CAAE4D,OAAQ1F,EAAOmF,SAAU5C,YAAavC,EAAOuC,eAC3EwC,EAAUD,EAAOa,OAAO,CAAC,CAAEd,eAAgB7E,EAAOmF,aAClDP,EAAeN,IAwH+CsB,CAAWrK,EAAOyE,UAOlF,OAAIwB,EAEA,yBAAKzH,UAAU,mBACb,kBAAC,IAAD,CAAMyI,UAAWzB,MAInB4D,IAAgBL,IAAcI,EAE9B,yBAAK3K,UAAU,mBACb,kBAAC,KAAD,CAAY8L,WA3HK,SAACC,EAAOC,EAAQjB,EAAQkB,GAC7C,OAAIF,IAAUhB,EAAO,GACZ,uBAAG/K,UAAU,aAAa+E,MAAO,CAAEmH,oBAAqBjK,GAAiBF,QAAS,kBAAM4D,MAAxF,sCAEF,0BAAM3F,UAAU,cAAc+L,EAAMjB,iBAuHCC,OAAQA,EAAQoB,UAAU,MAClE,0BAAMnM,UAAU,aAAhB,iCACA,yBAAKD,GAAG,YACN,0BAAMC,UAAU,aAAhB,WACA,0BAAMA,UAAU,eAAe2K,EAAYyB,eAE7C,yBAAKrM,GAAG,YACN,0BAAMC,UAAU,aAAhB,sCACA,0BAAMA,UAAU,eAAe2K,EAAYnC,cAE5CmC,EAAY0B,eAAiB,yBAAKtM,GAAG,YACpC,0BAAMC,UAAU,aAAhB,UACA,0BAAMA,UAAU,eAAe2K,EAAY0B,gBAE7C,0BAAMrM,UAAU,aAAhB,sCACA,yBAAK+E,MAAO,CAAES,QAAS,SACrB,yBAAKT,MAAO,CAAES,QAAS,OAAQ8G,cAAe,WAC5C,yBAAKvM,GAAG,YACN,0BAAMC,UAAU,aAAhB,qBACA,0BAAMA,UAAU,eAAeuL,KAAOZ,EAAYW,YAAYE,OAAO,gBAEvE,yBAAKzL,GAAG,YACN,0BAAMC,UAAU,aAAhB,qCACA,0BAAMA,UAAU,eAAe2K,EAAY4B,oBAE7C,yBAAKxM,GAAG,YACN,0BAAMC,UAAU,aAAhB,mBACA,0BAAMA,UAAU,eAAe2K,EAAY6B,OAAOC,KAAK,SAG3D,yBAAK1H,MAAO,CAAES,QAAS,OAAQ8G,cAAe,WAC5C,yBAAKvM,GAAG,eACN,0BAAMC,UAAU,aAAhB,wBACA,0BAAMA,UAAU,cAAc+E,MAAO,CAAEe,MAAO7D,IAAiBC,EAAeyI,EAAYc,cAE5F,yBAAK1L,GAAG,eACN,0BAAMC,UAAU,aAAhB,6CACA,0BAAMA,UAAU,eAAemJ,GAAcwB,EAAY+B,eAE3D,yBAAK3M,GAAG,eACN,0BAAMC,UAAU,aAAhB,uBACA,kBAAC,KAAD,CAAQ2M,aAAchC,EAAYT,cAAenK,GAAG,WAAW0B,SAAU,SAACD,GAAYmJ,EAAYT,cAAgB1I,IAChH,kBAAC6I,GAAD,CAAQ7I,OAAO,GAAf,4BACA,kBAAC6I,GAAD,CAAQ7I,OAAO,GAAf,+BAKR,0BAAMxB,UAAU,aAAhB,+BACA,yBAAK+E,MAAO,CAAES,QAAS,SACrB,yBAAKT,MAAO,CAAES,QAAS,OAAQ8G,cAAe,WAC5C,yBAAKvM,GAAG,YACN,0BAAMC,UAAU,aAAhB,sBACA,0BAAMA,UAAU,eAAe2K,EAAYiC,SAE7C,yBAAK7M,GAAG,YACN,0BAAMC,UAAU,aAAhB,qCACA,0BAAMA,UAAU,eAAe2K,EAAYkC,OAE7C,yBAAK9M,GAAG,YACN,0BAAMC,UAAU,aAAhB,iCACA,0BAAMA,UAAU,eAAe2K,EAAYmC,MAG/C,yBAAK/H,MAAO,CAAES,QAAS,OAAQ8G,cAAe,WAC5C,yBAAKvM,GAAG,eACN,0BAAMC,UAAU,aAAhB,cACA,0BAAMA,UAAU,eAAe2K,EAAYtD,cAE7C,yBAAKtH,GAAG,eACN,0BAAMC,UAAU,aAAhB,+BACA,0BAAMA,UAAU,eAAe2K,EAAYoC,YAE7C,yBAAKhN,GAAG,eACN,0BAAMC,UAAU,aAAhB,8BACA,0BAAMA,UAAU,eAAe2K,EAAYqC,iBAIjD,yBAAKjI,MAAO,CAAES,QAAS,SACrB,kBAAC,IAAD,CACExF,UAAU,WACV6B,KAAK,UACLkD,MAAO,CACL6B,gBAAiB,UACjBqG,YAAa,SAEflL,QAAS,kBAAM4D,MAPjB,YAWA,kBAAC,IAAD,CACE3F,UAAU,WACV6B,KAAK,UACLkD,MAAO,CACL6B,gBAAiB3E,EACjBgL,YAAa,SAEflL,QAAS,kBAjOjB2F,EAAS3D,GAAgBgE,IAAI,CAAEmF,OAAQvC,UACvChF,MAyNM,cAgBN,yBAAK3F,UAAU,mBACb,0BAAMA,UAAU,cAAhB,sCACA,kBAAC,IAAD,CAAO+I,QAASoC,EAAcnC,WAAYyB,EAAWhJ,SA7PpC,SAAC0I,EAAYH,EAAS9B,GACzC0B,EAAcI,QCvCZhD,GACJ,kBAACC,EAAA,EAAD,CAAiBlC,MAAO,CAAEmC,SAAU,GAAIpB,MAAO7D,GAAiBkF,MAAI,IAwGvDgG,OArGf,WACE,IAAMC,EAAW9F,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAU4F,YAClD3F,EAAYH,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUC,aACnDiD,EAAcpD,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUkD,eACrDhD,EAAWC,cAJC,EAKkBC,mBAAS,IAL3B,mBAKXvD,EALW,KAKCC,EALD,OAMwBsD,mBAAS,IANjC,mBAMXrD,EANW,KAMKC,EANL,KAOZC,EAAWoD,mBAEjBC,qBAAU,WAENJ,EADEgD,GAA+B,UAAhBA,EACR5H,EAAYiF,IAAI,CAAEmD,cAAeR,IAEjC5H,EAAYiF,SAEtB,IAEH,IAAMsF,EAAe,CAAC,2BAEfnJ,GACD,cACA,6BACAG,EACAC,EACAC,EACAC,EACAC,IATe,IAWjB3D,MAAO,YACPqD,UAAW,cACX8D,IAAK,gBAEP,CACEnH,MAAO,oBACPqD,UAAW,SACX+D,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEyE,OAAOtE,cAAcF,EAAEwE,UAlB1B,aAqBjB9L,MAAO,eACPqD,UAAW,eACX8D,IAAK,gBACF/D,GACD,eACA,yBACAG,EACAC,EACAC,EACAC,EACAC,IA/Be,aAmCjB3D,MAAO,mCACPqD,UAAW,OACX8D,IAAK,QACF/D,GACD,OACA,6CACAG,EACAC,EACAC,EACAC,EACAC,IA7Ce,aAiDjB3D,MAAO,+BACPqD,UAAW,KACX8D,IAAK,MACF/D,GACD,KACA,0CACAG,EACAC,EACAC,EACAC,EACAC,IAGJ,CACE3D,MAAO,6CACPqD,UAAW,YACX+D,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAE4E,UAAUzE,cAAcF,EAAE2E,cAIlD,OAAItF,EAEA,yBAAKzH,UAAU,mBACb,kBAAC,IAAD,CAAMyI,UAAWzB,MAKrB,yBAAKhH,UAAU,mBACb,0BAAMA,UAAU,cAAhB,+BACA,kBAAC,IAAD,CAAO+I,QAASsE,EAAcrE,WAAYoE,MCzF1CpG,GACJ,kBAACC,EAAA,EAAD,CAAiBlC,MAAO,CAAEmC,SAAU,GAAIpB,MAAO7D,GAAiBkF,MAAI,IAkJvDK,OA/If,WACE,IAAMpI,EAAUC,cACVqI,EAAWC,cAFE,EAGiBC,mBAAS,KAH1B,mBAGZ0F,EAHY,KAGAC,EAHA,KAIb7C,EAAcpD,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUkD,eACrD8C,EAAgBlG,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUgG,iBACvDC,EAAqBnG,aACzB,SAACC,GAAD,OAAWA,EAAMC,UAAUiG,sBAmC7B,OAhCA3F,qBAAU,WACJ4C,GAA+B,UAAhBA,GACjBhD,EAASlE,EAAqBuE,IAAI,CAAEmD,cAAeR,OAEpD,IA4BC+C,EAEA,yBAAKzN,UAAU,mBACb,kBAAC,IAAD,CAAMyI,UAAWzB,MAKlB0D,EAwBH,yBAAK3K,GAAG,eACN,yBAAKA,GAAG,iBACN,kBAAC,IAAD,CAAQiC,KAAM,IAAK0L,IAAI,uCACvB,0BAAM3N,GAAG,aACNyN,EAAgBA,EAAcnF,KAAO,SAExC,kBAAC,IAAD,CACEsF,oBAAqB,CAAC,KACtBC,gBAAiB,CAAC,QAClBC,KAAK,SACLC,SApEa,SAAC,GAAmD,EAAjDC,KAAkD,IAA5C9F,EAA2C,EAA3CA,IAA2C,EAAtC+F,QAAsC,EAA7BpJ,aAA6B,EAAfqJ,SACxDV,EAActF,KAqER,kBAAC,IAAKiG,KAAN,CACEnJ,MAAO,CAAEe,MAAO,SAChBmC,IAAI,IACJxC,KAAM,kBAAC0I,EAAA,EAAD,OAHR,kBAOiB,UAAhBzD,GACC,kBAAC,IAAKwD,KAAN,CACEnJ,MAAO,CAAEe,MAAO,SAChBmC,IAAI,IACJxC,KAAM,kBAAC0I,EAAA,EAAD,OAHR,aAQF,kBAAC,IAAKD,KAAN,CACEnJ,MAAO,CAAEe,MAAO,SAChBmC,IAAI,IACJxC,KAAM,kBAAC2I,EAAA,EAAD,OAHR,kBAOA,kBAAC,IAAKF,KAAN,CACEnJ,MAAO,CAAEe,MAAO,SAChBmC,IAAI,IACJxC,KAAM,kBAAC,IAAD,CAAYzD,KAAM,GAAI+C,MAAO,CAAEsJ,YAAa,MAHpD,yBAOiB,UAAhB3D,GACC,kBAAC,IAAKwD,KAAN,CACEnJ,MAAO,CAAEe,MAAO,SAChBmC,IAAI,IACJxC,KAAM,kBAAC,IAAD,CAASzD,KAAM,GAAI+C,MAAO,CAAEsJ,YAAa,MAHjD,qBASJ,kBAAC,IAAD,CACExM,KAAK,UACLkD,MAAO,CACLO,MAAO,MACPgJ,UAAW,GACXrB,YAAa,SAEflL,QAAS,kBAhHf1B,IAASC,OAAOiO,eAChBnP,EAAQqB,KAAK,OAwGT,6BArGuB,WAC3B,OAAQ6M,GACN,IAAK,IACH,OAAO,kBAAC,GAAD,MACT,IAAK,IACH,OAAO,kBAAC,GAAD,MACT,IAAK,IACH,OAAO,kBAAC,GAAD,MACT,IAAK,IACH,OAAO,kBAAC,GAAD,MACT,IAAK,IACH,OAAO,kBAAC,GAAD,MACT,QACE,OAAO,kBAAC,GAAD,OAoGRkB,IAtFD,yBAAKzO,GAAG,SACN,yBAAKA,GAAG,aACN,kBAAC0O,EAAA,EAAD,CAAe1J,MAAO,CAAEmC,SAAU,GAAIpB,MAAO7D,KAC7C,uBAAG8C,MAAO,CAAE2J,UAAW,SAAUC,cAAe,KAAhD,4MAIA,kBAAC,IAAD,CACE9M,KAAK,UACLkD,MAAO,CACLkI,YAAa,SAEflL,QAAS,kBAAM3C,EAAQqB,KAAK,OAL9B,+B,8DC3EJmO,GAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeA,GACfC,iBAAkB,CAChBC,oBAAqB,mBAsCVC,OAlCf,WACE,IAAM9P,EAAUC,cACVqI,EAAWC,cAiBjB,OAhBAG,qBAAU,WACRzH,IAASC,OAAO6O,mBAAhB,yCAAmC,WAAOC,GAAP,UAAAjH,EAAA,0DAC7BiH,EAD6B,gCAEzB/O,IACHgP,WACApK,IAAI,SACJqK,MAAMjP,IAASC,OAAOiP,YAAYC,KAClCC,KAAK,SAAS,SAACC,GACdhI,EAAStE,EAAe2E,IAAI2H,EAASC,WAPV,OAS/BvQ,EAAQqB,KAAK,cATkB,sBAW/BrB,EAAQqB,KAAK,UAXkB,2CAAnC,yDAcC,IAED,yBACEsE,MAAO,CACLS,QAAS,OACToK,eAAgB,SAChBC,WAAY,SACZC,KAAM,EACNlJ,gBAAiB,UAGnB,kBAAC,KAAD,CAAQmJ,QAASnB,GAAgBtJ,MAAO,QCvB/B0K,OAlBf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,GAAD,UCLUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DClBC,I,oICKA,SAASC,GAAQC,GACtB,IAAIC,EAAG,UdNa,gEcMb,YAAgBD,EAAMC,KAGvBC,EAAaF,EAAMA,MACnBG,EAAU,CACd,eAAgB,mBAChBC,OAAQ,mBACR,+BAA+B,EAC/B,kBANe,MAajB,OAAOhE,aACLiE,KAAMN,QAAQ,CACZE,MACAK,QAAS,IACTH,UACAI,OAAQP,EAAMO,QAAU,OACxBC,KAAMN,KAERO,KACAC,cAAI,SAACC,GACH,MAAO,CAAEA,OAAQA,EAAOH,KAAKG,OAAQC,OAAQD,EAAOC,WAEtDC,cAAI,SAACF,GAAD,OAIR,SAAaV,EAAKC,EAAYS,GAY1BG,KAAKC,UAAUb,EAAY,KAAM,YAIjCY,KAAKC,UAAUJ,EAAQ,KAAM,YApBbxI,CAAI8H,EAAKC,EAAYS,OC5BzC,IAwJaK,GAAiBC,cAxJF,SAACC,GAAD,OAC1BA,EAAQT,KACNU,aAAOlP,EAAeb,MACtBgQ,cAAW,SAAAC,GACT,OAAOtB,GAAQ,CACbQ,OAAQ,MACRN,IAAK,gBACJQ,KACDC,cAAI,SAACC,GACH,OAAsB,MAAlBA,EAAOC,OACFzO,EAAsBmF,IAAIqJ,EAAOA,QAEnCvO,EAAqBkF,IAAIqJ,MAElCW,cAAW,SAACpR,GACV,OAAOkC,EAAqBkF,IAAIpH,cAMjB,SAACgR,GAAD,OACvBA,EAAQT,KACNU,aAAO9O,EAAYjB,MACnBgQ,cAAW,SAAAC,GACT,OAAOtB,GAAQ,CACbQ,OAAQ,OACRN,IAAK,YACLD,MAAOqB,EAAOE,UACbd,KACDC,cAAI,SAACC,GACH,OAAsB,MAAlBA,EAAOC,OACFtO,EAAmBgF,IAAIqJ,EAAOA,QAEhCpO,EAAkB+E,IAAIqJ,MAE/BW,cAAW,SAACpR,GACV,OAAOqC,EAAkB+E,IAAIpH,cAMb,SAACgR,GAAD,OACxBA,EAAQT,KACNU,aAAO3O,EAAapB,MACpBgQ,cAAW,SAAAC,GACT,OAAOtB,GAAQ,CACbQ,OAAQ,OACRN,IAAK,UACLD,MAAOqB,EAAOE,UACbd,KACDC,cAAI,SAACC,GACH,OAAsB,MAAlBA,EAAOC,OACFnO,EAAoB6E,IAAIqJ,EAAOA,QAEjCjO,EAAmB4E,IAAIqJ,MAEhCW,cAAW,SAACpR,GACV,OAAOwC,EAAmB4E,IAAIpH,cAMX,SAACgR,GAAD,OAC3BA,EAAQT,KACNU,aAAOvO,EAAgBxB,MACvBgQ,cAAW,SAAAC,GACT,OAAOtB,GAAQ,CACbQ,OAAQ,MACRN,IAAK,iBACJQ,KACDC,cAAI,SAACC,GACH,OAAsB,MAAlBA,EAAOC,OACF/N,EAAuByE,IAAIqJ,EAAOA,QAEpC7N,EAAsBwE,IAAIqJ,MAEnCW,cAAW,SAACpR,GACV,OAAO4C,EAAsBwE,IAAIpH,cAMT,SAACgR,GAAD,OAChCA,EAAQT,KACNU,aAAOpO,EAAqB3B,MAC5BgQ,cAAW,SAAAC,GACT,OAAOtB,GAAQ,CACbQ,OAAQ,OACRN,IAAK,oBACLD,MAAOqB,EAAOE,UACbd,KACDC,cAAI,SAACC,GACH,OAAsB,MAAlBA,EAAOC,OACF5N,EAA4BsE,IAAIqJ,EAAOA,QAEzC1N,EAA2BqE,IAAIqJ,MAExCW,cAAW,SAACpR,GACV,OAAO+C,EAA2BqE,IAAIpH,cAMpB,SAACgR,GAAD,OAC1BA,EAAQT,KACNU,aAAOhO,EAAe/B,MACtBgQ,cAAW,SAAAC,GACT,OAAOtB,GAAQ,CACbQ,OAAQ,OACRN,IAAK,cACLD,MAAOqB,EAAOE,UACbd,KACDC,cAAI,SAACC,GACH,OAAsB,MAAlBA,EAAOC,OACFxN,EAAsBkE,IAAIqJ,EAAOA,QAEnCtN,EAAqBiE,IAAIqJ,MAElCW,cAAW,SAACpR,GACV,OAAOmD,EAAqBiE,IAAIpH,cAMb,SAACgR,GAAD,OAC3BA,EAAQT,KACNU,aAAO7N,GAAgBlC,MACvBgQ,cAAW,SAAAC,GACT,OAAOtB,GAAQ,CACbQ,OAAQ,OACRN,IAAK,cACLD,MAAOqB,EAAOE,UACbd,KACDC,cAAI,SAACC,GACH,OAAsB,MAAlBA,EAAOC,OACFrN,GAAuB+D,IAAIqJ,EAAOtR,SAEpCmE,GAAsB8D,IAAIqJ,MAEnCW,cAAW,SAACpR,GACV,OAAOsD,GAAsB8D,IAAIpH,cCpJ9BsR,GAAWP,aAAaD,ICD/BS,GAAe,CACnB7K,YAAa,GACb+F,SAAU,GACV3C,UAAW,GACXf,aAAc,GACdgB,YAAa,KACbjD,WAAW,EACXgG,oBAAoB,EACpBD,cAAe,KACf7C,YAAa,MCPR,IAAMwH,GAAcC,aAAgB,CACzC5K,UDSK,WAAyD,IAA/BD,EAA8B,uDAAtB2K,GAAcJ,EAAQ,uCAC7D,OAAQA,EAAOjQ,MACb,KAAKa,EAAeb,KAClB,OAAO,2BAAK0F,GAAZ,IAAmBE,WAAW,IAChC,KAAK7E,EAAsBf,KACzB,OAAO,2BAAK0F,GAAZ,IAAmBF,YAAayK,EAAOE,QAAQf,KAAMxJ,WAAW,IAClE,KAAK5E,EAAqBhB,KACxB,OAAO,2BAAK0F,GAAZ,IAAmBE,WAAW,IAChC,KAAK3E,EAAYjB,KACf,OAAO,2BAAK0F,GAAZ,IAAmBE,WAAW,IAChC,KAAK1E,EAAmBlB,KACtB,OAAO,2BAAK0F,GAAZ,IAAmB6F,SAAU0E,EAAOE,QAASvK,WAAW,IAC1D,KAAKzE,EAAkBnB,KACrB,OAAO,2BAAK0F,GAAZ,IAAmBE,WAAW,IAChC,KAAKxE,EAAapB,KAChB,OAAO,2BAAK0F,GAAZ,IAAmBE,WAAW,IAChC,KAAKvE,EAAoBrB,KACvB,OAAO,2BAAK0F,GAAZ,IAAmBkD,UAAWqH,EAAOE,QAASvK,WAAW,IAC3D,KAAKtE,EAAmBtB,KACtB,OAAO,2BAAK0F,GAAZ,IAAmBE,WAAW,IAChC,KAAKrE,EAAevB,KAClB,OAAO,2BAAK0F,GAAZ,IAAmBmD,YAAaoH,EAAOE,UACzC,KAAK3O,EAAgBxB,KACnB,OAAO,2BAAK0F,GAAZ,IAAmBE,WAAW,IAChC,KAAKnE,EAAuBzB,KAC1B,OAAO,2BAAK0F,GAAZ,IAAmBmC,aAAcoI,EAAOE,QAASvK,WAAW,IAC9D,KAAKlE,EAAsB1B,KACzB,OAAO,2BAAK0F,GAAZ,IAAmBE,WAAW,IAChC,KAAKjE,EAAqB3B,KACxB,OAAO,2BAAK0F,GAAZ,IAAmBkG,oBAAoB,IACzC,KAAKhK,EAA4B5B,KAC/B,OAAO,2BAAK0F,GAAZ,IAAmBiG,cAAesE,EAAOE,QAASvE,oBAAoB,IACxE,KAAK/J,EAA2B7B,KAC9B,OAAO,2BAAK0F,GAAZ,IAAmBkG,oBAAoB,IACzC,KAAK9J,EAAe9B,KAClB,OAAO,2BAAK0F,GAAZ,IAAmBkG,oBAAoB,IACzC,KAAK7J,EAAe/B,KAClB,OAAO,2BAAK0F,GAAZ,IAAmBE,WAAW,IAChC,KAAK5D,EAAsBhC,KACzB,OAAO,2BAAK0F,GAAZ,IAAmBoD,YAAamH,EAAOE,QAASvK,WAAW,IAC7D,KAAK3D,EAAqBjC,KACxB,OAAO,2BAAK0F,GAAZ,IAAmBE,WAAW,IAChC,QACE,OAAOF,MElDP8K,GAAiBC,eAEjBC,GAAqBC,aAAgBH,IAG9BI,IAFcD,aAAgBE,KAAQL,IAE9BM,aAAYR,GAA4CI,KAE7EF,GAAeO,IAAIX,I,+BCDnB5R,IAASwS,cPbqB,CAC5BC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBOMjBhT,IAASiT,YAETC,IAAS9M,OACP,kBAAC,IAAM+M,WAAP,KACE,kBAAC,IAAD,CAAUf,MAAOA,IACf,kBAAC,KAAD,CAAgBgB,OAAQC,MACtB,kBAAC,KAAYC,SAAb,CAAsBnS,MAAO,CAAExB,UAAW,sBAAuB+E,MAAO,CAAE6O,cAAe,YACvF,kBAAC,GAAD,UAKRC,SAASC,eAAe,SRyGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzT,MAAK,SAAA0T,GACJA,EAAaC,gBAEdzT,OAAM,SAAAC,GACLgI,QAAQhI,MAAMA,EAAMb,c","file":"static/js/main.8f8ed6c8.chunk.js","sourcesContent":["import { Input, Modal } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport * as yup from \"yup\";\r\nimport \"./login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .label(\"Email\")\r\n      .email(\"Email hiện tại không hợp lệ\")\r\n      .required(\"* Vui lòng nhập email\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"* Vui lòng nhập mật khẩu\")\r\n      .matches(/(?=.{8,})/, {\r\n        message: \"Mật khẩu phải gồm 8 kí tự\",\r\n      }),\r\n  });\r\n\r\n  const handleLogin = (values) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(values.email, values.password)\r\n      .then(() => history.push(\"/\"))\r\n      .catch((error) => {\r\n        if (error.code === \"auth/user-not-found\") {\r\n          Modal.error({\r\n            title: \"Không tìm thấy\",\r\n            content: \"Không tìm thấy người dùng này.\",\r\n          });\r\n        } else if (error.code === \"auth/wrong-password\") {\r\n          Modal.error({\r\n            title: \"Sai mật khẩu\",\r\n            content: \"Bạn đã nhập sai mật khẩu.\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"loginBg\">\r\n      <span className=\"dimoName\">dimo</span>\r\n      <div id=\"loginBox\">\r\n        <span id=\"loginStyle\">Đăng nhập</span>\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          isInitialValid={false}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => handleLogin(values)}\r\n        >\r\n          {({\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            values,\r\n            isValid,\r\n            errors,\r\n            touched,\r\n            setFieldTouched,\r\n          }) => {\r\n            return (\r\n              <Form>\r\n                <Input\r\n                  id=\"inputBox\"\r\n                  value={values.email}\r\n                  onChange={handleChange(\"email\")}\r\n                  onTouchStart={() => setFieldTouched(\"email\")}\r\n                  onBlur={handleBlur(\"email\")}\r\n                  placeholder=\"Email\"\r\n                />\r\n                {errors.email && <span id=\"errorStyle\">{errors.email}</span>}\r\n                <Input\r\n                  id=\"inputBox\"\r\n                  type=\"password\"\r\n                  onChange={handleChange(\"password\")}\r\n                  onTouchStart={() => setFieldTouched(\"password\")}\r\n                  value={values.password}\r\n                  onBlur={handleBlur(\"password\")}\r\n                  placeholder=\"Mật khẩu\"\r\n                />\r\n                {errors.password && (\r\n                  <span id=\"errorStyle\">{errors.password}</span>\r\n                )}\r\n                <button\r\n                  id=\"loginBtn\"\r\n                  type=\"submit\"\r\n                  disabled={!isValid}\r\n                  onClick={handleSubmit}\r\n                  size={\"large\"}\r\n                >\r\n                  Đăng nhập\r\n                </button>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","export const DOMAIN = 'https://us-central1-dimo-3e6f7.cloudfunctions.net/dimoApi/api'\r\n// export const DOMAIN = 'http://localhost:5001/dimo-3e6f7/us-central1/dimoApi/api'\r\nexport const __DEV__ = false;\r\nexport const COLOR = {\r\n  primary: '#2E4170',\r\n  orange: '#FF7000'\r\n}\r\n\r\nexport function log(...arg) {\r\n  if (__DEV__) {\r\n    console.info(\r\n      arg\r\n        .map((i) =>\r\n          ['string', 'number'].indexOf(typeof i) === -1 ? JSON.stringify(i, null, ' ') : i,\r\n        )\r\n        .join(' '),\r\n    );\r\n  }\r\n}\r\n\r\nexport function formatCurrency(n, separate = '.') {\r\n  var s = n.toString();\r\n  var regex = /\\B(?=(\\d{3})+(?!\\d))/g;\r\n  var ret = s.replace(regex, separate);\r\n  return ret;\r\n}\r\n","import { defineAction } from 'redux-typed-actions'\r\n\r\nexport const GetBusOperator = defineAction('GET_BUS_OPERATOR_REQUEST')\r\nexport const GetBusOperatorSuccess = defineAction('GET_BUS_OPERATOR_SUCCESS')\r\nexport const GetBusOperatorFailed = defineAction('GET_BUS_OPERATOR_FAILED')\r\n\r\nexport const GetTripList = defineAction('GET_TRIP_LIST_REQUEST')\r\nexport const GetTripListSuccess = defineAction('GET_TRIP_LIST_SUCCESS')\r\nexport const GetTripListFailed = defineAction('GET_TRIP_LIST_FAILED')\r\n\r\nexport const GetOrderList = defineAction('GET_ORDER_LIST_REQUEST')\r\nexport const GetOrderListSuccess = defineAction('GET_ORDER_LIST_SUCCESS')\r\nexport const GetOrderListFailed = defineAction('GET_ORDER_LIST_FAILED')\r\n\r\nexport const SetTypeAccount = defineAction('SET_TYPE_ACCOUNT')\r\n\r\nexport const GetCustomerList = defineAction('GET_CUSTOMER_LIST_REQUEST')\r\nexport const GetCustomerListSuccess = defineAction('GET_CUSTOMER_LIST_SUCCESS')\r\nexport const GetCustomerListFailed = defineAction('GET_CUSTOMER_LIST_FAILED')\r\n\r\nexport const GetBusOperatorDetail = defineAction('GET_BUS_OPERATOR_DETAIL_REQUEST')\r\nexport const GetBusOperatorDetailSuccess = defineAction('GET_BUS_OPERATOR_DETAIL_SUCCESS')\r\nexport const GetBusOperatorDetailFailed = defineAction('GET_BUS_OPERATOR_DETAIL_FAILED')\r\n\r\nexport const GetAccountType = defineAction('GET_TYPE_ACCOUNT')\r\n\r\nexport const GetOrderDetail = defineAction('GET_ORDER_DETAIL_REQUEST')\r\nexport const GetOrderDetailSuccess = defineAction('GET_ORDER_DETAIL_SUCCESS')\r\nexport const GetOrderDetailFailed = defineAction('GET_ORDER_DETAIL_FAILED')\r\n\r\nexport const EditOrderDetail = defineAction('EDIT_ORDER_DETAIL_REQUEST')\r\nexport const EditOrderDetailSuccess = defineAction('EDIT_ORDER_DETAIL_SUCCESS')\r\nexport const EditOrderDetailFailed = defineAction('EDIT_ORDER_DETAIL_FAILED')","import { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, Space } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React from \"react\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { COLOR } from \"ultis/functions\";\r\n\r\nexport const getColumnSearchProps = (dataIndex, searchPlaceholder, searchText, setSearchText, searchedColumn, setSearchColumn, refInput) => {\r\n  return {\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n        <div style={{ padding: 8 }}>\r\n          <Input\r\n            ref={refInput}\r\n            placeholder={searchPlaceholder}\r\n            value={selectedKeys[0]}\r\n            onChange={(e) =>\r\n              setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n            }\r\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn)}\r\n            style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n          />\r\n          <Space>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => handleSearch(selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn)}\r\n              icon={<SearchOutlined />}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Tìm\r\n        </Button>\r\n            <Button\r\n              onClick={() => handleReset(clearFilters, setSearchText)}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Cài lại\r\n        </Button>\r\n          </Space>\r\n        </div>\r\n      ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? COLOR.primary : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => refInput.current.select());\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      ) : (\r\n          text\r\n        ),\r\n  }\r\n}\r\n\r\nconst handleSearch = (selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn) => {\r\n  confirm();\r\n  setSearchColumn(dataIndex);\r\n  setSearchText(selectedKeys[0]);\r\n};\r\n\r\nconst handleReset = (clearFilters, setSearchText) => {\r\n  clearFilters();\r\n  setSearchText(\"\");\r\n};","import { LoadingOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button, Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\nimport { GetBusOperator } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction BusOperator() {\r\n  const busOperator = useSelector((state) => state.Dashboard.busOperator);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n\r\n  useEffect(() => {\r\n    dispatch(GetBusOperator.get());\r\n  }, []);\r\n\r\n  const onAddNewBusOperator = () => {\r\n    console.log(new Date().getTime())\r\n  }\r\n\r\n  const busOperatorColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        \"name\",\r\n        \"Nhập tên nhà xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: \"Nhà xe\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      sorter: (a, b) => a.name.localeCompare(b.name),\r\n    },\r\n    {\r\n      title: \"Địa chỉ\",\r\n      dataIndex: \"address\",\r\n      sorter: (a, b) => a.address.localeCompare(b.address),\r\n    },\r\n    {\r\n      title: \"SĐT\",\r\n      dataIndex: \"phoneNumber\",\r\n      sorter: (a, b) => a.phoneNumber.localeCompare(b.phoneNumber),\r\n      ...getColumnSearchProps(\r\n        \"phoneNumber\",\r\n        \"Nhập SĐT\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      sorter: (a, b) => a.email.localeCompare(b.email),\r\n      ...getColumnSearchProps(\r\n        \"email\",\r\n        \"Nhập email\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Liên hệ\",\r\n      dataIndex: \"contact\",\r\n      sorter: (a, b) => a.email.localeCompare(b.email),\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách nhà xe</span>\r\n      <Button\r\n        type='primary'\r\n        icon={<PlusCircleOutlined />}\r\n        style={{ width: 200, marginBottom: 32 }}\r\n        onClick={() => onAddNewBusOperator()}\r\n      >\r\n        Thêm nhà xe mới\r\n      </Button>\r\n      <Table columns={busOperatorColumns} dataSource={busOperator} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BusOperator;\r\n","export const CUSTOMER_STATUS = {\r\n  NOT_PAID: 'NOT_PAID',\r\n  PAID: 'PAID',\r\n  NO_ACTIVITY: 'NO_ACTIVITY'\r\n}\r\n\r\nexport const PAYMENT_TYPE = [\r\n  {\r\n    value: \"DIRECT\",\r\n    text: \"Trực tiếp\",\r\n  },\r\n  {\r\n    value: \"BANK_TRANSFER\",\r\n    text: \"Chuyển khoản\",\r\n  },\r\n  {\r\n    value: \"ATM_PAY\",\r\n    text: \"Thẻ nội địa\",\r\n  },\r\n  {\r\n    value: \"MASTER_VISA\",\r\n    text: \"Thẻ Visa/Mastercard\",\r\n  },\r\n  {\r\n    value: \"MOMO_PAY\",\r\n    text: \"Ví điện tử MOMO\",\r\n  },\r\n];\r\n\r\nexport const PAYMENT_TITLE = {\r\n  DIRECT: \"Trực tiếp\",\r\n  BANK_TRANSFER: \"Chuyển khoản\",\r\n  ATM_PAY: \"Thẻ nội địa\",\r\n  MASTER_VISA: \"Thẻ Visa/Mastercard\",\r\n  MOMO_PAY: \"Ví điện tử MOMO\",\r\n};","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport { CUSTOMER_STATUS } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetCustomerList } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction CustomerList() {\r\n  const customerList = useSelector((state) => state.Dashboard.customerList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n  const [filteredInfo, setFilterInfo] = useState(null)\r\n\r\n  useEffect(() => {\r\n    dispatch(GetCustomerList.get());\r\n  }, []);\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    setFilterInfo(filters)\r\n  };\r\n\r\n  const customerColumns = [\r\n    {\r\n      title: \"CMND\",\r\n      dataIndex: \"identityId\",\r\n      key: 'identityId',\r\n      sorter: (a, b) => a.identityId.localeCompare(b.identityId),\r\n      ...getColumnSearchProps(\r\n        \"identityId\",\r\n        \"Nhập CMND\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Tên\",\r\n      dataIndex: \"customerName\",\r\n      key: \"customerName\",\r\n      ...getColumnSearchProps(\r\n        \"customerName\",\r\n        \"Nhập tên hành khách\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"customerEmail\",\r\n      key: 'customerEmail',\r\n      sorter: (a, b) => a.identityId.localeCompare(b.identityId),\r\n      ...getColumnSearchProps(\r\n        \"customerEmail\",\r\n        \"Nhập email\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"SĐT\",\r\n      dataIndex: \"phoneNumber\",\r\n      key: 'phoneNumber',\r\n      sorter: (a, b) => a.phoneNumber.localeCompare(b.phoneNumber),\r\n      ...getColumnSearchProps(\r\n        \"phoneNumber\",\r\n        \"Nhập SĐT\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Trạng thái\",\r\n      dataIndex: \"status\",\r\n      render: (value, record, index) => {\r\n        if (value === CUSTOMER_STATUS.PAID) {\r\n          return <span style={{ color: 'green' }}>Đã thanh toán</span>\r\n        }\r\n        if (value === CUSTOMER_STATUS.NOT_PAID) {\r\n          return <span style={{ color: 'red' }}>Chưa thanh toán</span>\r\n        }\r\n        return <span>--</span>\r\n      },\r\n      filters: [\r\n        { text: 'Đã thanh toán', value: CUSTOMER_STATUS.PAID },\r\n        { text: 'Chưa thanh toán', value: CUSTOMER_STATUS.NOT_PAID },\r\n        { text: '--', value: CUSTOMER_STATUS.NO_ACTIVITY },\r\n      ],\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.paymentStatus === value,\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách hành khách</span>\r\n      <Table columns={customerColumns} dataSource={customerList} onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerList;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from 'moment';\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR, formatCurrency } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\nimport { GetOrderList } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction Home() {\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span>Trang chủ chưa có gì nè</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { EditOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Space, Spin, Table, Button, Select, Breadcrumb } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from 'moment';\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR, formatCurrency } from \"ultis/functions\";\r\nimport { PAYMENT_TYPE, PAYMENT_TITLE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetOrderDetail, GetOrderList, EditOrderDetail } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst PAGE = {\r\n  DEFAULT: 'default',\r\n  ORDER: 'order'\r\n}\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction OrderList() {\r\n  const orderList = useSelector((state) => state.Dashboard.orderList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const orderDetail = useSelector((state) => state.Dashboard.orderDetail);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n  const [filteredInfo, setFilterInfo] = useState(null)\r\n  const [currentPage, setCurrentPage] = useState(PAGE.DEFAULT)\r\n  const [routes, setRoutes] = useState([{ breadcrumbName: 'Danh sách đơn hàng' }])\r\n\r\n  const getOrderList = () => {\r\n    if (accountType && accountType !== 'admin') {\r\n      dispatch(GetOrderList.get({ busOperatorId: accountType }));\r\n    } else {\r\n      dispatch(GetOrderList.get());\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getOrderList()\r\n  }, []);\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    setFilterInfo(filters)\r\n  };\r\n\r\n  const handleEdit = (value, record) => {\r\n    dispatch(GetOrderDetail.get({ search: record.ticketId, phoneNumber: record.phoneNumber }))\r\n    setRoutes(routes.concat([{ breadcrumbName: record.ticketId }]))\r\n    setCurrentPage(PAGE.ORDER)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setRoutes([{ breadcrumbName: 'Danh sách đơn hàng' }])\r\n    getOrderList()\r\n    setCurrentPage(PAGE.DEFAULT)\r\n  }\r\n\r\n  const handleSubmitEdit = () => {\r\n    dispatch(EditOrderDetail.get({ ticket: orderDetail }))\r\n    handleReset()\r\n  }\r\n\r\n  const breadcrumbItem = (route, params, routes, paths) => {\r\n    if (route === routes[0]) {\r\n      return <a className=\"titleTopic\" style={{ textDecorationColor: COLOR.primary }} onClick={() => handleReset()}>Danh sách đơn hàng</a>\r\n    }\r\n    return <span className=\"titleTopic\">{route.breadcrumbName}</span>\r\n  }\r\n\r\n  const orderColumns = [\r\n    {\r\n      title: \"Mã đơn\",\r\n      dataIndex: \"ticketId\",\r\n      key: 'ticketId',\r\n      sorter: (a, b) => a.ticketId.localeCompare(b.ticketId),\r\n    },\r\n    {\r\n      title: \"Ngày tạo\",\r\n      dataIndex: \"dateBooked\",\r\n      sorter: {\r\n        compare: (a, b) => a.dateBooked - b.dateBooked,\r\n      },\r\n      render: (value, record, index) => {\r\n        return <span>{moment(value).format(\"DD/MM/YYYY\")}</span>\r\n      }\r\n    },\r\n    {\r\n      title: \"Hành khách\",\r\n      dataIndex: \"customerName\",\r\n      key: \"customerName\",\r\n      ...getColumnSearchProps(\r\n        \"customerName\",\r\n        \"Nhập tên ngườt đặt\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Nhà xe\",\r\n      dataIndex: \"busOperator\",\r\n      key: \"busOperator\",\r\n      ...getColumnSearchProps(\r\n        \"busOperator\",\r\n        \"Nhập tên nhà xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Tổng tiền\",\r\n      dataIndex: \"totalPrice\",\r\n      sorter: {\r\n        compare: (a, b) => a.totalPrice - b.totalPrice,\r\n      },\r\n      render: (value, record, index) => {\r\n        return <span>{formatCurrency(value)}</span>\r\n      }\r\n    },\r\n    {\r\n      title: \"Hình thức thanh toán\",\r\n      dataIndex: \"paymentCode\",\r\n      render: (value, record, index) => {\r\n        switch (value) {\r\n          case PAYMENT_TYPE[0].value:\r\n            return <span>{PAYMENT_TYPE[0].text}</span>\r\n          case PAYMENT_TYPE[1].value:\r\n            return <span>{PAYMENT_TYPE[1].text}</span>\r\n          case PAYMENT_TYPE[2].value:\r\n            return <span>{PAYMENT_TYPE[2].text}</span>\r\n          case PAYMENT_TYPE[3].value:\r\n            return <span>{PAYMENT_TYPE[3].text}</span>\r\n          case PAYMENT_TYPE[4].value:\r\n            return <span>{PAYMENT_TYPE[4].text}</span>\r\n          default: return <span />\r\n        }\r\n      },\r\n      filters: PAYMENT_TYPE,\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.paymentStatus === value,\r\n    },\r\n    {\r\n      title: \"Trạng thái\",\r\n      dataIndex: \"paymentStatus\",\r\n      render: (value, record, index) => {\r\n        if (value) {\r\n          return <span style={{ color: 'green' }}>Đã thanh toán</span>\r\n        }\r\n        return <span style={{ color: 'red' }}>Chưa thanh toán</span>\r\n      },\r\n      filters: [\r\n        { text: 'Đã thanh toán', value: true },\r\n        { text: 'Chưa thanh toán', value: false },\r\n      ],\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.paymentStatus === value,\r\n    },\r\n    {\r\n      title: \"Tác vụ\",\r\n      key: 'action',\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <EditOutlined style={{ fontSize: 20 }} onClick={() => handleEdit(value, record)} />\r\n          </Space>\r\n        )\r\n      }\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  if (currentPage === PAGE.ORDER && orderDetail) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Breadcrumb itemRender={breadcrumbItem} routes={routes} separator='>' />\r\n        <span className=\"titleInfo\">Thông tin hành khách</span>\r\n        <div id=\"infoCell\">\r\n          <span className='infoTitle'>Tên:</span>\r\n          <span className='infoContent'>{orderDetail.customerName}</span>\r\n        </div>\r\n        <div id=\"infoCell\">\r\n          <span className='infoTitle'>Số điện thoại:</span>\r\n          <span className='infoContent'>{orderDetail.phoneNumber}</span>\r\n        </div>\r\n        {orderDetail.customerEmail && <div id=\"infoCell\">\r\n          <span className='infoTitle'>Email:</span>\r\n          <span className='infoContent'>{orderDetail.customerEmail}</span>\r\n        </div>}\r\n        <span className=\"titleInfo\">Thông tin đơn hàng</span>\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <div id=\"infoCell\">\r\n              <span className='infoTitle'>Ngày tạo:</span>\r\n              <span className='infoContent'>{moment(orderDetail.dateBooked).format('DD/MM/YYYY')}</span>\r\n            </div>\r\n            <div id=\"infoCell\">\r\n              <span className='infoTitle'>Số lượng chỗ:</span>\r\n              <span className='infoContent'>{orderDetail.totalTicketAmount}</span>\r\n            </div>\r\n            <div id=\"infoCell\">\r\n              <span className='infoTitle'>Vị trí:</span>\r\n              <span className='infoContent'>{orderDetail.seatId.join(', ')}</span>\r\n            </div>\r\n          </div>\r\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <div id=\"infoBigCell\">\r\n              <span className='infoTitle'>Tổng tiền:</span>\r\n              <span className='infoContent' style={{ color: COLOR.orange }}>{formatCurrency(orderDetail.totalPrice)}</span>\r\n            </div>\r\n            <div id=\"infoBigCell\">\r\n              <span className='infoTitle'>Phương thức thanh toán:</span>\r\n              <span className='infoContent'>{PAYMENT_TITLE[orderDetail.paymentCode]}</span>\r\n            </div>\r\n            <div id=\"infoBigCell\">\r\n              <span className='infoTitle'>Trạng thái:</span>\r\n              <Select defaultValue={orderDetail.paymentStatus} id='dropdown' onChange={(value) => { orderDetail.paymentStatus = value }}>\r\n                <Option value={true}>Đã thanh toán</Option>\r\n                <Option value={false}>Chưa thanh toán</Option>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <span className=\"titleInfo\">Thông tin chuyến xe</span>\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <div id=\"infoCell\">\r\n              <span className='infoTitle'>Mã chuyến:</span>\r\n              <span className='infoContent'>{orderDetail.tripId}</span>\r\n            </div>\r\n            <div id=\"infoCell\">\r\n              <span className='infoTitle'>Điểm khởi hành:</span>\r\n              <span className='infoContent'>{orderDetail.from}</span>\r\n            </div>\r\n            <div id=\"infoCell\">\r\n              <span className='infoTitle'>Điểm đến:</span>\r\n              <span className='infoContent'>{orderDetail.to}</span>\r\n            </div>\r\n          </div>\r\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <div id=\"infoBigCell\">\r\n              <span className='infoTitle'>Nhà xe:</span>\r\n              <span className='infoContent'>{orderDetail.busOperator}</span>\r\n            </div>\r\n            <div id=\"infoBigCell\">\r\n              <span className='infoTitle'>Giờ khởi hành:</span>\r\n              <span className='infoContent'>{orderDetail.timeStart}</span>\r\n            </div>\r\n            <div id=\"infoBigCell\">\r\n              <span className='infoTitle'>Ngày khởi hành:</span>\r\n              <span className='infoContent'>{orderDetail.departureDay}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: 'flex' }}>\r\n          <Button\r\n            className=\"btnStyle\"\r\n            type=\"primary\"\r\n            style={{\r\n              backgroundColor: '#EB5757',\r\n              borderColor: \"white\",\r\n            }}\r\n            onClick={() => handleReset()}\r\n          >\r\n            Hủy\r\n        </Button>\r\n          <Button\r\n            className=\"btnStyle\"\r\n            type=\"primary\"\r\n            style={{\r\n              backgroundColor: COLOR.primary,\r\n              borderColor: \"white\",\r\n            }}\r\n            onClick={() => handleSubmitEdit()}\r\n          >\r\n            Lưu\r\n        </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách đơn hàng</span>\r\n      <Table columns={orderColumns} dataSource={orderList} onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderList;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\nimport { GetTripList } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction TripList() {\r\n  const tripList = useSelector((state) => state.Dashboard.tripList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n\r\n  useEffect(() => {\r\n    if (accountType && accountType !== 'admin') {\r\n      dispatch(GetTripList.get({ busOperatorId: accountType }));\r\n    } else {\r\n      dispatch(GetTripList.get());\r\n    }\r\n  }, []);\r\n\r\n  const tripsColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        \"busOperator\",\r\n        \"Nhập tên nhà xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: \"Nhà xe\",\r\n      dataIndex: \"busOperator\",\r\n      key: \"busOperator\",\r\n    },\r\n    {\r\n      title: \"Mã chuyến\",\r\n      dataIndex: \"tripId\",\r\n      sorter: (a, b) => a.tripId.localeCompare(b.tripId),\r\n    },\r\n    {\r\n      title: \"Loại xe\",\r\n      dataIndex: \"busTypeTitle\",\r\n      key: 'busTypeTitle',\r\n      ...getColumnSearchProps(\r\n        \"busTypeTitle\",\r\n        \"Nhập loại xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Điểm khởi hành\",\r\n      dataIndex: \"from\",\r\n      key: 'from',\r\n      ...getColumnSearchProps(\r\n        \"from\",\r\n        \"Nhập điểm khởi hành\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Điểm đến\",\r\n      dataIndex: \"to\",\r\n      key: 'to',\r\n      ...getColumnSearchProps(\r\n        \"to\",\r\n        \"Nhập điểm điến\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Thời điểm khởi hành\",\r\n      dataIndex: \"timeStart\",\r\n      sorter: (a, b) => a.timeStart.localeCompare(b.timeStart),\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách chuyến xe</span>\r\n      <Table columns={tripsColumns} dataSource={tripList} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TripList;\r\n","import {\r\n  DesktopOutlined,\r\n  FrownOutlined,\r\n  LoadingOutlined,\r\n  PieChartOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Avatar, Button, Menu, Spin } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FiFileText, FiUsers } from \"react-icons/fi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport BusOperator from \"./component/busOperatorTable\";\r\nimport CustomerList from \"./component/customerList\";\r\nimport Home from \"./component/homePage\";\r\nimport OrderList from \"./component/orderListTable\";\r\nimport TripList from \"./component/tripTable\";\r\nimport \"./dashboard.css\";\r\nimport { GetBusOperatorDetail } from \"./redux/actions\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction Dashboard() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [menuSelect, setMenuSelect] = useState(\"0\");\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const accountDetail = useSelector((state) => state.Dashboard.accountDetail);\r\n  const isLoadingDashboard = useSelector(\r\n    (state) => state.Dashboard.isLoadingDashboard\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (accountType && accountType !== \"admin\") {\r\n      dispatch(GetBusOperatorDetail.get({ busOperatorId: accountType }));\r\n    }\r\n  }, []);\r\n\r\n  const onMenuSelect = ({ item, key, keyPath, selectedKeys, domEvent }) => {\r\n    setMenuSelect(key);\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    firebase.auth().signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const renderRightDashboard = () => {\r\n    switch (menuSelect) {\r\n      case \"0\":\r\n        return <Home />;\r\n      case \"1\":\r\n        return <BusOperator />;\r\n      case \"2\":\r\n        return <TripList />;\r\n      case \"3\":\r\n        return <OrderList />;\r\n      case \"4\":\r\n        return <CustomerList />;\r\n      default:\r\n        return <BusOperator />;\r\n    }\r\n  };\r\n\r\n  if (isLoadingDashboard) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!accountType) {\r\n    return (\r\n      <div id=\"empty\">\r\n        <div id=\"errorWrap\">\r\n          <FrownOutlined style={{ fontSize: 60, color: COLOR.primary }} />\r\n          <p style={{ textAlign: \"center\", paddingBottom: 16 }}>\r\n            Bạn chưa đăng nhập hoặc phiên đăng nhập đã hết hạn. Nhấn đăng nhập\r\n            để đăng nhập lại.\r\n          </p>\r\n          <Button\r\n            type=\"primary\"\r\n            style={{\r\n              borderColor: \"white\",\r\n            }}\r\n            onClick={() => history.push(\"/\")}\r\n          >\r\n            Đăng nhập\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id=\"dashboardBg\">\r\n      <div id=\"menuContainer\">\r\n        <Avatar size={100} src=\"https://source.unsplash.com/random\" />\r\n        <span id=\"adminName\">\r\n          {accountDetail ? accountDetail.name : \"Admin\"}\r\n        </span>\r\n        <Menu\r\n          defaultSelectedKeys={[\"0\"]}\r\n          defaultOpenKeys={[\"sub1\"]}\r\n          mode=\"inline\"\r\n          onSelect={onMenuSelect}\r\n        >\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key=\"0\"\r\n            icon={<PieChartOutlined />}\r\n          >\r\n            Trang chủ\r\n          </Menu.Item>\r\n          {accountType === \"admin\" && (\r\n            <Menu.Item\r\n              style={{ color: \"white\" }}\r\n              key=\"1\"\r\n              icon={<PieChartOutlined />}\r\n            >\r\n              Nhà xe\r\n            </Menu.Item>\r\n          )}\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key=\"2\"\r\n            icon={<DesktopOutlined />}\r\n          >\r\n            Chuyến xe\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key=\"3\"\r\n            icon={<FiFileText size={16} style={{ marginRight: 8 }} />}\r\n          >\r\n            Đơn hàng\r\n          </Menu.Item>\r\n          {accountType === \"admin\" && (\r\n            <Menu.Item\r\n              style={{ color: \"white\" }}\r\n              key=\"4\"\r\n              icon={<FiUsers size={16} style={{ marginRight: 8 }} />}\r\n            >\r\n              Hành khách\r\n            </Menu.Item>\r\n          )}\r\n        </Menu>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{\r\n            width: \"80%\",\r\n            marginTop: 64,\r\n            borderColor: \"white\",\r\n          }}\r\n          onClick={() => handleSignOut()}\r\n        >\r\n          Đăng xuất\r\n        </Button>\r\n      </div>\r\n      {renderRightDashboard()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import animationData from \"assets/bus.json\";\r\nimport React from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SetTypeAccount } from \"pages/Dashboard/redux/actions\";\r\n\r\nconst defaultOptions = {\r\n  loop: true,\r\n  autoplay: true,\r\n  animationData: animationData,\r\n  rendererSettings: {\r\n    preserveAspectRatio: \"xMidYMid slice\",\r\n  },\r\n};\r\n\r\nfunction Loading() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        await firebase\r\n          .database()\r\n          .ref(\"users\")\r\n          .child(firebase.auth().currentUser.uid)\r\n          .once(\"value\", (snapshot) => {\r\n            dispatch(SetTypeAccount.get(snapshot.val()));\r\n          });\r\n        history.push(\"/dashboard\");\r\n      } else {\r\n        history.push(\"/login\");\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flex: 1,\r\n        backgroundColor: \"white\",\r\n      }}\r\n    >\r\n      <Lottie options={defaultOptions} width={400} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Login from 'pages/Login'\r\nimport Dashboard from 'pages/Dashboard'\r\nimport Loading from \"pages/Loading\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\">\r\n          <Loading />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/dashboard\">\r\n          <Dashboard />\r\n        </Route>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyBQEVkTU5GeejO-ZA_vq9rRopNoh754fMw\",\r\n  authDomain: \"dimo-3e6f7.firebaseapp.com\",\r\n  databaseURL: \"https://dimo-3e6f7.firebaseio.com\",\r\n  projectId: \"dimo-3e6f7\",\r\n  storageBucket: \"dimo-3e6f7.appspot.com\",\r\n  messagingSenderId: \"155067027749\",\r\n  appId: \"1:155067027749:web:d218c29405e42ea7ed4acc\",\r\n  measurementId: \"G-MB07KHZCFB\"\r\n};","import axios from 'axios';\r\nimport { from } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { DOMAIN, log as SysLog, __DEV__ } from 'ultis/functions';\r\n\r\nexport function request(param) {\r\n  let url = `${DOMAIN}/${param.url}`\r\n\r\n  const language = 'vi';\r\n  const parameters = param.param;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    accept: 'application/json',\r\n    \"Access-Control-Allow-Origin\": true,\r\n    'Accept-Language': language\r\n  }\r\n\r\n  if (__DEV__) {\r\n    console.info('Log_header', headers);\r\n  }\r\n\r\n  return from(\r\n    axios.request({\r\n      url,\r\n      timeout: 10000,\r\n      headers,\r\n      method: param.method || 'POST',\r\n      data: parameters\r\n    }),\r\n  ).pipe(\r\n    map((result) => {\r\n      return { result: result.data.result, status: result.status };\r\n    }),\r\n    tap((result) => log(url, parameters, result)),\r\n  );\r\n}\r\n\r\nfunction log(url, parameters, result) {\r\n  SysLog(\r\n    '--------------------------\\n',\r\n    // '\\x1b[34m',\r\n    'Request data:',\r\n    // '\\x1b[37m',\r\n    '\\nURL:           ',\r\n    // '\\x1b[32m',\r\n    url,\r\n    // '\\x1b[37m',\r\n    '\\nParam:         ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(parameters, null, '\\x1b[32m'),\r\n    // '\\x1b[37m',\r\n    '\\nResponse Data: ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(result, null, '\\x1b[32m') || true,\r\n    // '\\x1b[37m',\r\n    '\\n--------------------------',\r\n  );\r\n}\r\n","import { combineEpics, ofType } from 'redux-observable'\r\nimport { catchError, exhaustMap, map } from 'rxjs/operators'\r\nimport { request } from 'ultis/api'\r\nimport { GetBusOperator, GetBusOperatorFailed, GetBusOperatorSuccess, GetTripList, GetTripListSuccess, GetTripListFailed, GetOrderList, GetOrderListSuccess, GetOrderListFailed, GetCustomerList, GetCustomerListSuccess, GetCustomerListFailed, GetBusOperatorDetail, GetBusOperatorDetailSuccess, GetBusOperatorDetailFailed, GetOrderDetail, GetOrderDetailSuccess, GetOrderDetailFailed, EditOrderDetail, EditOrderDetailSuccess, EditOrderDetailFailed } from './actions'\r\n\r\nconst getBusOperatorEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetBusOperator.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'GET',\r\n        url: 'busOperator'\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetBusOperatorSuccess.get(result.result)\r\n          }\r\n          return GetBusOperatorFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetBusOperatorFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getTripListEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetTripList.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'tripsList',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetTripListSuccess.get(result.result)\r\n          }\r\n          return GetTripListFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetTripListFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getOrderListEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetOrderList.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'tickets',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetOrderListSuccess.get(result.result)\r\n          }\r\n          return GetOrderListFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetOrderListFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getCustomerListEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetCustomerList.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'GET',\r\n        url: 'getCustomers',\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetCustomerListSuccess.get(result.result)\r\n          }\r\n          return GetCustomerListFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetCustomerListFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getBusOperatorDetailEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetBusOperatorDetail.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'busOperatorDetail',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetBusOperatorDetailSuccess.get(result.result)\r\n          }\r\n          return GetBusOperatorDetailFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetBusOperatorDetailFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getOrderDetailEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetOrderDetail.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'findTickets',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetOrderDetailSuccess.get(result.result)\r\n          }\r\n          return GetOrderDetailFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetOrderDetailFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst editOrderDetailEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(EditOrderDetail.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'editTickets',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return EditOrderDetailSuccess.get(result.message)\r\n          }\r\n          return EditOrderDetailFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return EditOrderDetailFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nexport const dashboardEpics = combineEpics(getBusOperatorEpic$, getTripListEpic$, getOrderListEpic$, getCustomerListEpic$, getBusOperatorDetailEpic$, getOrderDetailEpic$, editOrderDetailEpic$)\r\n","import { combineEpics } from 'redux-observable';\r\nimport { dashboardEpics } from 'pages/Dashboard/redux/epics';\r\n\r\nexport const rootEpic = combineEpics(dashboardEpics);\r\n","import { GetBusOperator, GetBusOperatorFailed, GetBusOperatorSuccess, GetTripList, GetTripListSuccess, GetTripListFailed, GetOrderList, GetOrderListSuccess, GetOrderListFailed, SetTypeAccount, GetCustomerList, GetCustomerListSuccess, GetCustomerListFailed, GetBusOperatorDetail, GetBusOperatorDetailSuccess, GetBusOperatorDetailFailed, GetAccountType, GetOrderDetail, GetOrderDetailSuccess, GetOrderDetailFailed } from './actions'\r\n\r\nconst initialState = {\r\n  busOperator: [],\r\n  tripList: [],\r\n  orderList: [],\r\n  customerList: [],\r\n  accountType: null,\r\n  isLoading: false,\r\n  isLoadingDashboard: false,\r\n  accountDetail: null,\r\n  orderDetail: null\r\n}\r\n\r\nexport function dashboardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GetBusOperator.type:\r\n      return { ...state, isLoading: true }\r\n    case GetBusOperatorSuccess.type:\r\n      return { ...state, busOperator: action.payload.data, isLoading: false }\r\n    case GetBusOperatorFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetTripList.type:\r\n      return { ...state, isLoading: true }\r\n    case GetTripListSuccess.type:\r\n      return { ...state, tripList: action.payload, isLoading: false }\r\n    case GetTripListFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetOrderList.type:\r\n      return { ...state, isLoading: true }\r\n    case GetOrderListSuccess.type:\r\n      return { ...state, orderList: action.payload, isLoading: false }\r\n    case GetOrderListFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case SetTypeAccount.type:\r\n      return { ...state, accountType: action.payload }\r\n    case GetCustomerList.type:\r\n      return { ...state, isLoading: true }\r\n    case GetCustomerListSuccess.type:\r\n      return { ...state, customerList: action.payload, isLoading: false }\r\n    case GetCustomerListFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetBusOperatorDetail.type:\r\n      return { ...state, isLoadingDashboard: true }\r\n    case GetBusOperatorDetailSuccess.type:\r\n      return { ...state, accountDetail: action.payload, isLoadingDashboard: false }\r\n    case GetBusOperatorDetailFailed.type:\r\n      return { ...state, isLoadingDashboard: false }\r\n    case GetAccountType.type:\r\n      return { ...state, isLoadingDashboard: true }\r\n    case GetOrderDetail.type:\r\n      return { ...state, isLoading: true }\r\n    case GetOrderDetailSuccess.type:\r\n      return { ...state, orderDetail: action.payload, isLoading: false }\r\n    case GetOrderDetailFailed.type:\r\n      return { ...state, isLoading: false }\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { dashboardReducer } from 'pages/Dashboard/redux/reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  Dashboard: dashboardReducer,\r\n});\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport { rootEpic } from './epic';\r\nimport { rootReducer } from './reducer';\r\nimport { __DEV__ } from 'ultis/functions';\r\n\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nconst applyMiddlewarePro = applyMiddleware(epicMiddleware);\r\nconst applyMiddlewareDev = applyMiddleware(logger, epicMiddleware);\r\n\r\nexport const store = createStore(rootReducer, __DEV__ ? applyMiddlewareDev : applyMiddlewarePro);\r\n\r\nepicMiddleware.run(rootEpic);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { firebaseConfig } from \"./firebaseConfig\";\r\nimport firebase from \"firebase\";\r\nimport { Provider } from 'react-redux'\r\nimport { store } from 'core/store';\r\nimport { ConfigProvider } from 'antd';\r\nimport viVN from 'antd/es/locale/vi_VN';\r\nimport { IconContext } from \"react-icons\"\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ConfigProvider locale={viVN}>\r\n        <IconContext.Provider value={{ className: \"react-icon-clasname\", style: { verticalAlign: 'middle' } }}>\r\n          <App />\r\n        </IconContext.Provider>\r\n      </ConfigProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}