{"version":3,"sources":["pages/Login/index.jsx","ultis/functions.js","pages/Dashboard/constant.js","pages/Dashboard/redux/actions.js","pages/Dashboard/component/addBusOperator.js","pages/Dashboard/component/searchInput.js","pages/Dashboard/component/busOperatorTable.js","pages/Dashboard/component/customerList.js","pages/Dashboard/component/homePage.js","pages/Dashboard/component/editOrderPage.js","pages/Dashboard/component/orderListTable.js","pages/Dashboard/component/tripDateDetail.js","pages/Dashboard/component/tripTable.js","pages/Dashboard/component/addPromotion.js","pages/Dashboard/component/promotionList.js","pages/Dashboard/index.jsx","pages/Loading/index.jsx","App.js","serviceWorker.js","firebaseConfig.js","ultis/api.js","pages/Dashboard/redux/epics.js","core/epic.js","pages/Dashboard/redux/reducer.js","core/reducer.js","core/store.js","index.js"],"names":["Login","history","useHistory","validationSchema","yup","shape","email","label","required","password","matches","message","id","className","initialValues","isInitialValid","onSubmit","values","firebase","auth","signInWithEmailAndPassword","then","push","catch","error","code","Modal","title","content","handleLogin","handleChange","handleBlur","handleSubmit","isValid","errors","setFieldTouched","touched","value","onChange","onTouchStart","onBlur","placeholder","type","disabled","onClick","size","COLOR","formatCurrency","n","separate","s","toString","regex","ret","replace","CUSTOMER_STATUS","PAGE","PAYMENT_TYPE","text","PAYMENT_TITLE","DIRECT","BANK_TRANSFER","ATM_PAY","MASTER_VISA","MOMO_PAY","GetBusOperator","defineAction","GetBusOperatorSuccess","GetBusOperatorFailed","GetTripList","GetTripListSuccess","GetTripListFailed","GetOrderList","GetOrderListSuccess","GetOrderListFailed","SetTypeAccount","GetCustomerList","GetCustomerListSuccess","GetCustomerListFailed","GetBusOperatorDetail","GetBusOperatorDetailSuccess","GetBusOperatorDetailFailed","GetAccountType","GetOrderDetail","GetOrderDetailSuccess","GetOrderDetailFailed","EditOrderDetail","EditOrderDetailSuccess","EditOrderDetailFailed","GetMapSeat","GetMapSeatSuccess","GetMapSeatFailed","SetCurrentPage","ResetDashboard","GetStatistic","GetStatisticSuccess","GetStatisticFailed","GetStatisticAmount","GetStatisticAmountSuccess","GetStatisticAmountFailed","GetCityData","GetCityDataSuccess","GetCityDataFailed","GetDistrictData","GetDistrictSuccess","GetDistrictFailed","GetWardData","GetWardDataSuccess","GetWardDataFailed","GetPromotion","GetPromotionSuccess","GetPromotionFailed","CreateNewPromotion","CreateNewPromotionSuccess","CreateNewPromotionFailed","Option","Select","beforeUpload","file","isJpgOrPng","firstError","operatorName","phoneNumber","contact","loadingIcon","LoadingOutlined","style","fontSize","color","spin","AddBusOperatorPage","props","isLoading","useSelector","state","Dashboard","cityData","districtData","wardData","dispatch","useDispatch","useState","cityCode","setCityCode","districtCode","setDistrictCode","wardCode","setWardCode","isLoadingImage","setLoadingImage","trim","onChangeCity","get","onChangeDistrict","onChangeWard","indicator","handleChangeAvatar","info","status","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","uploadButton","PlusOutlined","fontFamily","avatar","address","initialErrors","console","log","handleAdd","alignItems","display","width","name","listType","showUploadList","action","src","alt","flexDirection","nameWithType","undefined","allowClear","bordered","map","item","index","length","backgroundColor","borderColor","currentPage","getColumnSearchProps","dataIndex","searchPlaceholder","searchText","setSearchText","searchedColumn","setSearchColumn","refInput","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","e","target","onPressEnter","handleSearch","marginBottom","icon","SearchOutlined","handleReset","filterIcon","filtered","onFilter","record","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","current","select","render","highlightStyle","searchWords","autoEscape","textToHighlight","BusOperator","busOperator","detailPage","useRef","useEffect","busOperatorColumns","key","sorter","a","b","localeCompare","PlusCircleOutlined","columns","dataSource","CustomerList","customerList","filteredInfo","setFilterInfo","customerColumns","identityId","filters","filteredValue","paymentStatus","pagination","RangePicker","DatePicker","Home","accountType","accountDetail","stastic","statisticData","busOperatorId","totalTicket","totalPaid","totalNotPaid","totalAmount","locale","viVN","dateStr","from","to","handleChangeRange","format","moment","height","data","margin","top","right","bottom","left","dataKey","stroke","strokeDasharray","xtype","offset","position","angle","tickFormatter","number","formatter","EditOrderPage","orderDetail","routes","breadcrumbName","ticketId","itemRender","route","params","paths","textDecorationColor","separator","customerName","customerEmail","dateBooked","totalTicketAmount","seatId","join","totalPrice","paymentCode","defaultValue","tripId","timeStart","departureDay","ticket","OrderList","orderList","getOrderList","orderColumns","compare","EditOutlined","search","handleEdit","TripDateDetail","tripDetail","seats","trip","date","renderOneSeat","seat","goToOrderDetail","renderSeat","floor","flex","marginTop","busTypeTitle","busType","handleChangeDate","marginRight","floor1","floor2","TripList","tripList","getTripList","tripsColumns","Date","DeleteOutlined","TextArea","Input","promotionCode","promotionName","quantity","promotionPercent","AddPromotionPage","add","description","rows","PromotionList","promotions","promotionColumns","Number","diff","isLoadingDashboard","onAuthStateChanged","user","database","child","currentUser","uid","once","snapshot","val","defaultSelectedKeys","mode","onSelect","keyPath","domEvent","Item","PieChartOutlined","DesktopOutlined","signOut","renderRightDashboard","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loading","justifyContent","options","App","exact","path","Boolean","window","location","hostname","match","request","param","url","parameters","headers","accept","axios","timeout","method","pipe","tap","JSON","stringify","dashboardEpics","combineEpics","action$","ofType","exhaustMap","catchError","payload","store","rootEpic","initialState","rootReducer","combineReducers","epicMiddleware","createEpicMiddleware","applyMiddlewarePro","applyMiddleware","logger","createStore","run","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","StrictMode","Provider","verticalAlign","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd3316b8.chunk.js","sourcesContent":["import { Input, Modal } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport * as yup from \"yup\";\r\nimport \"./login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .label(\"Email\")\r\n      .email(\"Email hiện tại không hợp lệ\")\r\n      .required(\"* Vui lòng nhập email\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"* Vui lòng nhập mật khẩu\")\r\n      .matches(/(?=.{8,})/, {\r\n        message: \"Mật khẩu phải gồm 8 kí tự\",\r\n      }),\r\n  });\r\n\r\n  const handleLogin = (values) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(values.email, values.password)\r\n      .then(() => history.push(\"/\"))\r\n      .catch((error) => {\r\n        if (error.code === \"auth/user-not-found\") {\r\n          Modal.error({\r\n            title: \"Không tìm thấy\",\r\n            content: \"Không tìm thấy người dùng này.\",\r\n          });\r\n        } else if (error.code === \"auth/wrong-password\") {\r\n          Modal.error({\r\n            title: \"Sai mật khẩu\",\r\n            content: \"Bạn đã nhập sai mật khẩu.\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div id=\"loginBg\">\r\n      <span className=\"dimoName\">dimo</span>\r\n      <div id=\"loginBox\">\r\n        <span id=\"loginStyle\">Đăng nhập</span>\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          isInitialValid={false}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => handleLogin(values)}\r\n        >\r\n          {({\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            values,\r\n            isValid,\r\n            errors,\r\n            touched,\r\n            setFieldTouched,\r\n          }) => {\r\n            return (\r\n              <Form>\r\n                <Input\r\n                  id=\"inputBox\"\r\n                  value={values.email}\r\n                  onChange={handleChange(\"email\")}\r\n                  onTouchStart={() => setFieldTouched(\"email\")}\r\n                  onBlur={handleBlur(\"email\")}\r\n                  placeholder=\"Email\"\r\n                />\r\n                {errors.email && <span id=\"errorStyle\">{errors.email}</span>}\r\n                <Input\r\n                  id=\"inputBox\"\r\n                  type=\"password\"\r\n                  onChange={handleChange(\"password\")}\r\n                  onTouchStart={() => setFieldTouched(\"password\")}\r\n                  value={values.password}\r\n                  onBlur={handleBlur(\"password\")}\r\n                  placeholder=\"Mật khẩu\"\r\n                />\r\n                {errors.password && (\r\n                  <span id=\"errorStyle\">{errors.password}</span>\r\n                )}\r\n                <button\r\n                  id=\"loginBtn\"\r\n                  type=\"submit\"\r\n                  disabled={!isValid}\r\n                  onClick={handleSubmit}\r\n                  size={\"large\"}\r\n                >\r\n                  Đăng nhập\r\n                </button>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","export const DOMAIN = 'https://us-central1-dimo-3e6f7.cloudfunctions.net/dimoApi/api'\r\n// export const DOMAIN = 'http://localhost:5001/dimo-3e6f7/us-central1/dimoApi/api'\r\nexport const __DEV__ = false;\r\nexport const COLOR = {\r\n  primary: '#2E4170',\r\n  orange: '#FF7000',\r\n  lightBlue: '#3CA0F7',\r\n  gray: '#C4C4C4'\r\n}\r\n\r\nexport function log(...arg) {\r\n  if (__DEV__) {\r\n    console.info(\r\n      arg\r\n        .map((i) =>\r\n          ['string', 'number'].indexOf(typeof i) === -1 ? JSON.stringify(i, null, ' ') : i,\r\n        )\r\n        .join(' '),\r\n    );\r\n  }\r\n}\r\n\r\nexport function formatCurrency(n, separate = '.') {\r\n  var s = n.toString();\r\n  var regex = /\\B(?=(\\d{3})+(?!\\d))/g;\r\n  var ret = s.replace(regex, separate);\r\n  return ret;\r\n}\r\n","export const CUSTOMER_STATUS = {\r\n  NOT_PAID: \"NOT_PAID\",\r\n  PAID: \"PAID\",\r\n  NO_ACTIVITY: \"NO_ACTIVITY\",\r\n};\r\n\r\nexport const PAGE = {\r\n  HOME: \"HOME\",\r\n  BUS_OPERATOR: 'BUS_OPERATOR',\r\n  PROMOTIONS: \"PROMOTIONS\",\r\n  TRIP_LIST: 'TRIP_LIST',\r\n  ORDER_LIST: 'ORDER_LIST',\r\n  CUSTOMER_LIST: 'CUSTOMER_LIST',\r\n  ORDER_DETAIL: \"ORDER_DETAIL\",\r\n  TRIP_DETAIL: \"TRIP_DETAIL\",\r\n  ADD_OPERATOR: \"ADD_OPERATOR\",\r\n  ADD_PROMOTION: 'ADD_PROMOTION'\r\n};\r\n\r\nexport const PAYMENT_TYPE = [\r\n  {\r\n    value: \"DIRECT\",\r\n    text: \"Trực tiếp\",\r\n  },\r\n  {\r\n    value: \"BANK_TRANSFER\",\r\n    text: \"Chuyển khoản\",\r\n  },\r\n  {\r\n    value: \"ATM_PAY\",\r\n    text: \"Thẻ nội địa\",\r\n  },\r\n  {\r\n    value: \"MASTER_VISA\",\r\n    text: \"Thẻ Visa/Mastercard\",\r\n  },\r\n  {\r\n    value: \"MOMO_PAY\",\r\n    text: \"Ví điện tử MOMO\",\r\n  },\r\n];\r\n\r\nexport const PAYMENT_TITLE = {\r\n  DIRECT: \"Trực tiếp\",\r\n  BANK_TRANSFER: \"Chuyển khoản\",\r\n  ATM_PAY: \"Thẻ nội địa\",\r\n  MASTER_VISA: \"Thẻ Visa/Mastercard\",\r\n  MOMO_PAY: \"Ví điện tử MOMO\",\r\n};\r\n","import { defineAction } from 'redux-typed-actions'\r\n\r\nexport const GetBusOperator = defineAction('GET_BUS_OPERATOR_REQUEST')\r\nexport const GetBusOperatorSuccess = defineAction('GET_BUS_OPERATOR_SUCCESS')\r\nexport const GetBusOperatorFailed = defineAction('GET_BUS_OPERATOR_FAILED')\r\n\r\nexport const GetTripList = defineAction('GET_TRIP_LIST_REQUEST')\r\nexport const GetTripListSuccess = defineAction('GET_TRIP_LIST_SUCCESS')\r\nexport const GetTripListFailed = defineAction('GET_TRIP_LIST_FAILED')\r\n\r\nexport const GetOrderList = defineAction('GET_ORDER_LIST_REQUEST')\r\nexport const GetOrderListSuccess = defineAction('GET_ORDER_LIST_SUCCESS')\r\nexport const GetOrderListFailed = defineAction('GET_ORDER_LIST_FAILED')\r\n\r\nexport const SetTypeAccount = defineAction('SET_TYPE_ACCOUNT')\r\n\r\nexport const GetCustomerList = defineAction('GET_CUSTOMER_LIST_REQUEST')\r\nexport const GetCustomerListSuccess = defineAction('GET_CUSTOMER_LIST_SUCCESS')\r\nexport const GetCustomerListFailed = defineAction('GET_CUSTOMER_LIST_FAILED')\r\n\r\nexport const GetBusOperatorDetail = defineAction('GET_BUS_OPERATOR_DETAIL_REQUEST')\r\nexport const GetBusOperatorDetailSuccess = defineAction('GET_BUS_OPERATOR_DETAIL_SUCCESS')\r\nexport const GetBusOperatorDetailFailed = defineAction('GET_BUS_OPERATOR_DETAIL_FAILED')\r\n\r\nexport const GetAccountType = defineAction('GET_TYPE_ACCOUNT')\r\n\r\nexport const GetOrderDetail = defineAction('GET_ORDER_DETAIL_REQUEST')\r\nexport const GetOrderDetailSuccess = defineAction('GET_ORDER_DETAIL_SUCCESS')\r\nexport const GetOrderDetailFailed = defineAction('GET_ORDER_DETAIL_FAILED')\r\n\r\nexport const GetTripDetail = defineAction('GET_TRIP_DETAIL_REQUEST')\r\nexport const GetTripDetailSuccess = defineAction('GET_TRIP_DETAIL_SUCCESS')\r\nexport const GetTripDetailFailed = defineAction('GET_TRIP_DETAIL_FAILED')\r\n\r\nexport const EditOrderDetail = defineAction('EDIT_ORDER_DETAIL_REQUEST')\r\nexport const EditOrderDetailSuccess = defineAction('EDIT_ORDER_DETAIL_SUCCESS')\r\nexport const EditOrderDetailFailed = defineAction('EDIT_ORDER_DETAIL_FAILED')\r\n\r\nexport const GetMapSeat = defineAction('GET_MAP_SEAT_REQUEST')\r\nexport const GetMapSeatSuccess = defineAction('GET_MAP_SEAT_SUCCESS')\r\nexport const GetMapSeatFailed = defineAction('GET_MAP_SEAT_FAILED')\r\n\r\nexport const SetCurrentPage = defineAction('SET_CURRENT_PAGE')\r\nexport const ResetDashboard = defineAction('RESET_DASHBOARD')\r\n\r\nexport const GetStatistic = defineAction('GET_STATISTIC_REQUEST')\r\nexport const GetStatisticSuccess = defineAction('GET_STATISTIC_SUCCESS')\r\nexport const GetStatisticFailed = defineAction('GET_STATISTIC_FAILED')\r\n\r\nexport const GetStatisticAmount = defineAction('GET_STATISTIC_AMOUNT_REQUEST')\r\nexport const GetStatisticAmountSuccess = defineAction('GET_STATISTIC_AMOUNT_SUCCESS')\r\nexport const GetStatisticAmountFailed = defineAction('GET_STATISTIC_AMOUNT_FAILED')\r\n\r\nexport const GetCityData = defineAction('GET_CITY_DATA_REQUEST')\r\nexport const GetCityDataSuccess = defineAction('GET_CITY_DATA_SUCCESS')\r\nexport const GetCityDataFailed = defineAction('GET_CITY_DATA_FAILED')\r\n\r\nexport const GetDistrictData = defineAction('GET_DISTRICT_DATA_REQUEST')\r\nexport const GetDistrictSuccess = defineAction('GET_DISTRICT_DATA_SUCCESS')\r\nexport const GetDistrictFailed = defineAction('GET_DISTRICT_DATA_FAILED')\r\n\r\nexport const GetWardData = defineAction('GET_WARD_DATA_REQUEST')\r\nexport const GetWardDataSuccess = defineAction('GET_WARD_DATA_SUCCESS')\r\nexport const GetWardDataFailed = defineAction('GET_WARD_DATA_FAILED')\r\n\r\nexport const GetPromotion = defineAction('GET_PROMOTION_REQUEST')\r\nexport const GetPromotionSuccess = defineAction('GET_PROMOTION_SUCCESS')\r\nexport const GetPromotionFailed = defineAction('GET_PROMOTION_FAILED')\r\n\r\nexport const CreateNewPromotion = defineAction('CREATE_NEW_PROMOTION_REQUEST')\r\nexport const CreateNewPromotionSuccess = defineAction('CREATE_NEW_PROMOTION_SUCCESS')\r\nexport const CreateNewPromotionFailed = defineAction('CREATE_NEW_PROMOTION_FAILED')","import { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, Select, Spin, Upload, message } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport * as yup from \"yup\";\r\nimport { PAGE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { SetCurrentPage, GetCityData, GetDistrictData, GetWardData } from \"../redux/actions\";\r\n\r\nconst { Option } = Select;\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n  if (!isJpgOrPng) {\r\n    message.error('Chỉ được phép sử dụng JPG hoặc PNG!');\r\n  }\r\n  return isJpgOrPng;\r\n}\r\n\r\nconst firstError = {\r\n  operatorName: \"* Vui lòng nhập tên nhà xe\", phoneNumber: \"* Vui lòng nhập số điện thoại\", email: \"* Vui lòng nhập email\", contact: \"* Vui lòng nhập người liên hệ\"\r\n}\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction AddBusOperatorPage(props) {\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const cityData = useSelector((state) => state.Dashboard.cityData);\r\n  const districtData = useSelector((state) => state.Dashboard.districtData);\r\n  const wardData = useSelector((state) => state.Dashboard.wardData);\r\n  const dispatch = useDispatch();\r\n  const [cityCode, setCityCode] = useState(null)\r\n  const [districtCode, setDistrictCode] = useState(null)\r\n  const [wardCode, setWardCode] = useState(null)\r\n  const [isLoadingImage, setLoadingImage] = useState(false)\r\n\r\n  const validationSchema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .label(\"Email\")\r\n      .email(\"Email hiện tại không hợp lệ\")\r\n      .required(\"* Vui lòng nhập email\"),\r\n    phoneNumber: yup\r\n      .string()\r\n      .required('* Vui lòng nhập số điện thoại')\r\n      .matches(/((09|03|07|08|05)+([0-9]{8})\\b)/, {\r\n        message: 'Số điện thoại không hợp lệ',\r\n      }),\r\n    operatorName: yup\r\n      .string()\r\n      .trim()\r\n      .required('* Vui lòng nhập tên nhà xe')\r\n      .matches(\r\n        /[^a-z0-9A-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]/u,\r\n        {\r\n          message: 'Tên nhà xe không hợp lệ',\r\n        },\r\n      ),\r\n    contact: yup\r\n      .string()\r\n      .trim()\r\n      .required('* Vui lòng nhập người liên hệ')\r\n      .matches(\r\n        /[^a-z0-9A-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]/u,\r\n        {\r\n          message: 'Tên người liên hệ không hợp lệ',\r\n        },\r\n      ),\r\n  });\r\n\r\n  const onChangeCity = (value) => {\r\n    setCityCode(cityData[value])\r\n    setDistrictCode(null)\r\n    setWardCode(null)\r\n    dispatch(GetDistrictData.get({ cityCode: cityData[value].code }))\r\n  }\r\n\r\n  const onChangeDistrict = (value) => {\r\n    setDistrictCode(districtData[value])\r\n    setWardCode(null)\r\n    dispatch(GetWardData.get({ cityCode: cityCode.code, districtCode: districtData[value].code }))\r\n  }\r\n\r\n  const onChangeWard = (value) => {\r\n    setWardCode(wardData[value])\r\n  }\r\n\r\n  const handleAdd = (values) => {\r\n    console.log(values)\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleChangeAvatar = (info, handleChange) => {\r\n    if (info.file.status === 'uploading') {\r\n      setLoadingImage(true)\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      getBase64(info.file.originFileObj, imageUrl => {\r\n        handleChange('avatar')(imageUrl)\r\n        setLoadingImage(false)\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {isLoadingImage ? <LoadingOutlined style={{ color: COLOR.primary }} /> : <PlusOutlined />}\r\n      <div className=\"ant-upload-text\" style={{ fontFamily: 'Source Sans Pro' }}>{isLoadingImage ? 'Đang tải lên' : 'Tải lên'}</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Thêm nhà xe</span>\r\n      <Formik\r\n        initialValues={{ avatar: null, operatorName: \"\", address: \"\", phoneNumber: \"\", email: \"\", password: \"\", contact: \"\" }}\r\n        initialErrors={firstError}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => handleAdd(values)}\r\n      >\r\n        {({\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          values,\r\n          isValid,\r\n          errors,\r\n          touched,\r\n          setFieldTouched,\r\n        }) => {\r\n          return (\r\n            <Form>\r\n              <div className='rowAdd' style={{ alignItems: 'flex-start' }}>\r\n                <span className='addTitle'>Ảnh đại diện:</span>\r\n                <div style={{ display: 'flex', width: 100 }}>\r\n                  <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                    beforeUpload={beforeUpload}\r\n                    onChange={info => handleChangeAvatar(info, handleChange)}\r\n                  >\r\n                    {values.avatar ? <img src={values.avatar} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                  </Upload>\r\n                </div>\r\n              </div>\r\n              {errors.avatar && <span className=\"errorAdd\">{errors.avatar}</span>}\r\n\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Tên nhà xe:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.operatorName}\r\n                  onChange={handleChange(\"operatorName\")}\r\n                  onTouchStart={() => setFieldTouched(\"operatorName\")}\r\n                  onBlur={handleBlur(\"operatorName\")}\r\n                  placeholder=\"Nhập tên nhà xe\"\r\n                />\r\n\r\n              </div>\r\n              {errors.operatorName && <span className=\"errorAdd\">{errors.operatorName}</span>}\r\n              <div className='rowAdd' style={{ alignItems: 'flex-start' }}>\r\n                <span className='addTitle'>Địa chỉ:</span>\r\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                  <Select\r\n                    placeholder='Chọn tỉnh/thành phố'\r\n                    value={cityCode ? cityCode.nameWithType : undefined}\r\n                    className='dropdownCity'\r\n                    allowClear={false}\r\n                    bordered\r\n                    onChange={onChangeCity}\r\n                  >\r\n                    {cityData && cityData.map((item, index) => <Option value={index}>{item.nameWithType}</Option>)}\r\n                  </Select>\r\n                  <div id='rowDis'>\r\n                    <Select\r\n                      placeholder='Chọn quận/huyện'\r\n                      value={districtCode ? districtCode.nameWithType : undefined}\r\n                      className='dropdownNormal'\r\n                      // style={{ width: 150, minWidth: 120 }}\r\n                      allowClear={false}\r\n                      disabled={!(districtData && districtData.length > 0)}\r\n                      onChange={onChangeDistrict}\r\n                    >\r\n                      {districtData && districtData.map((item, index) => <Option value={index}>{item.nameWithType}</Option>)}\r\n                    </Select>\r\n                    <Select\r\n                      placeholder='Chọn phường/xã'\r\n                      value={wardCode ? wardCode.nameWithType : undefined}\r\n                      className='dropdownNormal'\r\n                      // style={{ width: 150, minWidth: 120 }}\r\n                      allowClear={false}\r\n                      disabled={!(wardData && wardData.length > 0)}\r\n                      onChange={onChangeWard}\r\n                    >\r\n                      {wardData && wardData.map((item, index) => <Option value={index}>{item.nameWithType}</Option>)}\r\n                    </Select>\r\n                  </div>\r\n                  <Input\r\n                    className=\"addInput\"\r\n                    value={values.address}\r\n                    onChange={handleChange(\"address\")}\r\n                    onTouchStart={() => setFieldTouched(\"address\")}\r\n                    onBlur={handleBlur(\"address\")}\r\n                    placeholder=\"Nhập địa chỉ\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {errors.address && <span className=\"errorAdd\">{errors.address}</span>}\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Số điện thoại:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.phoneNumber}\r\n                  onChange={handleChange(\"phoneNumber\")}\r\n                  onTouchStart={() => setFieldTouched(\"phoneNumber\")}\r\n                  onBlur={handleBlur(\"phoneNumber\")}\r\n                  placeholder=\"Nhập số điện thoại\"\r\n                />\r\n\r\n              </div>\r\n              {errors.phoneNumber && <span className=\"errorAdd\">{errors.phoneNumber}</span>}\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Email:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.email}\r\n                  onChange={handleChange(\"email\")}\r\n                  onTouchStart={() => setFieldTouched(\"email\")}\r\n                  onBlur={handleBlur(\"email\")}\r\n                  placeholder=\"Nhập email\"\r\n                />\r\n\r\n              </div>\r\n              {errors.email && <span className=\"errorAdd\">{errors.email}</span>}\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Liên hệ:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.contact}\r\n                  onChange={handleChange(\"contact\")}\r\n                  onTouchStart={() => setFieldTouched(\"contact\")}\r\n                  onBlur={handleBlur(\"contact\")}\r\n                  placeholder=\"Nhập tên người liên hệ\"\r\n                />\r\n\r\n              </div>\r\n              {errors.contact && <span className=\"errorAdd\">{errors.contact}</span>}\r\n              <div style={{ display: \"flex\" }}>\r\n                <Button\r\n                  className=\"btnStyle\"\r\n                  type=\"primary\"\r\n                  style={{\r\n                    backgroundColor: \"#EB5757\",\r\n                    borderColor: \"white\",\r\n                  }}\r\n                  onClick={() => dispatch(SetCurrentPage.get({ currentPage: PAGE.BUS_OPERATOR }))}\r\n                >\r\n                  Hủy\r\n                </Button>\r\n                <Button\r\n                  disabled={!isValid}\r\n                  className=\"btnStyle\"\r\n                  type=\"primary\"\r\n                  style={{\r\n                    backgroundColor: isValid ? COLOR.primary : 'gray',\r\n                    borderColor: \"white\",\r\n                    color: 'white'\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Lưu\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBusOperatorPage;\r\n","import { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, Space } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React from \"react\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { COLOR } from \"ultis/functions\";\r\n\r\nexport const getColumnSearchProps = (dataIndex, searchPlaceholder, searchText, setSearchText, searchedColumn, setSearchColumn, refInput) => {\r\n  return {\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n        <div style={{ padding: 8 }}>\r\n          <Input\r\n            ref={refInput}\r\n            placeholder={searchPlaceholder}\r\n            value={selectedKeys[0]}\r\n            onChange={(e) =>\r\n              setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n            }\r\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn)}\r\n            style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n          />\r\n          <Space>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => handleSearch(selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn)}\r\n              icon={<SearchOutlined />}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Tìm\r\n        </Button>\r\n            <Button\r\n              onClick={() => handleReset(clearFilters, setSearchText)}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Cài lại\r\n        </Button>\r\n          </Space>\r\n        </div>\r\n      ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? COLOR.primary : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => refInput.current.select());\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      ) : (\r\n          text\r\n        ),\r\n  }\r\n}\r\n\r\nconst handleSearch = (selectedKeys, confirm, dataIndex, setSearchText, setSearchColumn) => {\r\n  confirm();\r\n  setSearchColumn(dataIndex);\r\n  setSearchText(selectedKeys[0]);\r\n};\r\n\r\nconst handleReset = (clearFilters, setSearchText) => {\r\n  clearFilters();\r\n  setSearchText(\"\");\r\n};","import { LoadingOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button, Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport { PAGE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetBusOperator, SetCurrentPage, GetCityData } from \"../redux/actions\";\r\nimport AddBusOperatorPage from \"./addBusOperator\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction BusOperator() {\r\n  const busOperator = useSelector((state) => state.Dashboard.busOperator);\r\n  const detailPage = useSelector((state) => state.Dashboard.detailPage);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n\r\n  useEffect(() => {\r\n    dispatch(GetBusOperator.get());\r\n  }, []);\r\n\r\n  const onAddNewBusOperator = () => {\r\n    dispatch(GetCityData.get())\r\n    dispatch(SetCurrentPage.get({ currentPage: PAGE.BUS_OPERATOR, detailPage: PAGE.ADD_OPERATOR }))\r\n  }\r\n\r\n  const busOperatorColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        \"name\",\r\n        \"Nhập tên nhà xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: \"Nhà xe\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      sorter: (a, b) => a.name.localeCompare(b.name),\r\n    },\r\n    {\r\n      title: \"Địa chỉ\",\r\n      dataIndex: \"address\",\r\n      sorter: (a, b) => a.address.localeCompare(b.address),\r\n    },\r\n    {\r\n      title: \"SĐT\",\r\n      dataIndex: \"phoneNumber\",\r\n      sorter: (a, b) => a.phoneNumber.localeCompare(b.phoneNumber),\r\n      ...getColumnSearchProps(\r\n        \"phoneNumber\",\r\n        \"Nhập SĐT\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      sorter: (a, b) => a.email.localeCompare(b.email),\r\n      ...getColumnSearchProps(\r\n        \"email\",\r\n        \"Nhập email\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Liên hệ\",\r\n      dataIndex: \"contact\",\r\n      sorter: (a, b) => a.email.localeCompare(b.email),\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (detailPage === PAGE.ADD_OPERATOR) {\r\n    return (\r\n      <AddBusOperatorPage />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách nhà xe</span>\r\n      <Button\r\n        type='primary'\r\n        icon={<PlusCircleOutlined />}\r\n        style={{ width: 200, marginBottom: 32 }}\r\n        onClick={() => onAddNewBusOperator()}\r\n      >\r\n        Thêm nhà xe mới\r\n      </Button>\r\n      <Table columns={busOperatorColumns} dataSource={busOperator} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BusOperator;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport { CUSTOMER_STATUS } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetCustomerList } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction CustomerList() {\r\n  const customerList = useSelector((state) => state.Dashboard.customerList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n  const [filteredInfo, setFilterInfo] = useState(null)\r\n\r\n  useEffect(() => {\r\n    dispatch(GetCustomerList.get());\r\n  }, []);\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    setFilterInfo(filters)\r\n  };\r\n\r\n  const customerColumns = [\r\n    {\r\n      title: \"CMND\",\r\n      dataIndex: \"identityId\",\r\n      key: 'identityId',\r\n      sorter: (a, b) => a.identityId.localeCompare(b.identityId),\r\n      ...getColumnSearchProps(\r\n        \"identityId\",\r\n        \"Nhập CMND\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Tên\",\r\n      dataIndex: \"customerName\",\r\n      key: \"customerName\",\r\n      ...getColumnSearchProps(\r\n        \"customerName\",\r\n        \"Nhập tên hành khách\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"customerEmail\",\r\n      key: 'customerEmail',\r\n      sorter: (a, b) => a.identityId.localeCompare(b.identityId),\r\n      ...getColumnSearchProps(\r\n        \"customerEmail\",\r\n        \"Nhập email\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"SĐT\",\r\n      dataIndex: \"phoneNumber\",\r\n      key: 'phoneNumber',\r\n      sorter: (a, b) => a.phoneNumber.localeCompare(b.phoneNumber),\r\n      ...getColumnSearchProps(\r\n        \"phoneNumber\",\r\n        \"Nhập SĐT\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Trạng thái\",\r\n      dataIndex: \"status\",\r\n      render: (value, record, index) => {\r\n        if (value === CUSTOMER_STATUS.PAID) {\r\n          return <span style={{ color: 'green' }}>Đã thanh toán</span>\r\n        }\r\n        if (value === CUSTOMER_STATUS.NOT_PAID) {\r\n          return <span style={{ color: 'red' }}>Chưa thanh toán</span>\r\n        }\r\n        return <span>--</span>\r\n      },\r\n      filters: [\r\n        { text: 'Đã thanh toán', value: CUSTOMER_STATUS.PAID },\r\n        { text: 'Chưa thanh toán', value: CUSTOMER_STATUS.NOT_PAID },\r\n        { text: '--', value: CUSTOMER_STATUS.NO_ACTIVITY },\r\n      ],\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.paymentStatus === value,\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách hành khách</span>\r\n      <Table columns={customerColumns} dataSource={customerList} onChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerList;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { DatePicker, Spin } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from 'moment';\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CartesianGrid, Label, Line, LineChart, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { COLOR, formatCurrency } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\nimport { GetStatistic, GetStatisticAmount } from \"../redux/actions\";\r\nimport viVN from \"antd/es/locale/vi_VN\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch()\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const accountDetail = useSelector((state) => state.Dashboard.accountDetail);\r\n  const stastic = useSelector((state) => state.Dashboard.stastic);\r\n  const statisticData = useSelector((state) => state.Dashboard.statisticData);\r\n\r\n  useEffect(() => {\r\n    dispatch(GetStatistic.get({ busOperatorId: accountType }))\r\n  }, [])\r\n\r\n  const handleChangeRange = (value) => {\r\n    dispatch(GetStatisticAmount.get({ busOperatorId: accountType, from: value[0], to: value[1] }))\r\n  }\r\n\r\n  if (isLoading || !stastic || !accountType) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Xin chào {accountType !== 'admin' ? accountDetail.name : 'Admin'},</span>\r\n      <div id='statisticWrap'>\r\n        <div className='boxStyle'>\r\n          <span className='titleBox'>Tổng đơn hàng</span>\r\n          <span className='amountStyle'>{stastic.totalTicket}</span>\r\n        </div>\r\n        <div className='boxStyle'>\r\n          <span className='titleBox' style={{ color: 'green' }}>Đã thanh toán</span>\r\n          <span className='amountStyle'>{stastic.totalPaid}</span>\r\n        </div>\r\n        <div className='boxStyle'>\r\n          <span className='titleBox' style={{ color: 'red' }}>Chưa thanh toán</span>\r\n          <span className='amountStyle'>{stastic.totalNotPaid}</span>\r\n        </div>\r\n        <div className='boxStyle'>\r\n          <span className='titleBox'>Doanh thu</span>\r\n          <span className='amountStyle'>{formatCurrency(stastic.totalAmount)}</span>\r\n        </div>\r\n      </div>\r\n      <div id='boxStatistic'>\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n          <RangePicker locale={viVN} style={{ marginBottom: 16, width: 300 }} onChange={(value, dateStr) => handleChangeRange(dateStr)} format='DD/MM/YYYY' allowClear={false} value={[moment(statisticData.from, 'DD/MM/YYYY'), moment(statisticData.to, 'DD/MM/YYYY')]} />\r\n          <LineChart width={700} height={400} data={statisticData.statisticData} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n            <Line type='monotone' dataKey=\"amount\" stroke={COLOR.primary} />\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis height={50} dataKey=\"name\">\r\n              <Label value={statisticData.xtype} style={{ fontFamily: 'Source Sans Pro' }} offset={0} position=\"insideBottom\" />\r\n            </XAxis>\r\n            <YAxis label={{ value: 'Doanh thu', angle: -90, position: 'insideLeft', fontFamily: 'Source Sans Pro' }} width={110} tickFormatter={number => { return formatCurrency(number) }} />\r\n            <Tooltip formatter={(value, name, props) => { return [formatCurrency(value), \"Doanh thu\"] }} />\r\n          </LineChart>\r\n        </div>\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n          <div className='boxCloneStyle'>\r\n            <span className='titleBox'>Tổng doanh thu</span>\r\n            <span className='amountStyle'>{formatCurrency(statisticData.totalAmount)}</span>\r\n          </div>\r\n          <div className='boxCloneStyle'>\r\n            <span className='titleBox'>Tổng đơn hàng</span>\r\n            <span className='amountStyle'>{statisticData.totalTicket}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Breadcrumb, Button, Select, Spin } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR, formatCurrency } from \"ultis/functions\";\r\nimport { PAYMENT_TITLE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { EditOrderDetail } from \"../redux/actions\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction EditOrderPage(props) {\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const orderDetail = useSelector((state) => state.Dashboard.orderDetail);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmitEdit = () => {\r\n    dispatch(EditOrderDetail.get({ ticket: orderDetail }));\r\n    props.handleReset();\r\n  };\r\n\r\n  const breadcrumbItem = (route, params, routes, paths) => {\r\n    if (route === routes[0]) {\r\n      return (\r\n        <a\r\n          className=\"titleTopic\"\r\n          style={{ textDecorationColor: COLOR.primary }}\r\n          onClick={() => props.handleReset()}\r\n        >\r\n          Danh sách đơn hàng\r\n        </a>\r\n      );\r\n    }\r\n    return <span className=\"titleTopic\">{route.breadcrumbName}</span>;\r\n  };\r\n\r\n  if (isLoading || !orderDetail) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  const routes = [\r\n    { breadcrumbName: \"Danh sách đơn hàng\" },\r\n    { breadcrumbName: orderDetail.ticketId },\r\n  ];\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <Breadcrumb itemRender={breadcrumbItem} routes={routes} separator=\">\" />\r\n      <span className=\"titleInfo\">Thông tin hành khách</span>\r\n      <div id=\"infoBigCell\">\r\n        <span className=\"infoTitle\">Tên:</span>\r\n        <span className=\"infoContent\">{orderDetail.customerName}</span>\r\n      </div>\r\n      <div id=\"infoBigCell\">\r\n        <span className=\"infoTitle\">Số điện thoại:</span>\r\n        <span className=\"infoContent\">{orderDetail.phoneNumber}</span>\r\n      </div>\r\n      {orderDetail.customerEmail && (\r\n        <div id=\"infoBigCell\">\r\n          <span className=\"infoTitle\">Email:</span>\r\n          <span className=\"infoContent\">{orderDetail.customerEmail}</span>\r\n        </div>\r\n      )}\r\n      <span className=\"titleInfo\">Thông tin đơn hàng</span>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Ngày tạo:</span>\r\n            <span className=\"infoContent\">\r\n              {moment(orderDetail.dateBooked).format(\"DD/MM/YYYY\")}\r\n            </span>\r\n          </div>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Số lượng chỗ:</span>\r\n            <span className=\"infoContent\">{orderDetail.totalTicketAmount}</span>\r\n          </div>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Vị trí:</span>\r\n            <span className=\"infoContent\">{orderDetail.seatId.join(\", \")}</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Tổng tiền:</span>\r\n            <span className=\"infoContent\" style={{ color: COLOR.orange }}>\r\n              {formatCurrency(orderDetail.totalPrice)}\r\n            </span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Phương thức thanh toán:</span>\r\n            <span className=\"infoContent\">\r\n              {PAYMENT_TITLE[orderDetail.paymentCode]}\r\n            </span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Trạng thái:</span>\r\n            <Select\r\n              defaultValue={orderDetail.paymentStatus}\r\n              id=\"dropdown\"\r\n              onChange={(value) => {\r\n                orderDetail.paymentStatus = value;\r\n              }}\r\n            >\r\n              <Option value={true}>Đã thanh toán</Option>\r\n              <Option value={false}>Chưa thanh toán</Option>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <span className=\"titleInfo\">Thông tin chuyến xe</span>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Mã chuyến:</span>\r\n            <span className=\"infoContent\">{orderDetail.tripId}</span>\r\n          </div>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Điểm khởi hành:</span>\r\n            <span className=\"infoContent\">{orderDetail.from}</span>\r\n          </div>\r\n          <div id=\"infoCell\">\r\n            <span className=\"infoTitle\">Điểm đến:</span>\r\n            <span className=\"infoContent\">{orderDetail.to}</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Nhà xe:</span>\r\n            <span className=\"infoContent\">{orderDetail.busOperator}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Giờ khởi hành:</span>\r\n            <span className=\"infoContent\">{orderDetail.timeStart}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Ngày khởi hành:</span>\r\n            <span className=\"infoContent\">{orderDetail.departureDay}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ display: \"flex\" }}>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          style={{\r\n            backgroundColor: \"#EB5757\",\r\n            borderColor: \"white\",\r\n          }}\r\n          onClick={() => props.handleReset()}\r\n        >\r\n          Hủy\r\n        </Button>\r\n        <Button\r\n          className=\"btnStyle\"\r\n          type=\"primary\"\r\n          style={{\r\n            backgroundColor: COLOR.primary,\r\n            borderColor: \"white\",\r\n          }}\r\n          onClick={() => handleSubmitEdit()}\r\n        >\r\n          Lưu\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditOrderPage;\r\n","import { EditOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Space, Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR, formatCurrency } from \"ultis/functions\";\r\nimport { PAGE, PAYMENT_TYPE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetOrderDetail, GetOrderList, SetCurrentPage } from \"../redux/actions\";\r\nimport EditOrderPage from \"./editOrderPage\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction OrderList() {\r\n  const orderList = useSelector((state) => state.Dashboard.orderList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const detailPage = useSelector((state) => state.Dashboard.detailPage);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n  const [filteredInfo, setFilterInfo] = useState(null);\r\n\r\n  const getOrderList = () => {\r\n    if (accountType && accountType !== \"admin\") {\r\n      dispatch(GetOrderList.get({ busOperatorId: accountType }));\r\n    } else {\r\n      dispatch(GetOrderList.get());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrderList();\r\n  }, []);\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    setFilterInfo(filters);\r\n  };\r\n\r\n  const handleEdit = (value, record) => {\r\n    dispatch(\r\n      GetOrderDetail.get({\r\n        search: record.ticketId,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleReset = () => {\r\n    getOrderList();\r\n    dispatch(SetCurrentPage.get({ currentPage: PAGE.ORDER_LIST }))\r\n  };\r\n\r\n  const orderColumns = [\r\n    {\r\n      title: \"Mã đơn\",\r\n      dataIndex: \"ticketId\",\r\n      key: \"ticketId\",\r\n      sorter: (a, b) => a.ticketId.localeCompare(b.ticketId),\r\n    },\r\n    {\r\n      title: \"Ngày tạo\",\r\n      dataIndex: \"dateBooked\",\r\n      sorter: {\r\n        compare: (a, b) => a.dateBooked - b.dateBooked,\r\n      },\r\n      render: (value, record, index) => {\r\n        return <span>{moment(value).format(\"DD/MM/YYYY\")}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Hành khách\",\r\n      dataIndex: \"customerName\",\r\n      key: \"customerName\",\r\n      ...getColumnSearchProps(\r\n        \"customerName\",\r\n        \"Nhập tên ngườt đặt\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Nhà xe\",\r\n      dataIndex: \"busOperator\",\r\n      key: \"busOperator\",\r\n      ...getColumnSearchProps(\r\n        \"busOperator\",\r\n        \"Nhập tên nhà xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Tổng tiền\",\r\n      dataIndex: \"totalPrice\",\r\n      sorter: {\r\n        compare: (a, b) => a.totalPrice - b.totalPrice,\r\n      },\r\n      render: (value, record, index) => {\r\n        return <span>{formatCurrency(value)}</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Hình thức thanh toán\",\r\n      dataIndex: \"paymentCode\",\r\n      render: (value, record, index) => {\r\n        switch (value) {\r\n          case PAYMENT_TYPE[0].value:\r\n            return <span>{PAYMENT_TYPE[0].text}</span>;\r\n          case PAYMENT_TYPE[1].value:\r\n            return <span>{PAYMENT_TYPE[1].text}</span>;\r\n          case PAYMENT_TYPE[2].value:\r\n            return <span>{PAYMENT_TYPE[2].text}</span>;\r\n          case PAYMENT_TYPE[3].value:\r\n            return <span>{PAYMENT_TYPE[3].text}</span>;\r\n          case PAYMENT_TYPE[4].value:\r\n            return <span>{PAYMENT_TYPE[4].text}</span>;\r\n          default:\r\n            return <span />;\r\n        }\r\n      },\r\n      filters: PAYMENT_TYPE,\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.paymentStatus === value,\r\n    },\r\n    {\r\n      title: \"Trạng thái\",\r\n      dataIndex: \"paymentStatus\",\r\n      render: (value, record, index) => {\r\n        if (value) {\r\n          return <span style={{ color: \"green\" }}>Đã thanh toán</span>;\r\n        }\r\n        return <span style={{ color: \"red\" }}>Chưa thanh toán</span>;\r\n      },\r\n      filters: [\r\n        { text: \"Đã thanh toán\", value: true },\r\n        { text: \"Chưa thanh toán\", value: false },\r\n      ],\r\n      filteredValue: filteredInfo ? filteredInfo.name : null,\r\n      onFilter: (value, record) => record.paymentStatus === value,\r\n    },\r\n    {\r\n      title: \"Tác vụ\",\r\n      key: \"action\",\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <EditOutlined\r\n              style={{ fontSize: 20 }}\r\n              onClick={() => handleEdit(value, record)}\r\n            />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  if (detailPage === PAGE.ORDER_DETAIL) {\r\n    return <EditOrderPage handleReset={handleReset} />;\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách đơn hàng</span>\r\n      <Table\r\n        columns={orderColumns}\r\n        dataSource={orderList}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderList;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Breadcrumb, DatePicker, Spin } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport viVN from \"antd/es/locale/vi_VN\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport \"../dashboard.css\";\r\nimport { GetMapSeat, GetOrderDetail } from \"../redux/actions\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction TripDateDetail(props) {\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const tripDetail = useSelector((state) => state.Dashboard.tripDetail);\r\n  const { seats, trip, date } = tripDetail\r\n\r\n  const breadcrumbItem = (route, params, routes, paths) => {\r\n    if (route === routes[0]) {\r\n      return (\r\n        <a\r\n          className=\"titleTopic\"\r\n          style={{ textDecorationColor: COLOR.primary }}\r\n          onClick={() => props.handleReset()}\r\n        >\r\n          Danh sách chuyến xe\r\n        </a>\r\n      );\r\n    }\r\n    return <span className=\"titleTopic\">{route.breadcrumbName}</span>;\r\n  };\r\n\r\n  const handleChangeDate = (value) => {\r\n    dispatch(GetMapSeat.get({ tripId: trip.tripId, busType: trip.busType, date: value }))\r\n  }\r\n\r\n  const goToOrderDetail = (seat) => {\r\n    dispatch(GetOrderDetail.get({ search: seat.ticketId }))\r\n  }\r\n\r\n  const renderOneSeat = (seat) => (\r\n    <div className='seatStyle' style={{ backgroundColor: seat.status ? COLOR.lightBlue : COLOR.gray }} onClick={seat.status ? () => goToOrderDetail(seat) : () => { }}>\r\n      <span className=\"infoContent\">{seat.seatId}</span>\r\n      {seat.status && seat.ticketId && <span className=\"infoContent\">{seat.ticketId}</span>}\r\n    </div>\r\n  )\r\n\r\n  const renderSeat = (floor) => (\r\n    <table style={{ display: 'flex', flex: 1, flexDirection: 'column' }}>\r\n      {floor.map(item => (\r\n        <tr>\r\n          {item.map(seat => (<td>{seat ? renderOneSeat(seat) : <div className='seatStyle' style={{ backgroundColor: 'white' }} />}</td>))}\r\n        </tr>\r\n      ))}\r\n    </table>\r\n  )\r\n\r\n  if (isLoading || !trip) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  const routes = [\r\n    { breadcrumbName: \"Danh sách đơn hàng\" },\r\n    { breadcrumbName: trip.tripId },\r\n  ];\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <Breadcrumb itemRender={breadcrumbItem} routes={routes} separator=\">\" />\r\n      <div style={{ display: \"flex\", marginTop: 24 }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Loại xe:</span>\r\n            <span className=\"infoContent\">{trip.busTypeTitle}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Điểm khởi hành:</span>\r\n            <span className=\"infoContent\">{trip.from}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Điểm đến:</span>\r\n            <span className=\"infoContent\">{trip.to}</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Nhà xe:</span>\r\n            <span className=\"infoContent\">{trip.busOperator}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Giờ khởi hành:</span>\r\n            <span className=\"infoContent\">{trip.timeStart}</span>\r\n          </div>\r\n          <div id=\"infoBigCell\">\r\n            <span className=\"infoTitle\">Ngày khởi hành:</span>\r\n            <DatePicker\r\n              locale={viVN}\r\n              value={moment(date, 'DD/MM/YYYY')}\r\n              format=\"DD/MM/YYYY\"\r\n              allowClear={false}\r\n              onChange={(value, dateStr) => handleChangeDate(dateStr)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ display: \"flex\", marginTop: 24 }}>\r\n        <div\r\n          style={{ backgroundColor: COLOR.lightBlue }}\r\n          className=\"smallSquare\"\r\n        />\r\n        <span className=\"infoContent\" style={{ marginRight: 28 }}>\r\n          Ghế đã đặt\r\n          </span>\r\n        <div\r\n          style={{ backgroundColor: COLOR.gray }}\r\n          className=\"smallSquare\"\r\n        />\r\n        <span className=\"infoContent\" style={{ marginRight: 28 }}>\r\n          Ghế trống\r\n          </span>\r\n      </div>\r\n      {seats && <div style={{ display: 'flex', marginTop: 24 }}>\r\n        {renderSeat(seats.floor1)}\r\n        {seats.floor2 && seats.floor2.length > 0 && renderSeat(seats.floor2)}\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TripDateDetail;\r\n","import {\r\n  DeleteOutlined, EditOutlined,\r\n  LoadingOutlined\r\n} from \"@ant-design/icons\";\r\nimport { Space, Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport { PAGE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetMapSeat, GetTripList, SetCurrentPage } from \"../redux/actions\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\nimport TripDateDetail from \"./tripDateDetail\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction TripList() {\r\n  const tripList = useSelector((state) => state.Dashboard.tripList);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const detailPage = useSelector((state) => state.Dashboard.detailPage);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n\r\n  const getTripList = () => {\r\n    if (accountType && accountType !== \"admin\") {\r\n      dispatch(GetTripList.get({ busOperatorId: accountType }));\r\n    } else {\r\n      dispatch(GetTripList.get());\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getTripList();\r\n  }, []);\r\n\r\n  const handleEdit = (value, record) => {\r\n    dispatch(GetMapSeat.get({ tripId: record.tripId, busType: record.busType, date: moment(new Date()).format('DD/MM/YYYY') }))\r\n    dispatch(SetCurrentPage.get({ currentPage: PAGE.TRIP_LIST, detailPage: PAGE.TRIP_DETAIL }))\r\n  };\r\n\r\n  const handleReset = () => {\r\n    getTripList();\r\n    dispatch(SetCurrentPage.get({ currentPage: PAGE.TRIP_LIST }))\r\n  };\r\n\r\n  const tripsColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        \"busOperator\",\r\n        \"Nhập tên nhà xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: \"Nhà xe\",\r\n      dataIndex: \"busOperator\",\r\n      key: \"busOperator\",\r\n    },\r\n    {\r\n      title: \"Mã chuyến\",\r\n      dataIndex: \"tripId\",\r\n      sorter: (a, b) => a.tripId.localeCompare(b.tripId),\r\n    },\r\n    {\r\n      title: \"Loại xe\",\r\n      dataIndex: \"busTypeTitle\",\r\n      key: \"busTypeTitle\",\r\n      ...getColumnSearchProps(\r\n        \"busTypeTitle\",\r\n        \"Nhập loại xe\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Điểm khởi hành\",\r\n      dataIndex: \"from\",\r\n      key: \"from\",\r\n      ...getColumnSearchProps(\r\n        \"from\",\r\n        \"Nhập điểm khởi hành\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Điểm đến\",\r\n      dataIndex: \"to\",\r\n      key: \"to\",\r\n      ...getColumnSearchProps(\r\n        \"to\",\r\n        \"Nhập điểm điến\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n    },\r\n    {\r\n      title: \"Thời điểm khởi hành\",\r\n      dataIndex: \"timeStart\",\r\n      sorter: (a, b) => a.timeStart.localeCompare(b.timeStart),\r\n    },\r\n    {\r\n      title: \"Tác vụ\",\r\n      key: \"action\",\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <EditOutlined\r\n              style={{ fontSize: 20 }}\r\n              onClick={() => handleEdit(value, record)}\r\n            />\r\n            <DeleteOutlined\r\n              style={{ fontSize: 20, color: \"#FF0000\" }}\r\n              onClick={() => { }}\r\n            />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n  if (detailPage === PAGE.TRIP_DETAIL) {\r\n    return (\r\n      <TripDateDetail handleReset={handleReset} />\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách chuyến xe</span>\r\n      <Table columns={tripsColumns} dataSource={tripList} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TripList;\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Button, DatePicker, Input, message, Spin } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Formik } from \"formik\";\r\nimport moment from 'moment';\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport * as yup from \"yup\";\r\nimport { PAGE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { SetCurrentPage, CreateNewPromotion } from \"../redux/actions\";\r\nconst { RangePicker } = DatePicker;\r\nconst { TextArea } = Input;\r\n\r\nconst firstError = {\r\n  promotionCode: \"* Vui lòng nhập mã khuyến mãi\", promotionName: \"* Vui lòng nhập tên khuyến mãi\", from: \"* Vui lòng nhập thời gian diễn ra chương trình\", quantity: \"* Vui lòng nhập số lượt sử dụng khuyến mãi\", promotionPercent: \"* Vui lòng nhập phần trăm giảm giá\"\r\n}\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction AddPromotionPage(props) {\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  const validationSchema = yup.object().shape({\r\n    promotionCode: yup\r\n      .string()\r\n      .trim()\r\n      .required('* Vui lòng nhập mã khuyến mãi'),\r\n    // .matches(\r\n    //   /[^[0-9A-Z]*$]/,\r\n    //   {\r\n    //     message: 'Mã khuyến mãi không hợp lệ',\r\n    //   },\r\n    // ),\r\n    promotionName: yup\r\n      .string()\r\n      .trim()\r\n      .required('* Vui lòng nhập tên khuyến mãi')\r\n      .matches(\r\n        /[^a-z0-9A-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]/u,\r\n        {\r\n          message: 'Tên khuyến mãi không hợp lệ',\r\n        },\r\n      ),\r\n    quantity: yup\r\n      .number()\r\n      .required('* Vui lòng nhập số lượt sử dụng khuyến mãi')\r\n  });\r\n\r\n  const handleAdd = (values) => {\r\n    dispatch(CreateNewPromotion.get(values))\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleChangeRange = (dateStr, handleChange) => {\r\n    handleChange('from')(dateStr[0])\r\n    handleChange('to')(dateStr[1])\r\n  }\r\n\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Thêm khuyến mãi</span>\r\n      <Formik\r\n        initialValues={{ promotionCode: '', promotionName: '', quantity: 0, from: moment(new Date()).format('DD/MM/YYYY'), to: moment(new Date()).add(1, 'days').format('DD/MM/YYYY'), description: '', promotionPercent: 0 }}\r\n        initialErrors={firstError}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => handleAdd(values)}\r\n      >\r\n        {({\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          values,\r\n          isValid,\r\n          errors,\r\n          touched,\r\n          setFieldTouched,\r\n        }) => {\r\n          return (\r\n            <Form>\r\n\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Mã khuyến mãi:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.promotionCode}\r\n                  onChange={handleChange(\"promotionCode\")}\r\n                  onTouchStart={() => setFieldTouched(\"promotionCode\")}\r\n                  onBlur={handleBlur(\"promotionCode\")}\r\n                  placeholder=\"HEVUI20,...\"\r\n                />\r\n              </div>\r\n              {errors.promotionCode && <span className=\"errorAdd\">{errors.promotionCode}</span>}\r\n\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Mã khuyến mãi:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.promotionName}\r\n                  onChange={handleChange(\"promotionName\")}\r\n                  onTouchStart={() => setFieldTouched(\"promotionName\")}\r\n                  onBlur={handleBlur(\"promotionName\")}\r\n                  placeholder=\"Nhập tên khuyến mãi\"\r\n                />\r\n              </div>\r\n              {errors.promotionName && <span className=\"errorAdd\">{errors.promotionName}</span>}\r\n\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Phần trăm giảm giá:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.promotionPercent}\r\n                  onChange={handleChange(\"promotionPercent\")}\r\n                  onTouchStart={() => setFieldTouched(\"promotionPercent\")}\r\n                  onBlur={handleBlur(\"promotionPercent\")}\r\n                  placeholder=\"Phần trăm giảm giá\"\r\n                  type='number'\r\n                />\r\n              </div>\r\n              {errors.promotionPercent && <span className=\"errorAdd\">{errors.promotionPercent}</span>}\r\n\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Số lượt khuyến mãi:</span>\r\n                <Input\r\n                  className=\"addInput\"\r\n                  value={values.quantity}\r\n                  onChange={handleChange(\"quantity\")}\r\n                  onTouchStart={() => setFieldTouched(\"quantity\")}\r\n                  onBlur={handleBlur(\"quantity\")}\r\n                  placeholder=\"Nhập số lượt khuyến mãi\"\r\n                  type='number'\r\n                />\r\n              </div>\r\n              {errors.quantity && <span className=\"errorAdd\">{errors.quantity}</span>}\r\n\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Mô tả khuyến mãi:</span>\r\n                <TextArea\r\n                  className=\"addInput\"\r\n                  value={values.description}\r\n                  onChange={handleChange(\"description\")}\r\n                  onTouchStart={() => setFieldTouched(\"description\")}\r\n                  onBlur={handleBlur(\"description\")}\r\n                  placeholder=\"Nhập mô tả khuyến mãi\"\r\n                  rows={4}\r\n                />\r\n              </div>\r\n              {/* {errors.description && <span className=\"errorAdd\">{errors.description}</span>} */}\r\n\r\n              <div className='rowAdd'>\r\n                <span className='addTitle'>Thời gian khuyến mãi:</span>\r\n                <RangePicker style={{ marginBottom: 16, width: 300 }} onChange={(value, dateStr) => handleChangeRange(dateStr, handleChange)} format='DD/MM/YYYY' allowClear={false} value={[moment(values.from, 'DD/MM/YYYY'), moment(values.to, 'DD/MM/YYYY')]} />\r\n              </div>\r\n              {errors.from && <span className=\"errorAdd\">{errors.from}</span>}\r\n\r\n              <div style={{ display: \"flex\" }}>\r\n                <Button\r\n                  className=\"btnStyle\"\r\n                  type=\"primary\"\r\n                  style={{\r\n                    backgroundColor: \"#EB5757\",\r\n                    borderColor: \"white\",\r\n                  }}\r\n                  onClick={() => dispatch(SetCurrentPage.get({ currentPage: PAGE.PROMOTIONS }))}\r\n                >\r\n                  Hủy\r\n                  </Button>\r\n                <Button\r\n                  disabled={!isValid}\r\n                  className=\"btnStyle\"\r\n                  type=\"primary\"\r\n                  style={{\r\n                    backgroundColor: isValid ? COLOR.primary : 'gray',\r\n                    borderColor: \"white\",\r\n                    color: 'white'\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Lưu\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPromotionPage;\r\n","import { LoadingOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button, Spin, Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from 'moment';\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport { PAGE } from \"../constant\";\r\nimport \"../dashboard.css\";\r\nimport { GetPromotion, SetCurrentPage } from \"../redux/actions\";\r\nimport AddBusOperatorPage from \"./addBusOperator\";\r\nimport { getColumnSearchProps } from \"./searchInput\";\r\nimport AddPromotionPage from \"./addPromotion\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction PromotionList() {\r\n  const promotions = useSelector((state) => state.Dashboard.promotions);\r\n  const detailPage = useSelector((state) => state.Dashboard.detailPage);\r\n  const isLoading = useSelector((state) => state.Dashboard.isLoading);\r\n  const dispatch = useDispatch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchColumn] = useState(\"\");\r\n  const refInput = useRef();\r\n\r\n  useEffect(() => {\r\n    dispatch(GetPromotion.get());\r\n  }, []);\r\n\r\n  const onAddNewPromotion = () => {\r\n    dispatch(SetCurrentPage.get({ currentPage: PAGE.PROMOTIONS, detailPage: PAGE.ADD_PROMOTION }))\r\n  }\r\n\r\n  const promotionColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        \"promotionCode\",\r\n        \"Nhập mã khuyến mãi\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: \"Mã khuyến mãi\",\r\n      dataIndex: \"promotionCode\",\r\n      key: \"promotionCode\",\r\n      sorter: (a, b) => a.promotionCode.localeCompare(b.promotionCode),\r\n    },\r\n    {\r\n      ...getColumnSearchProps(\r\n        \"promotionName\",\r\n        \"Nhập tên khuyến mãi\",\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: \"Tên khuyến mãi\",\r\n      dataIndex: \"promotionName\",\r\n      key: \"promotionName\",\r\n      sorter: (a, b) => a.promotionName.localeCompare(b.promotionName),\r\n    },\r\n    {\r\n      title: \"Phần trăm giảm giá\",\r\n      dataIndex: \"promotionPercent\",\r\n      key: \"promotionPercent\",\r\n      sorter: (a, b) => a.promotionPercent - b.promotionPercent,\r\n      render: (value, record, index) => {\r\n        return <span>{Number(value) * 100}%</span>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Số lượng\",\r\n      dataIndex: \"quantity\",\r\n      sorter: (a, b) => a.quantity - b.quantity,\r\n    },\r\n    {\r\n      title: \"Từ ngày\",\r\n      dataIndex: \"from\",\r\n      sorter: (a, b) => moment(a.from, 'DD/MM/YYYY').diff(moment(b.from, 'DD/MM/YYYY'), 'days'),\r\n    },\r\n    {\r\n      title: \"Đến ngày\",\r\n      dataIndex: \"to\",\r\n      sorter: (a, b) => moment(a.to, 'DD/MM/YYYY').diff(moment(b.to, 'DD/MM/YYYY'), 'days'),\r\n    },\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (detailPage === PAGE.ADD_PROMOTION) {\r\n    return (\r\n      <AddPromotionPage />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chooseContainer\">\r\n      <span className=\"titleTopic\">Danh sách mã khuyến mãi</span>\r\n      <Button\r\n        type='primary'\r\n        icon={<PlusCircleOutlined />}\r\n        style={{ width: 230, marginBottom: 32 }}\r\n        onClick={() => onAddNewPromotion()}\r\n      >\r\n        Thêm mã khuyến mãi mới\r\n      </Button>\r\n      <Table columns={promotionColumns} dataSource={promotions} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PromotionList;\r\n","import {\r\n  DesktopOutlined,\r\n  LoadingOutlined,\r\n  PieChartOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Avatar, Button, Menu, Spin } from \"antd\";\r\nimport firebase from \"firebase\";\r\nimport React, { useEffect } from \"react\";\r\nimport { FiFileText, FiUsers, FiGift } from \"react-icons/fi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport BusOperator from \"./component/busOperatorTable\";\r\nimport CustomerList from \"./component/customerList\";\r\nimport Home from \"./component/homePage\";\r\nimport OrderList from \"./component/orderListTable\";\r\nimport TripList from \"./component/tripTable\";\r\nimport { PAGE } from \"./constant\";\r\nimport \"./dashboard.css\";\r\nimport {\r\n  GetAccountType,\r\n  GetBusOperatorDetail,\r\n  ResetDashboard,\r\n  SetCurrentPage,\r\n} from \"./redux/actions\";\r\nimport PromotionList from \"./component/promotionList\";\r\n\r\nconst loadingIcon = (\r\n  <LoadingOutlined style={{ fontSize: 30, color: COLOR.primary }} spin />\r\n);\r\n\r\nfunction Dashboard() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const accountType = useSelector((state) => state.Dashboard.accountType);\r\n  const accountDetail = useSelector((state) => state.Dashboard.accountDetail);\r\n  const isLoadingDashboard = useSelector(\r\n    (state) => state.Dashboard.isLoadingDashboard\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(GetAccountType.get());\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        await firebase\r\n          .database()\r\n          .ref(\"users\")\r\n          .child(firebase.auth().currentUser.uid)\r\n          .once(\"value\", async (snapshot) => {\r\n            dispatch(\r\n              GetBusOperatorDetail.get({ busOperatorId: snapshot.val() })\r\n            );\r\n          });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const currentPage = useSelector((state) => state.Dashboard.currentPage);\r\n\r\n  const onMenuSelect = ({ item, key, keyPath, selectedKeys, domEvent }) => {\r\n    dispatch(SetCurrentPage.get({ currentPage: key }));\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    firebase.auth().signOut();\r\n    dispatch(ResetDashboard.get());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const renderRightDashboard = () => {\r\n    switch (currentPage) {\r\n      case PAGE.HOME:\r\n        return <Home />;\r\n      case PAGE.BUS_OPERATOR:\r\n        return <BusOperator />;\r\n      case PAGE.TRIP_LIST:\r\n        return <TripList />;\r\n      case PAGE.PROMOTIONS:\r\n        return <PromotionList />;\r\n      case PAGE.ORDER_LIST:\r\n        return <OrderList />;\r\n      case PAGE.CUSTOMER_LIST:\r\n        return <CustomerList />;\r\n      default:\r\n        return <BusOperator />;\r\n    }\r\n  };\r\n\r\n  if (isLoadingDashboard || !accountType) {\r\n    return (\r\n      <div className=\"chooseContainer\">\r\n        <Spin indicator={loadingIcon} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // if (!accountType) {\r\n  //   return (\r\n  //     <div id=\"empty\">\r\n  //       <div id=\"errorWrap\">\r\n  //         <FrownOutlined style={{ fontSize: 60, color: COLOR.primary }} />\r\n  //         <p style={{ textAlign: \"center\", paddingBottom: 16 }}>\r\n  //           Bạn chưa đăng nhập hoặc phiên đăng nhập đã hết hạn. Nhấn đăng nhập\r\n  //           để đăng nhập lại.\r\n  //         </p>\r\n  //         <Button\r\n  //           type=\"primary\"\r\n  //           style={{\r\n  //             borderColor: \"white\",\r\n  //           }}\r\n  //           onClick={() => history.push(\"/\")}\r\n  //         >\r\n  //           Đăng nhập\r\n  //         </Button>\r\n  //       </div>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <div id=\"dashboardBg\">\r\n      <div id=\"menuContainer\">\r\n        <Avatar size={100} src=\"https://source.unsplash.com/random\" />\r\n        <span id=\"adminName\">\r\n          {accountType !== \"admin\" ? accountDetail.name : \"Admin\"}\r\n        </span>\r\n        <Menu\r\n          defaultSelectedKeys={[PAGE.HOME]}\r\n          selectedKeys={[currentPage]}\r\n          mode=\"inline\"\r\n          onSelect={onMenuSelect}\r\n        >\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key={PAGE.HOME}\r\n            icon={<PieChartOutlined />}\r\n          >\r\n            Trang chủ\r\n          </Menu.Item>\r\n          {accountType === \"admin\" && (\r\n            <Menu.Item\r\n              style={{ color: \"white\" }}\r\n              key={PAGE.BUS_OPERATOR}\r\n              icon={<PieChartOutlined />}\r\n            >\r\n              Nhà xe\r\n            </Menu.Item>\r\n          )}\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key={PAGE.TRIP_LIST}\r\n            icon={<DesktopOutlined />}\r\n          >\r\n            Chuyến xe\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            style={{ color: \"white\" }}\r\n            key={PAGE.ORDER_LIST}\r\n            icon={<FiFileText size={16} style={{ marginRight: 8 }} />}\r\n          >\r\n            Đơn hàng\r\n          </Menu.Item>\r\n          {accountType === \"admin\" && (\r\n            <Menu.Item\r\n              style={{ color: \"white\" }}\r\n              key={PAGE.PROMOTIONS}\r\n              icon={<FiGift size={16} style={{ marginRight: 8 }} />}\r\n            >\r\n              Khuyến mãi\r\n            </Menu.Item>\r\n          )}\r\n          {accountType === \"admin\" && (\r\n            <Menu.Item\r\n              style={{ color: \"white\" }}\r\n              key={PAGE.CUSTOMER_LIST}\r\n              icon={<FiUsers size={16} style={{ marginRight: 8 }} />}\r\n            >\r\n              Hành khách\r\n            </Menu.Item>\r\n          )}\r\n        </Menu>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{\r\n            width: \"80%\",\r\n            marginTop: 64,\r\n            borderColor: \"white\",\r\n          }}\r\n          onClick={() => handleSignOut()}\r\n        >\r\n          Đăng xuất\r\n        </Button>\r\n      </div>\r\n      {renderRightDashboard()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import animationData from \"assets/bus.json\";\r\nimport React from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SetTypeAccount } from \"pages/Dashboard/redux/actions\";\r\n\r\nconst defaultOptions = {\r\n  loop: true,\r\n  autoplay: true,\r\n  animationData: animationData,\r\n  rendererSettings: {\r\n    preserveAspectRatio: \"xMidYMid slice\",\r\n  },\r\n};\r\n\r\nfunction Loading() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        await firebase\r\n          .database()\r\n          .ref(\"users\")\r\n          .child(firebase.auth().currentUser.uid)\r\n          .once(\"value\", (snapshot) => {\r\n            dispatch(SetTypeAccount.get(snapshot.val()));\r\n          });\r\n        history.push(\"/dashboard\");\r\n      } else {\r\n        history.push(\"/login\");\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flex: 1,\r\n        backgroundColor: \"white\",\r\n      }}\r\n    >\r\n      <Lottie options={defaultOptions} width={400} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Login from 'pages/Login'\r\nimport Dashboard from 'pages/Dashboard'\r\nimport Loading from \"pages/Loading\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\">\r\n          <Loading />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/dashboard\">\r\n          <Dashboard />\r\n        </Route>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyBQEVkTU5GeejO-ZA_vq9rRopNoh754fMw\",\r\n  authDomain: \"dimo-3e6f7.firebaseapp.com\",\r\n  databaseURL: \"https://dimo-3e6f7.firebaseio.com\",\r\n  projectId: \"dimo-3e6f7\",\r\n  storageBucket: \"dimo-3e6f7.appspot.com\",\r\n  messagingSenderId: \"155067027749\",\r\n  appId: \"1:155067027749:web:d218c29405e42ea7ed4acc\",\r\n  measurementId: \"G-MB07KHZCFB\"\r\n};","import axios from 'axios';\r\nimport { from } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { DOMAIN, log as SysLog, __DEV__ } from 'ultis/functions';\r\n\r\nexport function request(param) {\r\n  let url = `${DOMAIN}/${param.url}`\r\n\r\n  const language = 'vi';\r\n  const parameters = param.param;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    accept: 'application/json',\r\n    \"Access-Control-Allow-Origin\": true,\r\n    'Accept-Language': language\r\n  }\r\n\r\n  if (__DEV__) {\r\n    console.info('Log_header', headers);\r\n  }\r\n\r\n  return from(\r\n    axios.request({\r\n      url,\r\n      timeout: 10000,\r\n      headers,\r\n      method: param.method || 'POST',\r\n      data: parameters\r\n    }),\r\n  ).pipe(\r\n    map((result) => {\r\n      return { result: result.data.result, status: result.status };\r\n    }),\r\n    tap((result) => log(url, parameters, result)),\r\n  );\r\n}\r\n\r\nfunction log(url, parameters, result) {\r\n  SysLog(\r\n    '--------------------------\\n',\r\n    // '\\x1b[34m',\r\n    'Request data:',\r\n    // '\\x1b[37m',\r\n    '\\nURL:           ',\r\n    // '\\x1b[32m',\r\n    url,\r\n    // '\\x1b[37m',\r\n    '\\nParam:         ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(parameters, null, '\\x1b[32m'),\r\n    // '\\x1b[37m',\r\n    '\\nResponse Data: ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(result, null, '\\x1b[32m') || true,\r\n    // '\\x1b[37m',\r\n    '\\n--------------------------',\r\n  );\r\n}\r\n","import { store } from 'core/store'\r\nimport moment from 'moment'\r\nimport { combineEpics, ofType } from 'redux-observable'\r\nimport { catchError, exhaustMap, map } from 'rxjs/operators'\r\nimport { request } from 'ultis/api'\r\nimport { PAGE } from '../constant'\r\nimport { EditOrderDetail, EditOrderDetailFailed, EditOrderDetailSuccess, GetBusOperator, GetBusOperatorDetail, GetBusOperatorDetailFailed, GetBusOperatorDetailSuccess, GetBusOperatorFailed, GetBusOperatorSuccess, GetCustomerList, GetCustomerListFailed, GetCustomerListSuccess, GetMapSeat, GetMapSeatFailed, GetMapSeatSuccess, GetOrderDetail, GetOrderDetailFailed, GetOrderDetailSuccess, GetOrderList, GetOrderListFailed, GetOrderListSuccess, GetStatistic, GetStatisticAmount, GetStatisticAmountFailed, GetStatisticAmountSuccess, GetStatisticFailed, GetStatisticSuccess, GetTripList, GetTripListFailed, GetTripListSuccess, SetCurrentPage, SetTypeAccount, GetCityData, GetCityDataSuccess, GetCityDataFailed, GetDistrictData, GetDistrictSuccess, GetDistrictFailed, GetWardData, GetWardDataSuccess, GetWardDataFailed, GetPromotion, GetPromotionSuccess, GetPromotionFailed, CreateNewPromotion, CreateNewPromotionSuccess, CreateNewPromotionFailed } from './actions'\r\n\r\nconst getBusOperatorEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetBusOperator.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'GET',\r\n        url: 'busOperator'\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetBusOperatorSuccess.get(result.result)\r\n          }\r\n          return GetBusOperatorFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetBusOperatorFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getTripListEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetTripList.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'tripsList',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetTripListSuccess.get(result.result)\r\n          }\r\n          return GetTripListFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetTripListFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getOrderListEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetOrderList.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'tickets',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetOrderListSuccess.get(result.result)\r\n          }\r\n          return GetOrderListFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetOrderListFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getCustomerListEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetCustomerList.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'GET',\r\n        url: 'getCustomers',\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetCustomerListSuccess.get(result.result)\r\n          }\r\n          return GetCustomerListFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetCustomerListFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getBusOperatorDetailEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetBusOperatorDetail.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'busOperatorDetail',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(SetTypeAccount.get(action.payload.busOperatorId))\r\n            return GetBusOperatorDetailSuccess.get(result.result)\r\n          }\r\n          return GetBusOperatorDetailFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetBusOperatorDetailFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getOrderDetailEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetOrderDetail.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'findTicketWeb',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(SetCurrentPage.get({ currentPage: PAGE.ORDER_LIST, detailPage: PAGE.ORDER_DETAIL }))\r\n            return GetOrderDetailSuccess.get(result.result)\r\n          }\r\n          return GetOrderDetailFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetOrderDetailFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst editOrderDetailEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(EditOrderDetail.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'editTickets',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return EditOrderDetailSuccess.get(result.message)\r\n          }\r\n          return EditOrderDetailFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return EditOrderDetailFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getMapSeatEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetMapSeat.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'getSeatWeb',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetMapSeatSuccess.get(result.result)\r\n          }\r\n          return GetMapSeatFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetMapSeatFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getStatisticEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetStatistic.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'getTotal',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(GetStatisticAmount.get({ busOperatorId: action.payload.busOperatorId, from: moment(new Date()).add(-7, 'days').format('DD/MM/YYYY'), to: moment(new Date()).format('DD/MM/YYYY') }))\r\n            return GetStatisticSuccess.get(result.result)\r\n          }\r\n          return GetStatisticFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetStatisticFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getStatisticAmountEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetStatisticAmount.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'getStatistic',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetStatisticAmountSuccess.get(result.result)\r\n          }\r\n          return GetStatisticAmountFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetStatisticAmountFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getCityDataEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetCityData.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'GET',\r\n        url: 'locationCity'\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetCityDataSuccess.get(result.result)\r\n          }\r\n          return GetCityDataFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetCityDataFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getDistrictDataEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetDistrictData.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'locationDistrict',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetDistrictSuccess.get(result.result)\r\n          }\r\n          return GetDistrictFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetDistrictFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getWardDataEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetWardData.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'locationWard',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetWardDataSuccess.get(result.result)\r\n          }\r\n          return GetWardDataFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetWardDataFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst getPromotionEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(GetPromotion.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'GET',\r\n        url: 'promotion'\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return GetPromotionSuccess.get(result.result)\r\n          }\r\n          return GetPromotionFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return GetPromotionFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nconst createNewPromotionEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(CreateNewPromotion.type),\r\n    exhaustMap(action => {\r\n      return request({\r\n        method: 'POST',\r\n        url: 'newPromotion',\r\n        param: action.payload\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            store.dispatch(SetCurrentPage.get({ currentPage: PAGE.PROMOTIONS }))\r\n            return CreateNewPromotionSuccess.get(result.result)\r\n          }\r\n          return CreateNewPromotionFailed.get(result)\r\n        }),\r\n        catchError((error) => {\r\n          return CreateNewPromotionFailed.get(error)\r\n        }\r\n        )\r\n      )\r\n    }))\r\n\r\nexport const dashboardEpics = combineEpics(getCityDataEpic$, getWardDataEpic$, getDistrictDataEpic$, getBusOperatorEpic$, getTripListEpic$, getOrderListEpic$, getCustomerListEpic$, getBusOperatorDetailEpic$, getOrderDetailEpic$, editOrderDetailEpic$, getMapSeatEpic$, getStatisticEpic$, getStatisticAmountEpic$, getPromotionEpic$, createNewPromotionEpic$)\r\n","import { combineEpics } from 'redux-observable';\r\nimport { dashboardEpics } from 'pages/Dashboard/redux/epics';\r\n\r\nexport const rootEpic = combineEpics(dashboardEpics);\r\n","import { PAGE } from 'pages/Dashboard/constant'\r\nimport { GetAccountType, GetBusOperator, GetBusOperatorDetail, GetBusOperatorDetailFailed, GetBusOperatorDetailSuccess, GetBusOperatorFailed, GetBusOperatorSuccess, GetCityData, GetCityDataFailed, GetCityDataSuccess, GetCustomerList, GetCustomerListFailed, GetCustomerListSuccess, GetDistrictSuccess, GetMapSeat, GetMapSeatFailed, GetMapSeatSuccess, GetOrderDetail, GetOrderDetailFailed, GetOrderDetailSuccess, GetOrderList, GetOrderListFailed, GetOrderListSuccess, GetStatistic, GetStatisticAmountFailed, GetStatisticAmountSuccess, GetStatisticFailed, GetStatisticSuccess, GetTripList, GetTripListFailed, GetTripListSuccess, GetWardDataSuccess, ResetDashboard, SetCurrentPage, SetTypeAccount, GetPromotion, GetPromotionSuccess, GetPromotionFailed } from './actions'\r\nconst initialState = {\r\n  busOperator: [],\r\n  tripList: [],\r\n  orderList: [],\r\n  customerList: [],\r\n  accountType: null,\r\n  isLoading: false,\r\n  isLoadingDashboard: false,\r\n  accountDetail: null,\r\n  orderDetail: {},\r\n  tripDetail: {},\r\n  currentPage: PAGE.HOME,\r\n  detailPage: null,\r\n  stastic: null,\r\n  statisticData: null,\r\n  cityData: [],\r\n  districtData: [],\r\n  wardData: [],\r\n  promotions: []\r\n}\r\n\r\nexport function dashboardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GetBusOperator.type:\r\n      return { ...state, isLoading: true }\r\n    case GetBusOperatorSuccess.type:\r\n      return { ...state, busOperator: action.payload.data, isLoading: false }\r\n    case GetBusOperatorFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetTripList.type:\r\n      return { ...state, isLoading: true }\r\n    case GetTripListSuccess.type:\r\n      return { ...state, tripList: action.payload, isLoading: false }\r\n    case GetTripListFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetOrderList.type:\r\n      return { ...state, isLoading: true }\r\n    case GetOrderListSuccess.type:\r\n      return { ...state, orderList: action.payload, isLoading: false }\r\n    case GetOrderListFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case SetTypeAccount.type:\r\n      return { ...state, accountType: action.payload }\r\n    case GetCustomerList.type:\r\n      return { ...state, isLoading: true }\r\n    case GetCustomerListSuccess.type:\r\n      return { ...state, customerList: action.payload, isLoading: false }\r\n    case GetCustomerListFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetBusOperatorDetail.type:\r\n      return { ...state, isLoadingDashboard: true }\r\n    case GetBusOperatorDetailSuccess.type:\r\n      return { ...state, accountDetail: action.payload, isLoadingDashboard: false }\r\n    case GetBusOperatorDetailFailed.type:\r\n      return { ...state, isLoadingDashboard: false }\r\n    case GetAccountType.type:\r\n      return { ...state, isLoadingDashboard: true }\r\n    case GetOrderDetail.type:\r\n      return { ...state, isLoading: true }\r\n    case GetOrderDetailSuccess.type:\r\n      return { ...state, orderDetail: action.payload, isLoading: false }\r\n    case GetOrderDetailFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetMapSeat.type:\r\n      return { ...state, isLoading: true }\r\n    case GetMapSeatSuccess.type:\r\n      return { ...state, tripDetail: action.payload, isLoading: false }\r\n    case GetMapSeatFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case SetCurrentPage.type:\r\n      return { ...state, currentPage: action.payload.currentPage, detailPage: action.payload.detailPage }\r\n    case ResetDashboard.type:\r\n      return { ...initialState }\r\n    case GetStatistic.type:\r\n      return { ...state, isLoading: true }\r\n    case GetStatisticSuccess.type:\r\n      return { ...state, stastic: action.payload }\r\n    case GetStatisticFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetStatisticAmountSuccess.type:\r\n      return { ...state, statisticData: action.payload, isLoading: false }\r\n    case GetStatisticAmountFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetCityData.type:\r\n      return { ...state, isLoading: true }\r\n    case GetCityDataSuccess.type:\r\n      return { ...state, cityData: action.payload, districtData: [], wardData: [], isLoading: false }\r\n    case GetCityDataFailed.type:\r\n      return { ...state, isLoading: false }\r\n    case GetDistrictSuccess.type:\r\n      return { ...state, districtData: action.payload, wardData: [] }\r\n    case GetWardDataSuccess.type:\r\n      return { ...state, wardData: action.payload }\r\n    case GetPromotion.type:\r\n      return { ...state, isLoading: true }\r\n    case GetPromotionSuccess.type:\r\n      return { ...state, promotions: action.payload, isLoading: false }\r\n    case GetPromotionFailed.type:\r\n      return { ...state, isLoading: false }\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { dashboardReducer } from 'pages/Dashboard/redux/reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  Dashboard: dashboardReducer,\r\n});\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport { rootEpic } from './epic';\r\nimport { rootReducer } from './reducer';\r\nimport { __DEV__ } from 'ultis/functions';\r\n\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nconst applyMiddlewarePro = applyMiddleware(epicMiddleware);\r\nconst applyMiddlewareDev = applyMiddleware(logger, epicMiddleware);\r\n\r\nexport const store = createStore(rootReducer, __DEV__ ? applyMiddlewareDev : applyMiddlewarePro);\r\n\r\nepicMiddleware.run(rootEpic);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { firebaseConfig } from \"./firebaseConfig\";\r\nimport firebase from \"firebase\";\r\nimport { Provider } from 'react-redux'\r\nimport { store } from 'core/store';\r\nimport { ConfigProvider } from 'antd';\r\nimport viVN from 'antd/es/locale/vi_VN';\r\nimport { IconContext } from \"react-icons\"\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ConfigProvider locale={viVN}>\r\n        <IconContext.Provider value={{ className: \"react-icon-clasname\", style: { verticalAlign: 'middle' } }}>\r\n          <App />\r\n        </IconContext.Provider>\r\n      </ConfigProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}